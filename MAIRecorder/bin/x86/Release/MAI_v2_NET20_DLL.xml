<?xml version="1.0"?>
<doc>
    <assembly>
        "MAI_v2_NET20_DLL"
    </assembly>
    <members>
        <member name="M:Goldammer.MAIChannelCT.CreateIncrementalExtensionFlowRate(Goldammer.IncrementalCounterTimestampResolution)">
            <summary>	Erzeugt einen Messkanal, der die Zeitstempelinformationen zur Volumenmessung des dazu gehörenden Inkrementalzählers aufzeichnet. </summary>
            <param name="AIResolution"> Auflösung des zeitstempels </param>
            <returns>	neuer Messkanal. </returns>
            <summaryE>	creates a measurement channel that records timestamp data from its rotary counter as a flow rate. </summaryE>
            <paramE name="AIResolution">	resolution of the timestamps. </paramE>
            <returnsE>	new  measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelCT.CreateIncrementalExtensionTimestamp(Goldammer.IncrementalCounterTimestampResolution)">
            <summary>	Erzeugt einen Messkanal, der die Zeitstempelinformationen des dazu gehörenden Inkrementalzählers aufzeichnet. </summary>
            <param name="AIResolution"> Auflösung des zeitstempels </param>
            <returns>	neuer Messkanal. </returns>
            <summaryE>	creates a measurement channel that records timestamp data from its rotary counter. </summaryE>
            <paramE name="AIResolution">	resolution of the timestamps. </paramE>
            <returnsE>	new  measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelCT.CreateIncrementalCounter(Goldammer.SignalEdge,System.Boolean,Goldammer.HardwareResetMode,Goldammer.IncrementalCounterHardwareResetEdge,Goldammer.IncrementalCounterInterpolationMode,System.Boolean)">
            <summary>	Erzeugt einen Messkanal mit Inkrementalzähler. </summary>
            <param name="AIEdge">							Zu zählende Signalflanke. </param>
            <param name="AISoftwareReset">					Wenn [true] = ein Reset wird per Software beim Messungsstart durchgeführt. </param>
            <param name="AIHardwareReset">					Wenn ungleich 'Disabled' : Reset per Hardware ermöglicht. (Bei DSP Karten ist hier sonst nur der Parameter 'Level' möglich !). </param>
            <param name="AIHWResetEdge">					Signalflanke, die einen Reset auslöst. </param>
            <param name="AIInterpolation">					Grad der Interpolation. </param>
            <param name="AISynchronizedToADChannellist">	Wenn [true] = der Zähler wird als Teil der AD-Messung erzeugt, 
												reagiert auf deren Start/Stop und erzeugt Messwerte Synchron zu den AD Messkanälen. </param>
            <returns>	neuer Messkanal. </returns>
            <summaryE>	creates a measurement channel as a rotary counter. </summaryE>
            <paramE name="AIEdge">							signal edge. </paramE>
            <paramE name="AISoftwareReset">					if [true] = the conter gets reset to 0 on measurement start. </paramE>
            <paramE name="AIHardwareReset">					id not 'Disabled' : Hardware reset is possible. (On DSP Cards only the parameter 'Level' is available !). </paramE>
            <paramE name="AIHWResetEdge">					signal edge, to perform a reset on. </paramE>
            <paramE name="AIInterpolation">					degree of interpolation. </paramE>
            <paramE name="AISynchronizedToADChannellist"> if [true] = this counter uses the AD Samplerate and is controlled by the Start/Sopt commands of the ADChannelController. </paramE>
            <returnsE>	new  measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelCT.CreateImpulseCounter(System.UInt32,Goldammer.ImpulseDirection,Goldammer.SignalEdge,System.Boolean)">
            <summary>	Erzeugt einen Messkanal mit Impuls-Zähler. </summary>
            <param name="AIPresetValue">					zu verwendender initialer Zählerstand. </param>
            <param name="AIUpDown">							Zu zählender Impuls. </param>
            <param name="AIEdge">							Zu zählender Sgnalflanke. </param>
            <param name="AISynchronizedToADChannellist">	Wenn [true] = der Zähler wird als Teil der AD-
												Messung erzeugt, reagiert auf deren Start/Stop 
												und erzeugt Messwerte Synchron zu den AD
												Messkanälen. </param>
            <returns>	neuer Messkanal. </returns>
            <summaryE>	creates a measurement channel as an impulse counter. </summaryE>
            <paramE name="AIPresetValue">					initial counter value. </paramE>
            <paramE name="AIUpDown">						impulse direction. </paramE>
            <paramE name="AIEdge">							signal edge. </paramE>
            <paramE name="AIResolution">					counter's resolution. </paramE>
            <paramE name="AISynchronizedToADChannellist"> if [true] = this counter uses the AD Samplerate and is controlled by the Start/Sopt commands of the ADChannelController. </paramE>
            <returnsE>	new  measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelCT.CreateFrequencyCounter(Goldammer.SignalEdge,Goldammer.FrequencyCounterResolution,System.Boolean)">
            <summary>	Erzeugt einen Messkanal mit Frequenz-Zähler. </summary>
            <param name="AIEdge">						 Zu zählende Signalflanke. </param>
            <param name="AIResolution">					 Auflösung des Zählers. </param>
            <param name="AISynchronizedToADChannellist"> Wenn [true] = der Zähler wird als Teil der AD-
	Messung erzeugt, reagiert auf deren Start/Stop und erzeugt Messwerte Synchron zu den AD
	Messkanälen. </param>
            <returns>	neuer Messkanal. </returns>
            <summaryE>	creates a measurement channel as a frequency counter. </summaryE>
            <paramE name="AIEdge">							signal edge. </paramE>
            <paramE name="AIResolution">					counter's resolution. </paramE>
            <paramE name="AISynchronizedToADChannellist"> if [true] = this counter uses the AD Samplerate and is controlled by the Start/Sopt commands of the ADChannelController. </paramE>
            <returnsE>	new  measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelCT.CreatePeriodCounter(Goldammer.SignalEdge,Goldammer.CounterResolution,System.Boolean)">
            <summary>	Erzeugt einen Messkanal mit Perioden-Zähler. </summary>
            <param name="AIEdge">						 Zu zählende Signalflanke. </param>
            <param name="AIResolution">					 Auflösung des Zählers. </param>
            <param name="AISynchronizedToADChannellist"> Wenn [true] = der Zähler wird als Teil der AD-
	Messung erzeugt, reagiert auf deren Start/Stop und erzeugt Messwerte Synchron zu den AD
	Messkanälen. </param>
            <returns>	neuer Messkanal. </returns>
            <summaryE>	creates a measurement channel as a preriod counter. </summaryE>
            <paramE name="AIEdge">							signal edge. </paramE>
            <paramE name="AIResolution">					counter's resolution. </paramE>
            <paramE name="AISynchronizedToADChannellist"> if [true] = this counter uses the AD Samplerate and is controlled by the Start/Sopt commands of the ADChannelController. </paramE>
            <returnsE>	new  measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelCT.CreatePulswidthCounter(Goldammer.SignalEdge,Goldammer.CounterResolution,System.Boolean)">
            <summary>	Erzeugt einen Messkanal mit Pulsweiten-Zähler. </summary>
            <param name="AIEdge">							Zu zählende Signalflanke. </param>
            <param name="AIResolution">					 Auflösung des Zählers. </param>
            <param name="AISynchronizedToADChannellist"> Wenn [true] = der Zähler wird als Teil der AD-
	Messung erzeugt, reagiert auf deren Start/Stop und erzeugt Messwerte Synchron zu den AD
	Messkanälen. </param>
            <returns>	neuer Messkanal. </returns>
            <summaryE>	creates a measurement channel as a pulsewidth counter. </summaryE>
            <paramE name="AIEdge">							signal edge. </paramE>
            <paramE name="AIResolution">					counter's resolution. </paramE>
            <paramE name="AISynchronizedToADChannellist"> if [true] = this counter uses the AD Samplerate and is controlled by the Start/Sopt commands of the ADChannelController. </paramE>
            <returnsE>	new  measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelCT.CreateUpDownCounter(System.UInt32,Goldammer.ImpulseDirection,Goldammer.SignalEdge,System.Boolean,System.Boolean)">
            <summary>	Erzeugt einen Messkanal mit Up/Down-Zähler. </summary>
            <param name="AIPresetValue">					zu verwendender initialer Zählerstand. </param>
            <param name="AIUpDown">							Zu zählender Impuls. </param>
            <param name="AIEdge">							Zu zählende Signalflanke. </param>
            <param name="AISoftwareReset">				    Wenn [true] = ein Reset wird per Software beim
											 	Messungsstart durchgeführt. </param>
            <param name="AISynchronizedToADChannellist">	Wenn [true] = der Zähler wird als Teil der AD-
												Messung erzeugt, reagiert auf deren Start/Stop
												und erzeugt Messwerte Synchron zu den AD
												Messkanälen. </param>
            <returns>	neuer Messkanal. </returns>
            <summaryE>	creates a measurement channel as an Up/Down-counter. </summaryE>
            <paramE name="AIPresetValue">					preset value (value to start on counting). </paramE>
            <paramE name="AIUpDown">						impulse type to count. </paramE>
            <paramE name="AIEdge">							signal edge. </paramE>
            <paramE name="AISoftwareReset">				    if [true] = a reset is  perfomed on
											 	measurement start per software. </paramE>
            <paramE name="AISynchronizedToADChannellist">	if [true] = this counter uses the AD Samplerate and is controlled by the Start/Sopt commands of the ADChannelController. </paramE>
            <returnsE>	new  measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelCT.SetResolution(Goldammer.CounterResolution)">
            <summary>	Setzt die Auflösung des Zählerkanals neu. </summary>
            <remarks>	Nur für Period/PulseWidth Counter </remarks>
            <param name="AIResolution">	Neue Auflösung des Zählerkanals. </param>
            <summaryE>	sets the counter's resolution. </summaryE>
            <remarksE>	applies only to Period/PulseWidth counters </remarksE>
            <paramE name="AIResolution"> counter's new resolution. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.GetMeasurementChannels">
            <summary>	Gibt eine generische Liste mit allen Messkanälen zurück. </summary>
            <returns>	generische Liste mit allen Messkanälen. </returns>
            <summaryE>	returns a generic List of all measurement channels. </summaryE>
            <returnsE>	generic List of all measurement channels. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.GetMeasurementChannel(System.UInt32)">
            <summary>	Gibt den Messkanal mit dem übergebenen Index zurück. </summary>
            <param name="AIIndex">	Nullbasierter Index des gewünschten Messkanals. </param>
            <returns>	null, wenn  der Kanal nicht existiert, sonst den gesuchten AD Messkanal. </returns>
            <summaryE>	returns the [i]th measurement chanel. </summaryE>
            <paramE name="AIIndex">	zero-based index.. </paramE>
            <returnsE>	null, if measurement channel doesn't exist, otherwise the requested measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.GetChannel(System.UInt32)">
            <summary>	Gibt den Kanal mit dem übergebenen Index zurück. </summary>
            <param name="AIIndex">	Nullbasierter Index des Gewünschten Kanals. </param>
            <returns>	null, wenn  der Kanal nicht existiert sonst den gesuchten AD Kanal. </returns>
            <summaryE>	returns the [i]th chanel. </summaryE>
            <paramE name="AIIndex">	zero-based index. </paramE>
            <returnsE>	null, if channel doesn't exist, otherwise the requested channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.EnableSoftwareClock(System.Boolean)">
            <summary>
	Steuert die SoftwareAD Messung. 
</summary>
            <remarks>	Der SoftwareAD Modus  hat eine geringere Latenz, aber ermöglicht nur
	kleine Abtastraten (Geräteabhängig).</remarks>
            <param name="AIFetchADDataInUserMode"> true = SoftwareAD verwendet, d.h. Kein EP6-Thread
	wird gestartet, sondern die Messdaten werden im Usermode von der Messkarte abgeholt (nur
	bei USB MC4 und PCI , sonst ist dieser Parameter unbenutzt)
	false = der FX2 Timer des DSP wird gestartet und die Karte pushed die Messdaten zum
	Systemtreiber. </param>
            <summaryE>
	toggles the software AD measurement
</summaryE>
            <remarksE>	the SoftwareAD mode has lower latency, but allows only small samplerates (device dependent).</remarksE>
            <paramE name="AIFetchADDataInUserMode"> true = SoftwareAD is used, i.e. no EP6-thread
	is started, but the data is fetched from the device in usermode (only forUSB MC4 und PCI devices).
	false = the DSP's FX2 timer is started so the Card pushes data to the kernel driver. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.ReadBinaryData(System.Byte[]@)">
            <summary>	Liest die Messdaten im Binärformat (nur für Streamingmode). </summary>
            <param name="ARBinaryData">     [out] Messdaten. </param>
            <returns>	 Anzahl der gelesenen Daten. </returns>
            <summaryE>	reads the data as binary (in streaming mode). </summaryE>
            <paramE name="ARBinaryData">     [out] Messdaten. </paramE>
            <returnsE>	 Anzahl der gelesenen Daten. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.ReadLastBurst(System.Int32[]@,System.Double[]@)">
            <summary>	Gibt den letzten Messburst zurück. </summary>
            <param name="ARRawData">	[out] Rohdaten. </param>
            <param name="ARValue">  	[out] Messdaten. </param>
            <returns>	Anzahl der gelesenen Daten. </returns>
            <summaryE> reads the last recorded burst </summaryE>
            <paramE name="ARRawData">	[out] raw data. </paramE>
            <paramE name="ARValue">  	[out] data. </paramE>
            <returnsE>	vumber of values. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.ConvertBinaryBurstToDoublePerChannel(System.Byte[]@,System.UInt32,System.Double[]@)">
            <summary>	Konvertiert Rohdaten aud den Streamingmode für alle Messkanäle in einen Doublevektor. </summary>
            <param name="ARBinaryData">     [in] Rohdaten. </param>
            <param name="AIOffset">	[in] Anzahl der zu überspringenden Bytes. </param>
            <param name="AROutputData">	[out] Messdaten als skalierte Werte. </param>
            <summaryE>	 converts the data in binary format from streamingmode into a vector of per-measure-channel-scaled double values. </summaryE>
            <paramE name="ARBinaryData">     [in] raw data. </paramE>
            <paramE name="AIOffset">	[in] number of bytes to skip. </paramE>
            <paramE name="AROutputData">	[out] scaled Data. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.ReadBinaryData(System.Byte[]@,System.UInt32@)">
            <summary>	Liest die Messdaten im Binärformat (nur für Streamingmode). </summary>
            <param name="ARBinaryData">     [out] Messdaten. </param>
            <param name="ARLength">	[in] Anzahl der zu lesenden Daten, [out] Anzahl der gelesenen Daten. </param>
            <summaryE>	reads the data in binary format (only for use in Streamingmode). </summaryE>
            <paramE name="ARBinaryData">     [out] data. </paramE>
            <paramE name="ARLength">	[in] size of the buffers, [out] number of values written. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.ReadLastBurst(System.Int32[]@,System.Double[]@,System.UInt32@)">
            <summary>	Gibt den letzten Messburst zurück. </summary>
            <param name="ARRawData">	    [out] Rohdaten. </param>
            <param name="ARValue">		   	[out] Messdaten. </param>
            <param name="ARNumberOfValues">	[in] Anzahl der zu lesenden Daten, [out] Anzahl der gelesenen Daten. </param>
            <summaryE>	returns the last recorded burst. </summaryE>
            <paramE name="ARRawData">	    [out] raw data. </paramE>
            <paramE name="ARValue">		   	[out] data. </paramE>
            <paramE name="ARNumberOfValues">	[in] size of the buffers, [out] number of values written. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.SetPrePostTriggerValues(System.UInt32,System.UInt32,System.Boolean)">
            <summary> Setzt die Anzahl der Werte, die vor und nach einem Triggerereignis zusätzlich aufgezeichnet werden. </summary>
            <param name="AIPreTriggerValues">   	Anzahl der Pretriggerwerte. Bitte beachten Sie, daß die Anzahl der Pretriggerwerte nicht größer als die Wertezahl im Kanalbuffer sein kann. </param>
            <param name="AIPostTriggerValues">  	Anzahl der Posttriggerwerte. Auch hier muß die Anzahl der Posttriggerwerte kleiner/gleich der Wertezahl im Kanalbuffer sein. </param>
            <param name="AIWaitForStartTrigger">	Legt fest, ob direkt nach Messstart die Messwerte transferiert werden sollen, oder ob erst ab Erfüllen des Starttriggers die Messwerte als gültig betrachtet werden. </param>
            <summaryE> Sets the pre and post trigger values. </summaryE>
            <paramE name="AIPreTriggerValues">   	number of values before trigger events to keep (must be smaller than the size of the cards channelbuffer).</paramE>
            <paramE name="AIPostTriggerValues">  	number of values after trigger events to keep. (must be smaller than the size of the cards channelbuffer). </paramE>
            <paramE name="AIWaitForStartTrigger">	determines, if the recording of values starts immediately when StartMeasure is called or if a start trigger is used. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.GetNumberOfValues">
            <summary>	Gibt die Anzahl der gepufferten Messwerte zurück. </summary>
            <returns>	Anzahl der gepufferten Messwerte. </returns>
            <summaryE>	returns the number of recorded bursts. </summaryE>
            <returnsE>	number of recorded bursts. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.GetKernelFIFOLevel">
            <summary>	Gibt den Füllstand des Kernelfifos zurück. </summary>
            <returns>	Füllstand des Kernelfifos. </returns>
            <summaryE>	returns the kernel fifo level. </summaryE>
            <returnsE>	kernel fifo level. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.GetStreamBufferSizeInByte">
            <summary>	Gibt die Größe (in Bytes) des Messwertpuffers zur. </summary>
            <returns>	Größe des Messwertpuffers in Byte. </returns>
            <summaryE>	returns the size of the streambuffer (in bytes). </summaryE>
            <returnsE>	size of the streambuffer. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.GetStreamPipeLevel">
            <summary>	Gibt den Füllstand des Streambuffers zurück. </summary>
            <returns>	Füllstand des Streambuffers. </returns>
            <summaryE>	returns the streambuffer fill level in percent. </summaryE>
            <returnsE>	 streambuffer fill level. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.GetSampleRate">
            <summary>	Gibt die momentan gesetzte AD Samplerate aus. </summary>
            <returns>	momentane AD Samplerate. </returns>
            <summaryE>	returns the AD samplerate. </summaryE>
            <returnsE>	AD samplerate. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.SetDFFilterResponse(System.UInt32,Goldammer.DFFilterResponse)">
            <summary>	setzt die hochpass filter response (bei Audio-Karten). </summary>
            <param name="AIFilterResponse"> filter response. </param>
            <summaryE>	Sets the hp filter response for an audio card. </summaryE>
            <paramE name="AIFilterResponse">	The filter response. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.ResetIEPE">
            <summary>	Unterbricht die IEPE Ausgabe aller AD Kanäle diese Gerätes . </summary>
            <summaryE>	resets the IEPE output of all AD channels on this device . </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.StopMeasurement">
            <summary>	Stoppt die AD Datenerfassung. </summary>
            <summaryE>	stops AD recording. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.StartMeasurement">
            <summary>	Startet die AD Datenerfassung. </summary>
            <summaryE>	starts AD recording. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.SetSampleRate(System.Double)">
            <summary> Setzt die AD Samplerate neu. </summary>
            <param name="AIFrequency">	Die neue AD Samplerate. </param>
            <summaryE> sets a new AD samplerate. </summaryE>
            <paramE name="AIFrequency">	samplerate. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.DeleteMeasurementChannels">
            <summary>	Löscht alle bisher definierten Messkanäle. </summary>
            <summaryE>	deletes all AD measurement channels. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerAD.GetActiveChannelListSize">
            <summary>	Gibt die Anzahl der momentan definierten AD Messkanäle zurück. </summary>
            <returns>	Anzahl der momentan definierten AD Messkanäle. </returns>
            <summaryE>	returns the number of AD measurement channels. </summaryE>
            <returnsE>	number of AD measurement channels. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelDA.CreateAutomaticOutputChannel(System.Double[])">
            <summary>
	Erzeugt einen automatischen DA Ausgabekanal. Die übergebenen Daten werden periodisch
	wiederholt ausgegeben, bis StopOutput aufgerufen wird. 
	Benötigt trotzdem die Aufrufe  von SetMeasurementNotificationnBuffer(&gt;0)
	UND StartNotificationThread().
</summary>
            <remarks>	Sind ausschließlich automatische DA Ausgabekanäle definiert, 
			so wird des Measurement Notification Event nicht mehr gefeuert.
			Trotzdem muss auch in diesem Fall der Notification Thread gestartet werden und 
			auch eine NotificationBuffergröße &gt; 0 gesetzt werden, da ansonsten keine
			Überprüfung der DA Buffer stattfindet. </remarks>
            <param name="AIOneCycleOfPeriodicData">	[in] Ausgabedaten. </param>
            <returns>	Neuer Ausgabekanal. </returns>
            <summaryE>
	creates an automatic DA output channel. The data will be transmitted periodically until StopOutput
	is called. since this machanism is handled in Usermode setting SetMeasurementNotificationnBuffer(&gt;0)
	 AND StartNotificationThread() is still necessary !	 
</summaryE>
            <remarksE>	if only DA output channels are defined, 
			the measurement notification event needs not to be handled (i.e. CAN'T be handled) by the user.
			Nevertheless the notification thread has to be started 
			and also a NotificationBuffersize &gt; 0 has to be set, otherwise no
			review of the DA buffer takes place. </remarksE>
            <paramE name="AIOneCycleOfPeriodicData">	[in] output data. </paramE>
            <returnsE>	new output channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelDA.CreateOutputChannel">
            <summary>	Erzeugt einen DA Ausgabekanal</summary>
            <returns>	Neuer Ausgabekanal. </returns>
            <summaryE>	creates a new DA output channel</summaryE>
            <returnsE>	new output channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelDA.WriteChannelVoltage(System.Double)">
            <summary>	Gibt eine Spannung auf den DA Kanal aus. </summary>
            <param name="AIVoltageValue">	Rohdatum [0..Int32.MaxValue()]. </param>
            <summaryE>	outputs the given Voltage. </summaryE>
            <paramE name="AIVoltageValue">	output value in volts. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelDA.WriteChannelRaw(System.Int32)">
            <summary>	Gibt ein Rohdatum auf den DA Kanal aus. </summary>
            <param name="AIRawValue">	Rohdatum [0..Int32.MaxValue()]. </param>
            <summaryE>	outputs a raw value </summaryE>
            <paramE name="AIRawValue">	raw value [0..Int32.MaxValue()]. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerBase.StopNotificationThread">
            <summary>	Stoppt den Benachrichtigungsmechanismus mittels Eventhandler. </summary>
            <summaryE>	stops the thread which enables the notification event. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerBase.StartNotificationThread">
            <summary>	Startet den Benachrichtigungsmechanismus mittels Eventhandler. </summary>
            <summaryE>	starts the thread which enables the notification event. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerBase.SetMeasurementBufferNotificationLevel(System.UInt32)">
            <summary>	Setzt den Wert für die Menge an Messdaten (in Messbursts), bei dessen Erreichen das Event 
			zur Bearbeitung im Usermode ausgelöst werden soll. </summary>
            <param name="AINumberOfBursts"> Schwelle für die Anzahl an Messbursts, bei der die Baerbeitungsroutine aufgerufen wird. </param>
            <summaryE>	Sets the value for the amount of measurement data (in bursts), at which point the notification event  
			will be triggered. </summaryE>
            <paramE name="AINumberOfBursts"> theshold for the notification event. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.GetMeasurementChannel(System.UInt32)">
            <summary>	Gibt den Messkanal mit dem übergebenen Index zurück. </summary>
            <param name="AIIndex">	Nullbasierter Index des gewünschten Messkanals. </param>
            <returns>	null, wenn  der Kanal nicht existiert, sonst den gesuchten TTL Messkanal. </returns>
            <summaryE>	returns the [i]th measurement chanel. </summaryE>
            <paramE name="AIIndex">	zero-based index.. </paramE>
            <returnsE>	null, if measurement channel doesn't exist, otherwise the requested measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.GetPortState(System.UInt32,System.UInt32,Goldammer.TTLPortState,Goldammer.IODirection)">
            <summary>	Gibt den Status des TTL Ports zurück. </summary>
            <param name="AIPortIndex">	  	Nullbasierter Index des TTL Ports. </param>
            <param name="AOPortWidth">	  	[out] Breite (in Bit) des ports. </param>
            <param name="AOPortState">	  	[out] Status des TTL Ports. </param>
            <param name="AOPortDirection"> [out] Richtung des TTL Ports (bei DSP Karten nicht notwendigerweise
	für alle Bits gleich, dann 'Undefined'). </param>
            <summaryE>	returns the state of the TTL ports. </summaryE>
            <paramE name="AIPortIndex">	  	zero based index of the port. </paramE>
            <paramE name="AOPortWidth">	  	[out] width (in Bit) of the ports. </paramE>
            <paramE name="AOPortState">	  	[out] state of the TTL port. </paramE>
            <paramE name="AOPortDirection"> [out] direction of the TTL port (on DSP cards not necessarily 
	equal for all bits, then it retruns 'undefined'). </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.GetMeasurementChannels">
            <summary>	Gibt eine generische Liste mit allen Messkanälen zurück. </summary>
            <returns>	generische Liste mit allen Messkanälen. </returns>
            <summaryE>	returns a generic List of all measurement channels. </summaryE>
            <returnsE>	generic List of all measurement channels. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.GetChannel(System.UInt32)">
            <summary>	Gibt den Kanal mit dem übergebenen Index zurück. </summary>
            <param name="AIIndex">	Nullbasierter Index des Gewünschten Kanals. </param>
            <returns>	null, wenn  der Kanal nicht Existiertm sonst den gesuchten AD Kanal. </returns>
            <summaryE>	returns the [i]th chanel. </summaryE>
            <paramE name="AIIndex">	zero-based index. </paramE>
            <returnsE>	null, if channel doesn't exist, otherwise the requested channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.StopMeasure">
            <summary>	Stoppt die TTL Messung. </summary>
            <summaryE>	stops the TTL measurement. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.StartMeasure">
            <summary>	Startet die TTL Messung. </summary>
            <summaryE>	starts the TTL measurement. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.InitializeTargetSettings">
            <summary>	(Obsolet) Initialisiert die konfigurierten Kanäle für eine Messung. </summary>
            <remarks>	Obsolete Funktion, wird intern vor Start Measurement automatisch ausgeführt </remarks>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.GetNumberOfBursts">
            <summary>	Gibt die Anzahl der zur Verfügung stehenden Messdaten in Burste zurück. </summary>
            <returns>	Anzahl der Messdaten im Burste. </returns>
            <summaryE>	returns the number of recorded bursts. </summaryE>
            <returnsE>	number of recorded bursts. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.GetStreamPipeLevel">
            <summary>	Gibt den Füllstand des Streambuffers in Prozent zurück. </summary>
            <returns>	Füllstand des Streambuffers. </returns>
            <summaryE>	returns the streambuffer fill level in percent. </summaryE>
            <returnsE>	 streambuffer fill level. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.WritePort(System.UInt32,System.UInt32)">
            <summary>	Beschreibt einen TTL Port. </summary>
            <param name="AIPort">	  	Portnummer (nullbasiert). </param>
            <param name="AIPortValue">	Zustand des TTL Ports (binär codiert). </param>
            <summaryE>	writes one TTL port. </summaryE>
            <paramE name="AIPort">	port number (zero-based). </paramE>
            <paramE name="AIPortValue">	state of the TTL port (binary coded). </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.ReadPort(System.UInt32)">
            <summary>	Liest einen TTL Port. </summary>
            <param name="AIPort">	Portnummer (nullbasiert). </param>
            <returns>	Zustand des TTL Ports (binär codiert). </returns>
            <summaryE>	reads one TTL port. </summaryE>
            <paramE name="AIPort">	port number (zero-based). </paramE>
            <returnsE>	state of the TTL port (binary coded). </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.ReadData(System.UInt32)">
            <inheritdoc />
            <summary>	Liest die Messdaten aus. </summary>
            <param name="AINumberOfValues">		[in] Anzahl der zu lesenden Messdaten</param>
            <returns>	Messdaten. </returns>
            <summaryE>	reads the recorded data. </summaryE>
            <paramE name="AINumberOfValues">			 	[in,out] number of values. </paramE>
            <returnsE>	data. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.ReadData(System.UInt32[]@,System.UInt32@,System.Boolean,System.Int64@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten aus. </summary>
            <param name="ARBuffer">					    [out] Array, in welches die Messdaten geschrieben werden sollen. </param>
            <param name="ARNumberOfValues">			  	[in,out] in: Anzahl der zu lesenden Messdaten, out: Anzahl der gelesenen Daten</param>
            <param name="AIReadPartiallyFilledBlocks">  wenn [true] = Es werden auch nicht komplette	Blöcke zurückgegeben. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes  in DateTime Ticks (1/10 µs). </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Sekunden (1 ms = 10000000 DateTime Ticks).  </param>
            <summary>	reads the recorded data. </summary>
            <param name="ARBuffer">		  				[out]  data. </param>
            <param name="ARNumberOfValues">			 	[in,out] number of values. </param>
            <param name="AIReadPartiallyFilledBlocks">  if [false] = only full blocks are returned.. </param>
            <paramE name="AOTimeStampT0">	 	        [out] timestamp of the first value in DateTime.Ticks (1/10 µs). </paramE>
            <paramE name="AOTimeStampDeltaT"> 	        [out] delta T of  the values in milliseconds (1 ms = 10000 DateTime ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.ReadData(System.IO.Stream@,System.UInt32)">
            <inheritdoc />
            <summary>	Liest die Messdaten aus. </summary>
            <param name="ARDataStream">				[ref] Messdaten-Stream,der beschrieben werden soll. </param>
            <param name="AINumberOfValues">			[in]  Anzahl der zu lesenden Messdaten.</param>
            <summaryE>	reads the recorded data. </summaryE>
            <paramE name="ARDataStream">		  				[ref]  stream, to which the data will be wirtten. </paramE>
            <paramE name="AINumberOfValues">			 	[in] number of values to read. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.ReadData(System.UInt32[]@,System.UInt32@,System.Boolean,System.DateTime@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten aus. </summary>
            <param name="ARBuffer">					    [out] Array, in welches die Messdaten geschrieben werden sollen. </param>
            <param name="ARNumberOfValues">			  	[in,out] in: Anzahl der zu lesenden Messdaten, out: Anzahl der gelesenen Daten</param>
            <param name="AIReadPartiallyFilledBlocks">  wenn [true] = Es werden auch nicht komplette	Blöcke zurückgegeben. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes. </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Millisekunden (1 ms = 10000 DateTime Ticks).  </param>
            <summary>	reads the recorded data. </summary>
            <param name="ARBuffer">		  				[out]  data. </param>
            <param name="ARNumberOfValues">			 	[in,out] number of values. </param>
            <param name="AIReadPartiallyFilledBlocks">  if [false] = only full blocks are returned.. </param>
            <paramE name="AOTimeStampT0">	 	        [out] timestamp of the first value in DateTime.Ticks (1/10 µs). </paramE>
            <paramE name="AOTimeStampDeltaT"> 	        [out] delta T of  the values in milliseconds (1 ms = 10000 DateTime ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.ReadData(System.UInt32[]@,System.UInt32@,System.Boolean)">
            <summary>	Liest die Messdaten aus. </summary>
            <param name="ARBuffer">					    [out] Array, in welches die Messdaten geschrieben werden sollen. </param>
            <param name="ARNumberOfValues">			  	[in,out] in: Anzahl der zu lesenden Messdaten, out: Anzahl der gelesenen Daten</param>
            <param name="AIReadPartiallyFilledBlocks">	 wenn [true] werden auch Datenblöcke gelesen, die sich nicht über die komplette definierte Kanalanzahl erstrecken. </param>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.GetActiveChannelListSize">
            <summary>	Gibt die Anzahl der bisher definierten TTL Messkanäle zurück. </summary>
            <returns>	Anzahl der bisher definierten TTL Messkanäle. </returns>
            <summaryE>	returns the number of TTL measurement channels. </summaryE>
            <returnsE>	number of TTL measurement channels. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.GetSampleRate">
            <summary>	Gibt die momentan gesetzte TTL Samplerate aus. </summary>
            <returns>	momentane TTL Samplerate. </returns>
            <summaryE>	returns the TTL samplerate. </summaryE>
            <returnsE>	TTL samplerate. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.SetSampleRate(System.Double)">
            <summary>	Setzt die Samplefrequenz der TTL Messkanäle neu. </summary>
            <param name="AIFrequency">	Neue Samplefrequenz der TTL Messkanäle. </param>
            <summaryE> sets a new TTL samplerate. </summaryE>
            <paramE name="AIFrequency">	samplerate. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerTTL.DeleteMeasurementChannels">
            <summary>	Löscht alle bisher konfigurierten TTL Messkanäle. </summary>
            <summaryE>	deletes all TTL measurement channels. </summaryE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetRootMeanSquare(System.String)">
            <inheritdoc cref="M:Goldammer.MAIDataSinkPreview.GetRootMeanSquare(System.Int32)" />
            <param name="AIColumnName"> Spaltenname des Kanals </param>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetRootMeanSquare(System.Int32)">
            <summary>2 Überladungen: Gibt den Effektivwert (Root Mean Square) des Vorschaupuffers einer Spalte zurück. Der
		   Zugriff erfolgt entweder über den Spaltenindex oder den Spaltennamen.</summary>
            <param name="AIColumnIndex"> Null-basierter Index Kanals </param>
            <returns>	Effektivwert (RMS). </returns>
            <summaryE>2 overloads: returns the Root Mean Square of one columns preview buffer. Columns are accessed by index or by name. </summaryE>
            <paramE name="AIIndex"> zero-based index </paramE>
            <paramE name="AIColumnName"> column name </paramE>
            <returnsE> Root Mean Square (RMS). </returnsE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetAverage(System.String)">
            <inheritdoc cref="M:Goldammer.MAIDataSinkPreview.GetAverage(System.Int32)" />
            <param name="AIColumnName"> Spaltenname des Kanals </param>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetAverage(System.Int32)">
            <summary> Gibt den Mittelwert des Vorschaupuffers einer Spalte zurück. Der
		   Zugriff erfolgt entweder über den Spaltenindex oder den Spaltennamen.</summary>
            <param name="AIColumnIndex"> Null-basierter Index Kanals </param>
            <returns>	Mittelwert. </returns>
            <summaryE>2 overloads: returns the average of one columns preview buffer. Columns are accessed by index or by name. </summaryE>
            <paramE name="AIIndex"> zero-based index </paramE>
            <paramE name="AIColumnName"> column name </paramE>
            <returnsE> Average. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetBufferMaxMin(System.String,System.Double@,System.Double@)">
            <summary>	Gibt die Extrema im Preview-Puffer einer Spalte zurück. </summary>
            <param name="AIColumnname">	Name der Spalte. </param>
            <param name="AOMaximum">	[out] Maximum. </param>
            <param name="AOMinimum">	[out] Minimum. </param>
            <summaryE>	returns the extrema of one columns preview buffer. </summaryE>
            <paramE name="AIColumnname">	column name. </paramE>
            <paramE name="AOMaximum">	[out] maximum. </paramE>
            <paramE name="AOMinimum">	[out] minimum. </paramE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetBufferMax(System.String)">
            <summary>	Gibt den gtrößten Wert im Preview-Puffer einer Spalte zurück. </summary>
            <param name="AIColumnname">	Name der Spalte. </param>
            <returns>	Maxuimum der Spalte. </returns>
            <summaryE>	returns the maximum value of one columns preview buffer. </summaryE>
            <paramE name="AIColumnname">	column name. </paramE>
            <returnsE>	maximum value of one column. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetBufferMin(System.String)">
            <summary>	Gibt den kleinsten Wert im Preview-Puffer einer Spalte zurück. </summary>
            <param name="AIColumnname">	Name der Spalte. </param>
            <returns>	Minuimum der Spalte. </returns>
            <summaryE>	returns the minumum value of one columns preview buffer. </summaryE>
            <paramE name="AIColumnname">	column name. </paramE>
            <returnsE>	minumum value of one column. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetBufferMaxMin(System.Int32,System.Double@,System.Double@)">
            <summary>	Gibt die Extrema im Preview-Puffer einer Spalte zurück. </summary>
            <param name="AIColumnIndex">	Index der Spalte. </param>
            <param name="AOMaximum">	[out] Maximum. </param>
            <param name="AOMinimum">	[out] Minimum. </param>
            <summaryE>	returns the extrema of one columns preview buffer. </summaryE>
            <paramE name="AIColumnIndex">	column index. </paramE>
            <paramE name="AOMaximum">	[out] maximum. </paramE>
            <paramE name="AOMinimum">	[out] minimum. </paramE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetBufferMax(System.Int32)">
            <summary>	Gibt den größten Wert im Preview-Puffer einer Spalte zurück. </summary>
            <param name="AIColumnIndex">	Index der Spalte. </param>
            <returns>	Maximum der Spalte. </returns>
            <summaryE>	returns the maximum value of one columns preview buffer. </summaryE>
            <paramE name="AIColumnIndex">	column index. </paramE>
            <returnsE>	maximum value of one column. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.GetBufferMin(System.Int32)">
            <summary>	Gibt den kleinsten Wert im Preview-Puffer einer Spalte zurück. </summary>
            <param name="AIColumnIndex">	Index der Spalte. </param>
            <returns>	Minuimum der Spalte. </returns>
            <summaryE>	returns the minumum value of one columns preview buffer. </summaryE>
            <paramE name="AIColumnIndex">	column index. </paramE>
            <returnsE>	minumum value of one column. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.AddDataColumn(System.String,System.Type)">
            <summary> Fügt der Vorschau eine neue Spalte hinzu. </summary>
            <param name="AIName">	Name der neuen Spalte. </param>
            <param name="AIType">	Datentyp der neuen Spalte. </param>
            <summaryE> adds a new column to the preview. </summaryE>
            <paramE name="AIName">	name of the new column. </paramE>
            <paramE name="AIType">	data type of the new column. </paramE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.Clear">
            <summary>	Versetzt das Vorschau-Objekt in den Grundzustand. </summary>
            <summaryE>	Clears the preview. </summaryE>
        </member>
        <member name="M:Goldammer.MAIDataSinkPreview.Update">
            <summary>	Aktualisiert die Vorschau. </summary>
            <summaryE>	Updates the preview. </summaryE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionsList.AddFFTAnalyzer(Goldammer.FFTPoints,Goldammer.FFTSpektrum,System.Double,Goldammer.FIRWindow,System.Double)">
            <summary>	Fügt eine FFT Frequenzanalyse hinzu. </summary>
            <param name="AIAnzahlFFTPunkte">		  	Anzahl der Stützstellen. </param>
            <param name="AIErgebnisSpektrum">		  	Ergebnisspektrum. </param>
            <param name="AIGain">					  	Verstärkungsfaktor. </param>
            <param name="AIFIRFensterFunktion">		  	FIR Fensterfunktion (wird hier 'Rechteck' angegeben, so wird keine Fensterfunktion verwendet). </param>
            <param name="AIKaiserWindowParameterBeta">	Kaiserfenster Parameter Beta (wird bei einer anderen Fensterfunktion ignoriert). </param>
            <returns>	neue FFT Frequenzanalyse </returns>
            <summaryE>	adds an FFT analyzer. </summaryE>
            <paramE name="AIAnzahlFFTPunkte">		  	number of FFT points. </paramE>
            <paramE name="AIErgebnisSpektrum">		  	type of spectrum. </paramE>
            <paramE name="AIGain">					  	gain factor. </paramE>
            <paramE name="AIFIRFensterFunktion">		FIR window function (ignored, when 'rectangular' is chosen). </paramE>
            <paramE name="AIKaiserWindowParameterBeta">	Kaiser window parameter Beta (otherwise ignored). </paramE>
            <returnsE>	new FFT analyzer </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionsList.AddPIDController(System.Double,System.Double,System.Double,Goldammer.PIDControllerType,System.Double,System.Double,System.Double,System.Double,System.UInt32,System.Double)">
            <summary>	Fügt einen PID Regler hinzu. </summary>
            <param name="AIPAnteil">	  	P Anteil. </param>
            <param name="AIIAnteil">	  	I Anteil. </param>
            <param name="AIDAnteil">	  	D Anteil. </param>
            <param name="AIReglerArt">	  	Art des Reglers. </param>
            <param name="AIGain">		  	Verstärkung des IST-Wertes. </param>
            <param name="AISollwert">	  	Vorgabe des zu haltenden Sollwertes. </param>
            <param name="AIMinValue">	  	Untere Grenze, bis zu der geregelt wird. </param>
            <param name="AIMaxValue">	  	Obere Grenze, bis zu der geregelt wird. </param>
            <param name="AIDAKanalNummer">	Kanalnummer das DA Kanals, auf dem die Stellgröße ausgegeben wird. </param>
            <param name="AISampleFreq">   	Analoge Abtastrate der Messung. Für die Berechnung der Koeffizienten muß die spätere Abtastrate bekannt sein, um exakte Ergebnisse liefern zu können. Bitte spezifizieren Sie hier die Abtastrate, die auch später bei der Messung genutzt wird. </param>
            <returns>	neuer PID Regler </returns>
            <summaryE>	adds a new PID controller. </summaryE>
            <paramE name="AIPAnteil">	  	P portion. </paramE>
            <paramE name="AIIAnteil">	  	I portion. </paramE>
            <paramE name="AIDAnteil">	  	D portion. </paramE>
            <paramE name="AIReglerArt">	  	controller algorithm. </paramE>
            <paramE name="AIGain">		  	gain factor of the actual value. </paramE>
            <paramE name="AISollwert">	  	desired value. </paramE>
            <paramE name="AIMinValue">	  	minimum control value. </paramE>
            <paramE name="AIMaxValue">	  	maximim control value. </paramE>
            <paramE name="AIDAKanalNummer">	channel number of the DA channel used for output. </paramE>
            <paramE name="AISampleFreq">   	analog samplerate the measurement.should be equal to the value given to the ADChannelController. </paramE>
            <returnsE>	neuer PID Regler </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionsList.AddIIRFilter(Goldammer.FilterType,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,Goldammer.IIRFilterDesign,System.UInt32)">
            <summary>	Fügt einen IIR Filter mittels Designspezifikationen hinzu. </summary>
            <param name="AIFilterTyp">			  	Filtertyp. </param>
            <param name="AISampleRate">			    Abtastrate (sollte der in SetSampleRate des ADChannelControllers gesetzten entsprechen). </param>
            <param name="AICutoffFreqLow">		  	Mittlere Frequenz des Übergangsbereiches. </param>
            <param name="AICutoffFreqHigh">		    Mittlere Frequenz des zweiten Übergangsbereiches (bei Bandpass/Bandstop, sonst unbenutzt). </param>
            <param name="AINormalizedFrequencies">  Frequenz, nach der die bilineare Transformation 	durchgeführt wird. </param>
            <param name="AIPassabsorbtion">		  	Durchlassdämpfung des Filters in dB. </param>
            <param name="AIStopbandattenuation">  	Sperrdämpfung des Filters in dB. </param>
            <param name="AIDesignMethod">		  	Design Methode. </param>
            <param name="AIOrder">				    Ordnung das Filters. </param>
            <returns>	neuer Filter. </returns>
            <summaryE>	designs and adds a new IIR filter. </summaryE>
            <paramE name="AIFilterTyp">			  	Filter type. </paramE>
            <paramE name="AISampleRate">			SetSampleRate (should be equal to the value set in ADChannelControllers). </paramE>
            <paramE name="AICutoffFreqLow">		  	lower cutoff frequency. </paramE>
            <paramE name="AICutoffFreqHigh">		upper cutoff frequency (only used with bandpass/bandstop filters). </paramE>
            <paramE name="AINormalizedFrequencies"> if [true] = frequencies are normalized. In this case the Samplerate is ingored. </paramE>
            <paramE name="AIPassabsorbtion">		pass absorbtion in dB. </paramE>
            <paramE name="AIStopbandattenuation">  	stopband attenuation in dB. </paramE>
            <paramE name="AIDesignMethod">		  	design method. </paramE>
            <paramE name="AIOrder">				    fitler order. </paramE>
            <returnsE>	new filter. </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionsList.AddFIRFilter(Goldammer.FilterType,System.Double,System.Double,System.Double,System.Boolean,System.UInt32,Goldammer.FIRWindow,System.Double,System.Boolean)">
            <summary>	Fügt einen FIR Filter mittels Designspezifikationen hinzu. </summary>
            <param name="AIFilterTyp">			  	Filtertyp. </param>
            <param name="AISampleRate">			    Abtastrate (sollte der in SetSampleRate des ADChannelControllers gesetzten entsprechen). </param>
            <param name="AICutoffFreqLow">		 	Mittlere Frequenz des Übergangsbereiches. </param>
            <param name="AICutoffFreqHigh">		    Mittlere Frequenz des zweiten Übergangsbereiches (bei Bandpass/Bandstop, sonst unbenutzt). </param>
            <param name="AINormalizedFrequencies"> wenn [true] = die voangehenden Werte für die Eckfrequenzen	sind bereits normalisiert. Die Abtastrate wird in diesem Fall ingoriert. </param>
            <param name="AIOrder">				   Maximale Ordnung das Filters (0= keine Obergrenze). </param>
            <param name="AIFilterWindow">		  	Fensterfunktion. </param>
            <param name="AIWindowParameter">	  	Parameter für Kaiser (beta) und Dolph Tschebytscheff (alpha) </param>
            <param name="AIScalePassband">		  	Wenn [true], werden die Koeffizienten skaliert. </param>
            <returns>	neuer Filter. </returns>
            <summaryE>	designs and adds a new FIR filter. </summaryE>
            <paramE name="AIFilterTyp">			  	Filter type. </paramE>
            <paramE name="AISampleRate">			SetSampleRate (should be equal to the value set in ADChannelControllers). </paramE>
            <paramE name="AICutoffFreqLow">		 	lower cutoff frequency. </paramE>
            <paramE name="AICutoffFreqHigh">		upper cutoff frequency (only used with bandpass/bandstop filters). </paramE>
            <paramE name="AINormalizedFrequencies"> if [true] = frequencies are normalized. In this case the Samplerate is ingored. </paramE>
            <paramE name="AIOrder">				    maximum filter ordnung ( 0 = no boundary). </paramE>
            <paramE name="AIFilterWindow">		  	window function. </paramE>
            <paramE name="AIWindowParameter">	  	parameter for Kaiser (beta) / Dolph Tschebytscheff (alpha) </paramE>
            <paramE name="AIScalePassband">		  	if [true]=  coefficients are scaled to receive a Passband = 1. </paramE>
            <returnsE>	new filter. </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionsList.AddIIRFilter(System.Double[],System.Double,System.UInt32)">
            <summary>	Fügt einen extern entworfenen IIR Filter hinzu. </summary>
            <param name="AICoefficients">	 	[in] Koeffizientenliste. </param>
            <param name="AIOutputGainFactor">	Gain Faktor des Filters. </param>
            <param name="AIOrder">			 	Ordnung des Filters. </param>
            <returns>	neuer Filter. </returns>
            <summaryE>	adds an externally designed IIR filter. </summaryE>
            <paramE name="AICoefficients">	 	[in] coefficient list. </paramE>
            <paramE name="AIOutputGainFactor">	gain factor. </paramE>
            <paramE name="AIOrder">			 	filter Order. </paramE>
            <returnsE>	new filter. </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionsList.AddFIRFilter(System.Double[],System.Double,System.UInt32)">
            <summary>	Fügt einen extern entworfenen FIR Filter hinzu. </summary>
            <param name="AICoefficients">	 	[in] Koeffizientenliste. </param>
            <param name="AIOutputGainFactor">	Gain Faktor des Filters. </param>
            <param name="AIOrder">			 	Grad des Filters. </param>
            <returns>	neuer Filter. </returns>
            <summaryE>	adds an externally designed FIR filter. </summaryE>
            <paramE name="AICoefficients">	 	[in] coefficient list. </paramE>
            <paramE name="AIOutputGainFactor">	gain factor. </paramE>
            <paramE name="AIOrder">			 	filter order. </paramE>
            <returnsE>	new filter. </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionsList.AddTrigger(System.Boolean,System.Double,System.Double,Goldammer.TriggerType,System.Boolean,System.Boolean,System.Boolean,System.UInt32,Goldammer.IOBitState,Goldammer.IOBitState)">
            <summary>	Fügt einen Trigger-Eintrag hinzu. </summary>
            <param name="AIAktiv">				  	[true] = trigger wird genutzt. </param>
            <param name="AISchwellwert1">		  	Schwellwert1. </param>
            <param name="AISchwellwert2">		    Schwellwert2. </param>
            <param name="AITyp">				  	Triggertyp. </param>
            <param name="AIEnabledAtStart">		  	[true] = beim start der messung aktiviert. </param>
            <param name="AITriggerStartetMessung">	[true] = Trigger startet messung. </param>
            <param name="AITriggerSetztTTL">	  	[true] = Trigger setzt TTL Ausgang. </param>
            <param name="AITTLKlemme">			  	TTL Klemme. </param>
            <param name="AITTLStartZustand">	  	Start Zustand der TTL Klemme. </param>
            <param name="AITTLTriggeredZustand">  	Triggered Zustand der TTL Klemme. </param>
            <returns>	neuer Trigger. </returns>
            <summaryE>	adds a nwe trigger entry. </summaryE>
            <paramE name="AIAktiv">				  	[true] = trigger is used. </paramE>
            <paramE name="AISchwellwert1">		  	threshold 1. </paramE>
            <paramE name="AISchwellwert2">		    threshold 2. </paramE>
            <paramE name="AITyp">				  	trigger type. </paramE>
            <paramE name="AIEnabledAtStart">		[true] = trigger is armed when starting a measurement. </paramE>
            <paramE name="AITriggerStartetMessung">	[true] = the trigger starts the measurement. </paramE>
            <paramE name="AITriggerSetztTTL">	  	[true] = the trigger toggles a TTL connetor. </paramE>
            <paramE name="AITTLKlemme">			  	TTL Pin. </paramE>
            <paramE name="AITTLStartZustand">	  	initial state of the TTL connetor. </paramE>
            <paramE name="AITTLTriggeredZustand">  	triggered state of the TTL connetor. </paramE>
            <returnsE>	new trigger. </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionsList.AddTrigger(Goldammer.RealtimeSetupTrigger,Goldammer.RealtimeSetupTrigger,System.Boolean)">
            <summary>	Fügt einen Trigger-Eintrag hinzu. </summary>
            <param name="AIStartTriggerParameter">	Einstellungen für den Start-Trigger. </param>
            <param name="AIStopTriggerParameter"> 	Einstellungen für den Stop-Trigger. </param>
            <param name="AIReTrigger">			  	[true]= nach Erfüllen des Starttriggers wird der darauffolgende Stoptrigger freigeschaltet, der nach Erfüllen wieder den Starttrigger aktiviert. Auf diese Weise können sich selbst wieder aktivierende Trigger erzeugt werden. </param>
            <returns>	neuer Filter </returns>
            <summaryE>	adds a new trigger entry. </summaryE>
            <paramE name="AIStartTriggerParameter">	start trigger parameters. </paramE>
            <paramE name="AIStopTriggerParameter"> 	stop trigger parameters. </paramE>
            <paramE name="AIReTrigger">			  	[true]= after fireing the start trigger the stop trigger is armed, which arms the start trigger when fired and so on... </paramE>
            <returnsE>	neuer Filter </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionsList.#ctor(Goldammer.MAIDevice,Goldammer.MAIMeasurementChannelAD)">
            <summary>	Default constructor. </summary>
        </member>
        <member name="T:Goldammer.MAIDeviceSimulator">
            <summary>	Goldammer Messkarte. </summary>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ScaleData(System.UInt32[]@,System.Double[]@,System.Int32@)">
            <summary>	Skaliert die übergebenen Rohdaten je nach verwendetem Countertyp. </summary>
            <param name="AIRawData">    [in] Rohdaten. </param>
            <param name="AIScaledData"> [out] Skaliere Daten </param>
            <summaryE>	scales the raw values counter type dependent. </summaryE>
            <paramE name="AIRwaData">    [in] raw values. </paramE>
            <paramE name="AIScaledData"> [out] scaled values. </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ReadData(System.Double[]@,System.UInt32@,System.Int64@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten als vorzeichenbehaftete und nach Countertyp (bei allen zeitbehafteten Zählern) skalierte  Werte. </summary>
            <param name="AIData">		                [out] Messdaten. </param>
            <param name="AILength">						[in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes in DateTime Ticks (1/10 µs). </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Sekunden (1 ms = 10000000 DateTime Ticks).  </param>
            <summaryE>	reads the measured data in counter type dependent scaled format. </summaryE>
            <paramE name="AIData">		                [out] measured data. </paramE>
            <paramE name="AILength">					[in] number of values to read,[out] number of values read. </paramE>
            <paramE name="AOTimeStampT0">	 	        [out] timestamp des of the first value in DateTime Ticks (1/10 µs).</paramE>
            <paramE name="AOTimeStampDeltaT"> 	        [out] delta T between the values in seconds (1 s = 10000000 DateTime Ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ReadData(System.Double[]@,System.UInt32@,System.DateTime@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten als vorzeichenbehaftete und nach Countertyp (bei allen zeitbehafteten Zählern) skalierte  Werte. </summary>
            <param name="AIData">		                [out] Messdaten. </param>
            <param name="AILength">						[in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes. </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Sekunden (1 s = 10000000 DateTime Ticks).  </param>
            <summaryE>	reads the measured data in counter type dependent scaled format. </summaryE>
            <paramE name="AIData">		                [out] measured data. </paramE>
            <paramE name="AILength">					[in] number of values to read,[out] number of values read. </paramE>
            <paramE name="AOTimeStampT0">	 	        [out] timestamp des of the first value  </paramE>
            <paramE name="AOTimeStampDeltaT"> 	        [out] delta T between the values in seconds (1 s = 10000000 DateTime Ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ReadData(System.Double[]@,System.UInt32@)">
            <inheritdoc />
            <summary>	Liest die Messdaten als vorzeichenbehaftete und nach Countertyp (bei allen zeitbehafteten Zählern) skalierte  Werte. </summary>
            <param name="AIData">		    [out] Messdaten. </param>
            <param name="AILength">         [in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <summaryE>	reads the measured data in counter type dependent scaled format. </summaryE>
            <paramE name="AIData">		    [out] measured data. </paramE>
            <paramE name="AILength">        [in]  number of values to read,[out] number of values read. </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ReadData(System.UInt32[]@,System.UInt32@,System.Int64@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten als 4Byte Rohwert ohne Vorzeichen. </summary>
            <param name="AIData">					    [out] Messdaten. </param>
            <param name="AILength">						[in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes in DateTime Ticks (1/10 µs). </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Sekunden (1 s = 10000000 DateTime Ticks).  </param>
            <summaryE>	reads the measured data in 4byte raw format (unsigned). </summaryE>
            <paramE name="AIData">						[out] measured data. </paramE>
            <paramE name="AILength">					[in]  number of values to read,[out] number of values read. </paramE>
            <paramE name="AOTimeStampT0">	 	        [out] timestamp des of the first value in DateTime Ticks (1/10 µs). </paramE>
            <paramE name="AOTimeStampDeltaT"> 	        [out] delta T between the values in seconds (1 s = 10000000 DateTime Ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ReadData(System.UInt32[]@,System.UInt32@,System.DateTime@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten als 4Byte Rohwert ohne Vorzeichen. </summary>
            <param name="AIData">						[out] Messdaten. </param>
            <param name="AILength">						[in] Anzahl er zu lesenden Daten,[out] Anzahl der gelesenen Daten. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes. </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Sekunden (1 ms = 10000 DateTime Ticks).  </param>
            <summaryE>	reads the measured data in 4byte raw format (unsigned). </summaryE>
            <paramE name="AIData">						[out] measured data. </paramE>
            <paramE name="AILength">					[in]  number of values to read,[out] number of values read. </paramE>
            <paramE name="AOTimeStampT0">	 	        [out] timestamp des of the first value. </paramE>
            <paramE name="AOTimeStampDeltaT"> 	        [out] delta T between the values in seconds (1 ms = 10000 DateTime Ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ReadData(System.UInt32)">
            <inheritdoc />
            <summary>	Liest die Messdaten als 4Byte Rohwert ohne Vorzeichen. </summary>
            <param name="AILength"> [in] Anzahl er zu lesenden Daten. </param>
            <returns>	Messdaten. </returns>
            <summaryE>	reads the measured data in 4byte raw format (unsigned). </summaryE>
            <paramE name="AILength"> [in] number of values to read. </paramE>
            <returnsE>	measured data. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ReadData(System.IO.Stream@,System.UInt32)">
            <inheritdoc />
            <summary>	Liest die Messdaten als 4Byte Rohwert ohne Vorzeichen und speichert sie in einen Stream. </summary>
            <param name="ARDataStream">			[ref] Messdaten-Stream. </param>
            <param name="AILength">				[in] Anzahl er zu lesenden Daten. </param>
            <summaryE>	reads the measured data in 4byte raw format and stores it into a stream. </summaryE>
            <paramE name="ARDataStream">			[ref] stream to write into. </paramE>
            <paramE name="AILength">				[in] number of values to read. </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ReadData(System.UInt32[]@,System.UInt32@)">
            <summary>	Liest die Messdaten als 4Byte Rohwert ohne Vorzeichen. </summary>
            <param name="AIData">						[out] Messdaten. </param>
            <param name="AILength">						[in] Anzahl er zu lesenden Daten,[out] Anzahl der gelesenen Daten. </param>
            <summaryE>	reads the measured data in 4byte raw format. </summaryE>
            <paramE name="AIData">						[out] measurement ata. </paramE>
            <paramE name="AILength">				    [in] number of values to read,[out] number of values read. </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelCT.ReadSingleValue">
            <summary>	Liest einen Zählerstand unabhängig von der Messung. </summary>
            <returns>	Zählerstand. </returns>
            <summaryE>	reads the counter once. </summaryE>
            <returnsE>	counter reading. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelTTL.SelectPort(System.UInt32[])">
            <summary>	Gibt den Status dieses Ports in den übergebenen Messdaten zurück. </summary>
            <param name="AIMasuredata">	Von ReadData erhaltene Messdaten. </param>
            <returns>	Status des Messkanal-Ports  in diesen Messdaten. </returns>
            <summaryE>	returns the state of the port that represents this measurement channel in the measured word. </summaryE>
            <paramE name="AIMasuredata"> data received by ReadData. </paramE>
            <returnsE>	this channel's states. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelTTL.SelectBit(System.UInt32[])">
            <summary>	Gibt den Status dieses Ports im übergebenen Datenwort zurück. </summary>
            <param name="AIMasuredata">	Von ReadData erhaltene Datenworte. </param>
            <returns>	Status des Messkanal-Ports  in diesem Datenwort. </returns>
            <summaryE>	returns the state of the bit that represents this measurement channel in the measured word. </summaryE>
            <paramE name="AIMasuredata">  data received by ReadData. </paramE>
            <returnsE>	this channel's states. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelTTL.SelectPort(System.UInt32)">
            <summary>	Gibt den Status dieses Messkanals in den übergebenen Messdaten zurück. </summary>
            <param name="AIMasuredata">	Von ReadData erhaltene Messdaten. </param>
            <returns>	Status des Messkanal-Bits in diesen Messdaten. </returns>
            <summaryE>	returns the state of the port that represents this measurement channel in the measured word. </summaryE>
            <paramE name="AIMasuredata"> a data word received by ReadData. </paramE>
            <returnsE>	this channel's state. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelTTL.SelectBit(System.UInt32)">
            <summary>	Gibt den Status dieses Messkanals im übergebenen Datenwort zurück. </summary>
            <param name="AIMasuredata">	Von ReadData erhaltenes Datenwort. </param>
            <returns>	Status des Messkanal-Bits in diesem Datenwort. </returns>
            <summaryE>	returns the state of the bit that represents this measurement channel in the measured word. </summaryE>
            <paramE name="AIMasuredata"> a data word received by ReadData. </paramE>
            <returnsE>	this channel's state. </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionTrigger.Apply">
            <summary>	Applies the Settings to the Hardware. </summary>
            <returns>	. </returns>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionTrigger.#ctor(Goldammer.MAIDevice,Goldammer.MAIMeasurementChannelAD,Goldammer.RealtimeSetupTrigger,Goldammer.RealtimeSetupTrigger,System.Boolean)">
            <summary>	Constructor. </summary>
            <param name="AIDevice">			  	[in,out] If non-null, the ai device. </param>
            <param name="AIChannel">		  	[in,out] If non-null, the aic hannel. </param>
            <param name="AIStartTriggerSetup">	The ai filter mode. </param>
            <param name="AIStopTriggerSetup"> 	If non-null, the ai coefficients. </param>
            <param name="AIReTrigger">		  	The ai order. </param>
        </member>
        <member name="T:Goldammer.MAIOperationNotSupportedException">
            <summary>	Goldammer Exception-Klasse, die geworfen wird, wenn eine gewünschte Aktion 
			per Definition nicht durchgeführt werden kann.  </summary>
            <remarks>	Wird lokalisiert auf deutsch oder Englisch (eingestellte Systemsparache). </remarks>
            <summaryE>	Goldammer exception classe. gets thrown, when an operation is not available.  </summaryE>
            <remarksE>	gets localized to the system language. </remarksE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelDA.GetFifoSize">
            <summary>	Gibt die Gesamtgröße des Ausgabepuffers dieses Kanals in Byte zurück. 
			Dieser wert ist Abhängig von der Messungskonfiguration. Er wird sich also 
			beim hinzufügen neuer Messkanäle ändern. </summary>
            <returns>	Gesamtgröße des Ausgabepuffers dieses Kanals in Byte. </returns>
            <summaryE>	returns the size of the output buffer. 
			this value depends on the measurement configuration and will only change by assigning 
			a different number of measurement/output channels. </summaryE>
            <returnsE>	size of the output buffer. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelDA.GetFifoSpace">
            <summary>	Gibt den freien Platz im Ausgabepfuffer der Karte in Bytes zurück. </summary>
            <returns>	Freier Platz im Ausgabepuffer in Byte. </returns>
            <summaryE>	returns the free space inside the output buffer. </summaryE>
            <returnsE>	free space in output buffer. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelDA.WriteScaledData(System.Double[],System.UInt32,System.UInt32)">
            <summary>	Gibt skalierte Daten auf dem Ausgabekanal aus . </summary>
            <param name="AIScaledValues">	[in] auszugebende Daten. </param>
            <param name="AIStartIndex">     Index des ersten auszugebenen Datums im Array </param>
            <param name="AILength">		 	Anzahl der auszugebenden Werte </param>
            <returns>	Anzahl der geschribenen Werte. </returns>
            <summaryE>	outputs raw data. </summaryE>
            <paramE name="AIScaledValues">			   [in] output data. </paramE>
            <paramE name="AIStartIndex">				   array index of the first value to output. </paramE>
            <paramE name="AIWritePartiallyFreeBlocks">	if [true] = output starts immediately, if [false] = no output if free space in card buffer is too small. </paramE>
            <returnsE>	number of values written. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelDA.WriteScaledData(System.Double[],System.Boolean)">
            <summary>	Gibt skalierte Daten auf dem Ausgabekanal aus . </summary>
            <param name="AIScaledValues">			 	[in] auszugebende Daten. </param>
            <param name="AIWritePartiallyFreeBlocks"> Wenn [true] = die Daten werden auch teilweise
	ausgegeben, wenn [false] = die Funktion schreibt nur die gesamte übergebene Datenmenge. </param>
            <returns>	Anzahl der geschribenen Werte. </returns>
            <summaryE>	outputs scaled data. </summaryE>
            <paramE name="AIScaledValues">			   [in] output data. </paramE>
            <paramE name="AIWritePartiallyFreeBlocks">	if [true] = output starts immediately, if [false] = no output if free space in card buffer is too small. </paramE>
            <returnsE>	number of values written. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelDA.WriteRawData(System.Int32[],System.Boolean)">
            <summary>	Gibt Rohdaten auf dem Ausgabekanal aus . </summary>
            <param name="AIOutputBuffer">			   [in] auszugebende Daten. </param>
            <param name="AIWritePartiallyFreeBlocks">	Wenn [true] = die Daten werden auch teilweise ausgegeben, wenn [false] = die Funktion schreibt nur die gesamte übergebene Datenmenge. </param>
            <returns>	Anzahl der geschribenen Werte. </returns>
            <summaryE>	outputs raw data. </summaryE>
            <paramE name="AIOutputBuffer">			   [in] output data. </paramE>
            <paramE name="AIWritePartiallyFreeBlocks">	if [true] = output starts immediately, if [false] = no output if free space in card buffer is too small. </paramE>
            <returnsE>	number of values written. </returnsE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionFilter.DesignFIR(Goldammer.FilterType,System.Double,System.Double,System.Double,System.Boolean,System.UInt32,Goldammer.FIRWindow,System.Double,System.Boolean)">
            <summary>	entwirft diesen Filter als FIR Filter. </summary>
            <param name="AIFilterTyp">			  	Filtertyp. </param>
            <param name="AISampleRate">			  	Sample Rate. </param>
            <param name="AICutoffFreqLow">		  	untere Grenzfrequenz. </param>
            <param name="AICutoffFreqHigh">		  	obere Grenzfrequenz. </param>
            <param name="AINormalizedFrequencies">	gibt an, ob die Frequenzen normalisiert angegeben wurden. </param>
            <param name="AIOrder">				  	zu erzeugender Filtergrad. </param>
            <param name="AIFilterWindow">		  	zu verwendender Fenstertyp. </param>
            <param name="AIWindowParameter">	  	Fenster Parameter. </param>
            <param name="AIScalePassband">		  	wenn [true] = es das Durchlassband wird auf 1 skaliert. </param>
            <summaryE>	designs an FIR filter for this function. </summaryE>
            <paramE name="AIFilterTyp">			  	filter type. </paramE>
            <paramE name="AISampleRate">			sample rate. </paramE>
            <paramE name="AICutoffFreqLow">		  	lower cutoff freq. </paramE>
            <paramE name="AICutoffFreqHigh">		upper cutoff freq. </paramE>
            <paramE name="AINormalizedFrequencies">	indicates, if the frquencies are alredy nomalized. </paramE>
            <paramE name="AIOrder">				  	filter order. </paramE>
            <paramE name="AIFilterWindow">		  	filter window. </paramE>
            <paramE name="AIWindowParameter">	  	window parameter. </paramE>
            <paramE name="AIScalePassband">		  	if[true] = the algorithm will try to scale the passband to 1. </paramE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionFilter.DesignIIR(Goldammer.FilterType,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,Goldammer.IIRFilterDesign,System.UInt32)">
            <summary>	entwirft diesen Filter als IIR Filter. </summary>
            <param name="AIFilterTyp">			  	Filtertyp. </param>
            <param name="AISampleRate">			  	Sample Rate. </param>
            <param name="AICutoffFreqLow">		  	untere Grenzfrequenz. </param>
            <param name="AICutoffFreqHigh">		  	obere Grenzfrequenz. </param>
            <param name="AINormalizedFrequencies">	gibt an, ob die frequenzen normalisiert angegeben wurden. </param>
            <param name="AIPassabsorbtion">		  	Durchlassdämpfung. </param>
            <param name="AIStopbandattenuation">  	Dämpfung. </param>
            <param name="AIDesignMethod">		  	zu verwendende Entwurfsmethode. </param>
            <param name="AIOrder">				  	zu erzeugender Filtergrad. </param>
            <summaryE>	designs an IIR filter for this function. </summaryE>
            <paramE name="AIFilterTyp">			  	filter type. </paramE>
            <paramE name="AISampleRate">			sample rate. </paramE>
            <paramE name="AICutoffFreqLow">		  	lower cutoff freq. </paramE>
            <paramE name="AICutoffFreqHigh">		upper cutoff freq. </paramE>
            <paramE name="AINormalizedFrequencies">	indicates, if the frquencies are alredy nomalized. </paramE>
            <paramE name="AIPassabsorbtion">		pass absorbtion. </paramE>
            <paramE name="AIStopbandattenuation">  	stopband attenuation. </paramE>
            <paramE name="AIDesignMethod">		  	design method. </paramE>
            <paramE name="AIOrder">				  	filter order. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.GetMeasurementChannel(System.UInt32)">
            <summary>	Gibt den Messkanal mit dem übergebenen Index zurück </summary>
            <param name="AIIndex">	Nullbasierter Index des gewünschten Messkanals </param>
            <returns>	null, wenn dieser Messkanal nicht existiert, sonst den gewünschten Messkanal </returns>
            <summaryE>	returns the [i]th measurement chanel. </summaryE>
            <paramE name="AIIndex">	zero-based index.. </paramE>
            <returnsE>	null, if measurement channel doesn't exist, otherwise the requested measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.StopMeasurement">
            <summary>	Stoppt eine laufende eine Datenerfassung. </summary>
            <summaryE>	stops CT recording. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.StartMeasurement">
            <summary>	Startet eine CT Datenerfassung. </summary>
            <summaryE>	starts CT recording. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.ReadData(System.UInt32[]@,System.UInt32@,System.Boolean,System.Int64@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten aus. </summary>
            <param name="AIPreallocatedArray">		  	[out]  Messdaten. </param>
            <param name="AILength">					  	[in,out] Anzahl der Messdaten. </param>
            <param name="AIReadPartiallyFilledBlocks">  wenn [true] = Es werden auch nicht komplette	Blöcke zurückgegeben. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes in DateTime Ticks (1/10 µs). </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Millisekunden (1 ms = 10000 DateTime Ticks).  </param>
            <summaryE>	reads the recorded data. </summaryE>
            <paramE name="AIPreallocatedArray">		  	[out]  data. </paramE>
            <paramE name="AILength">					[in,out] number of values. </paramE>
            <paramE name="AIReadPartiallyFilledBlocks">  if [false] = only full blocks are returned. </paramE>
            <paramE name="AOTimeStampT0">	 	        [out] timestamp of the first value in DateTime.Ticks (1/10 µs). </paramE>
            <paramE name="AOTimeStampDeltaT"> 	        [out] delta T of  the values in milliseconds (1 ms = 10000 DateTime ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.ReadData(System.UInt32[]@,System.UInt32@,System.Boolean,System.DateTime@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten aus. </summary>
            <param name="AIPreallocatedArray">		  	[out]  Messdaten. </param>
            <param name="AILength">					  	[in,out] Anzahl der Messdaten. </param>
            <param name="AIReadPartiallyFilledBlocks">  wenn [true] = Es werden auch nicht komplette	Blöcke zurückgegeben. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes. </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Millisekunden (1 ms = 10000 DateTime Ticks).  </param>
            <summary>	reads the recorded data. </summary>
            <param name="AIPreallocatedArray">		  	[out]  data. </param>
            <param name="AILength">					  	[in,out] number of values. </param>
            <param name="AIReadPartiallyFilledBlocks">  if [false] = only full blocks are returned.. </param>
            <paramE name="AOTimeStampT0">	 	        [out] timestamp of the first value in DateTime.Ticks (1/10 µs). </paramE>
            <paramE name="AOTimeStampDeltaT"> 	        [out] delta T of  the values in milliseconds (1 ms = 10000 DateTime ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.ReadData(System.UInt32[]@,System.UInt32@,System.Boolean)">
            <summary>	Liest die Messdaten aus. </summary>
            <param name="AIPreallocatedArray">		   [out]  Messdaten. </param>
            <param name="AILength">					  	[in,out] Length of the ai. </param>
            <param name="AIReadPartiallyFilledBlocks">	wenn [true] = Es werden auch nicht komplette Blöcke zurückgegeben. </param>
            <summary>	reads the recorded data. </summary>
            <param name="AIPreallocatedArray">		  	[out]  data. </param>
            <param name="AILength">					  	[in,out] number of values. </param>
            <param name="AIReadPartiallyFilledBlocks">  if [false] = only full blocks are returned.. </param>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.GetNumberOfBursts">
            <summary>	Gibt die gibt die Anzahl der bisher gemessenen Bursts zurück. </summary>
            <returns>	Anzahl der Messwerte in einem Kanal. </returns>
            <summaryE>	returns the number of recorded bursts. </summaryE>
            <returnsE>	number of recorded bursts. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.GetStreamPipeLevel">
            <summary>	Gibt den Füllstand des Streambuffers zurück. </summary>
            <returns>	Füllstand des Strambuffers. </returns>
            <summaryE>	returns the streambuffer fill level in percent. </summaryE>
            <returnsE>	 streambuffer fill level. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.GetSampleRate">
            <summary>	Gibt die momentan gesetzte CT Samplerate aus. </summary>
            <returns>	momentane CT Samplerate. </returns>
            <summaryE>	returns the CT samplerate. </summaryE>
            <returnsE>	CT samplerate. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.SetSampleRate(System.Double)">
            <summary>	Setzt die CT Samplefrequenz neu. </summary>
            <param name="AIFrequency">	Die neue CT Samplefrequenz. </param>
            <summaryE> sets a new CT samplerate. </summaryE>
            <paramE name="AIFrequency">	samplerate. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.GetMeasurementChannels">
            <summary>	Gibt eine generische Liste mit allen Messkanälen zurück. </summary>
            <returns>	generische Liste mit allen Messkanälen. </returns>
            <summaryE>	returns a generic List of all measurement channels. </summaryE>
            <returnsE>	generic List of all measurement channels. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.DeleteMeasurementChannels">
            <summary>	Löscht alle bisher definierten CT Messkanäle. </summary>
            <summaryE>	deletes all CT measurement channels. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerCT.GetActiveChannelListSize">
            <summary>	Gibt die Anzahl der definierten Messkanäle zurück. </summary>
            <returns>	Die Anzahl der definierten Messkanäle. </returns>
            <summaryE>	returns the number of  measurement channels. </summaryE>
            <returnsE>	number of  measurement channels. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.GetOutputChannels">
            <summary>	Gibt eine generische Liste mit allen Ausgabekanälen zurück. </summary>
            <returns>	generische Liste mit allen Ausgabekanälen. </returns>
            <summaryE>	returns a generic List of all output channels. </summaryE>
            <returnsE>	generic List of all output channels. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.GetOutputChannel(System.UInt32)">
            <summary>	Gibt den Ausgabekanal mit dem übergebenen Index zurück. </summary>
            <param name="AIIndex">	Nullbasierter Index des gewünschten Ausgabekanals. </param>
            <returns>	null, wenn  der Kanal nicht existiert, sonst den gesuchten DA Ausgabekanal. </returns>
            <summaryE>	returns the [i]th DA output channel. </summaryE>
            <paramE name="AIIndex">	zero-based index. </paramE>
            <returnsE>	null, if  the channels doesn't exist, otherwise the requested DA output channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.GetChannel(System.UInt32)">
            <summary>	Gibt den Kanal mit dem übergebenen Index zurück. </summary>
            <param name="AIIndex">	Nullbasierter Index des Gewünschten Kanals. </param>
            <returns>	null, wenn  der Kanal nicht Existiertm sonst den gesuchten DA Kanal. </returns>
            <summaryE>	returns the [i]th DA channel </summaryE>
            <paramE name="AIIndex">	zero-based index. </paramE>
            <returnsE>	null, if  the channels doesn't exist, otherwise the requested DA channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.DeleteMeasurementChannels">
            <summary>	Löscht alle bisher definierten Ausgabekanäle. </summary>
            <summaryE>	deletes all output channels. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.StopOutput">
            <summary>	Stoppt die DA Ausgabe. </summary>
            <summaryE>	stops  DA output. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.StartOutput">
            <summary>	Startet die DA Ausgabe. </summary>
            <summaryE>	starts  DA output. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.GetActiveChannelListSize">
            <summary>	Gibt die Anzahl der bisher definierten DA Ausgabekanäle zurück. </summary>
            <returns>	Anzahl der bisher definierten DA Ausgabekanäle. </returns>
            <summaryE>	returns the number of DA output channels. </summaryE>
            <returnsE>	number of DA output channels. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.SetRange(Goldammer.DARange)">
            <summary>	Setzt den DA Ausgabebereich neu. </summary>
            <param name="AIRange">	Neuer DA Ausgabebereich. </param>
            <summaryE>	Sets the DA output range. </summaryE>
            <paramE name="AIRange">	DA output range. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.GetSampleRate">
            <summary>	Gibt die momentan gesetzte DA Samplerate aus. </summary>
            <returns>	momentane DA Samplerate. </returns>
            <summaryE>	returns the DA samplerate. </summaryE>
            <returnsE>	DA samplerate. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.SetMonauralAudio(System.Boolean)">
            <summary>	Setzt den Monauralmodus (nur bei Audio karten). </summary>
            <param name="AiMonauralModeOn">	wenn [true] = Monaural Madus ist an. </param>
            <summaryE>	Sets monaural mode (audio card only). </summaryE>
            <paramE name="AiMonauralModeOn">	if [true] = monaural mode on. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerDA.SetSampleRate(System.Double)">
            <summary>	Setzt die Frequenz der DA Ausgabe neu. </summary>
            <param name="AIFrequency">	Neue Frequenz der DA Ausgabe. </param>
            <summaryE> sets a new DA samplerate. </summaryE>
            <paramE name="AIFrequency">	samplerate. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelTTL.CreateMeasurementChannel(Goldammer.MeasurementChannelSyncMode,Goldammer.TTLDigitalType)">
            <summary>	Erzeugt einen Messkanal. </summary>
            <param name="AISyncMode">	   Gibt an, mit welchem Kanallistentyp synchron gemessen werden
								soll. </param>
            <param name="AITTLWortbreite"> TTL wortbreite (wird ignoriert, wenn Karte = USBBasic oder
								SyncMode = PerChannelType) </param>
            <returns>	neuer Messkanal. </returns>
            <summaryE>	creates a new TTL measurement channel. </summaryE>
            <paramE name="AISyncMode"> Sets the sync mode (on AD channels/individual) </paramE>
            <paramE name="AITTLWortbreite"> TTL width (is ignoriert, when CardType = USBBasic or
								SyncMode = PerChannelType) </paramE>
            <returnsE>	new TTL measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelTTL.GetChannelDirection">
            <summary>	Gibt die Verwendungsrichtung (Eingabe/Ausgabe) dieser Klemmstelle aus. </summary>
            <returns>	Verwendungsrichtung (Eingabe/Ausgabe) dieser Klemmstelle. </returns>
            <summary>	gets the direction (input/output) of this connector. </summary>
            <returns>	connector's direction. </returns>
        </member>
        <member name="M:Goldammer.MAIChannelTTL.SetChannelDirection(Goldammer.IODirection)">
            <summary>	Setzt die Verwendungsrichtung (Eingabe/Ausgabe) dieser Klemmstelle. </summary>
            <param name="AIDirection">	Neue Verwendungsrichtung dieser Klemmstelle. </param>
            <summaryE>	sets the direction (input/output) of this connector. </summaryE>
            <paramE name="AIDirection">	 connector's new direction. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelTTL.WriteBit(Goldammer.IOBitState)">
            <summary>	Setzt den Zustand dieser Klemmstelle. </summary>
            <param name="AIBit">	Neuer Zustand dieser Klemmstelle. </param>
            <summaryE>	sets the state of this connector. </summaryE>
            <paramE name="AIBit"> connector's new state.  </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelTTL.ReadBit">
            <summary>	Liest den Zustand dieser Klemmstelle. </summary>
            <returns>	Zustand dieser Klemmstelle. </returns>
            <summaryE>	gets the state of this connector. </summaryE>
            <returnsE>	connector's state. </returnsE>
        </member>
        <member name="T:Goldammer.MAIDigitalChannelType">
            <summary>	Typ eines Digitalen Kanals.  </summary>
            <summaryE>	type of a digital channel.  </summaryE>
        </member>
        <member name="F:Goldammer.MAIDigitalChannelType.TTL">
            <summary> TTL Kanal.  </summary>
            <summaryE> TTL channel.  </summaryE>
        </member>
        <member name="F:Goldammer.MAIDigitalChannelType.CT">
            <summary> Zählerkanal.  </summary>
            <summaryE> counter channel.  </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelPWM.SetNewFMFrequency(System.UInt32)">
            <summary>	Diese Funktion ändert die momentane Frequenz  der digitalen FM. 
			Die neue Frequenz wird nach Beendigung des momentan aktiven Pulses übernommen, 
			damit die FM abrißfrei regelt. Werden mehrere Änderungen innerhalb der Pulszeit übertragen, 
			so wird nur die letzte Änderung übernommen.</summary>
            <remarks>	Bei 16-Bit PWM liegt der gültige Bereich von 7Hz bis 167000 Hz, bei der 24Bit PWM von 1 Hz bis 2 MHz. </remarks>
            <param name="AIFrequency">	   	Neue Frequenz. </param>
        </member>
        <member name="M:Goldammer.MAIChannelPWM.SetNewPWMRatio(System.UInt32)">
            <summary>	Setzt ein neues Puls/Pause Verhältnis in Prozent </summary>
            <remarks>	Ein Wert von 0 entspricht einem reinen Low-Pegel, ein Wert von 100 einem HighPegel. Der Wert 50 teilt die PWM auf gleichlange Puls- und Pausenzeiten. </remarks>
            <param name="AIRatio">	  	Neues Puls/Pause Verhältnis in Prozent. </param>
        </member>
        <member name="M:Goldammer.MAIChannelPWM.PrepareFM(System.UInt32,System.UInt32)">
            <summary>	Initialisiert diesen  Kanal für die FM Ausgabe. </summary>
            <param name="AIStartFrequency">	Startfrequenz. </param>
            <param name="AIStartRatio">	   	Initiales Puls/Pause Verhältnis in Prozent. </param>
        </member>
        <member name="M:Goldammer.MAIChannelPWM.PreparePWM(System.UInt32,System.UInt32)">
            <summary>	Initialisiert diesen Kanal für die PWM Ausgabe. </summary>
            <param name="AIStartFrequency">	Basisfrequenz. </param>
            <param name="AIStartRatio">	   	Initiales Puls/Pause Verhältnis in Prozent. </param>
        </member>
        <member name="M:Goldammer.MAIDevice.LoadXMLConfig(System.String)">
            <summary>	Laedt eine XML-Konfigurationsdatei . </summary>
            <remarks>	Die übergebene Datei muss entweder einen MAIDevice-Knoten mit der Seriennumer dieses Geraetes oder einen anonymen Geraeteknoten enthalten.. </remarks>
            <exception cref="N:System">	ArgumentNullException wird geworfen, wenn die Datei nicht exisiert. </exception>
            <param name="AIFilename">	[in] Dateiname der Konfigurationsdatei. </param>
            <summaryE>	applies an XML configuration to the devices. </summaryE>
            <remarksE>	the file has to be a valid MAI v2 XML Device configuration. </remarksE>
            <paramE name="AIFilename">	[in] filename of the XML configuration. </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.ApplySetting(Goldammer.MAITransportClasses.MAISettingsDevice)">
            <summary>	Konfiguriert das Gerät mit den in AISettings beschriebenen Einstellungen. </summary>
            <param name="AISettings"> das Settings Objekt. </param>
            <summaryE>	Applies the setting described by AISettings. </summaryE>
            <paramE name="AISettings"> the settings object. </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.GetDAChannel(System.UInt32)">
            <summary>	Gibt einen DA Kanal zurück  </summary>
            <remarks>	Liefert den DA Kanal mit uebergebenen Index zurück. Sollte der Index zu gross sein, so wird eine IndexOutOfBounds Exception geworfen. </remarks>
            <param name="AIIndex">	Null-basierter Index des DA Kanals </param>
            <returns>	Kanal mit dem uebergebenen Index. </returns>
            <summaryE>	returns a DA channel. </summaryE>
            <remarksE>	returns the DA channel on index AIIndex. </remarksE>
            <paramE name="AIIndex"> zero-based index </paramE>
            <returnsE>	DA channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.GetADChannel(System.UInt32)">
            <summary>	Gibt einen AD Kanal zurück  </summary>
            <remarks>	Liefert den AD Kanal mit uebergebenen Index zurück. Sollte der Index zu gross sein, so wird eine IndexOutOfBounds Exception geworfen. </remarks>
            <param name="AIIndex">	Null-basierter Index des AD Kanals </param>
            <returns>	Kanal mit dem uebergebenen Index. </returns>
            <summaryE>	returns a AD channel. </summaryE>
            <remarksE>	returns the AD channel on index AIIndex. </remarksE>
            <paramE name="AIIndex"> zero-based index </paramE>
            <returnsE>	AD channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.GetTTLChannel(System.UInt32)">
            <summary>	Gibt einen TTL Kanal zurück. </summary>
            <remarks>
	Liefert den TTL Kanal mit uebergebenen Index zurück. Sollte der Index zu gross sein, so
	wird eine IndexOutOfBounds Exception geworfen.
</remarks>
            <param name="AIIndex">	Null-basierter Index des TTL Kanals. </param>
            <returns>	Kanal mit dem uebergebenen Index. </returns>
            <summaryE>	returns a TTL channel. </summaryE>
            <remarksE>	returns the TTL channel on index AIIndex. </remarksE>
            <paramE name="AIIndex"> zero-based index </paramE>
            <returnsE>	TTL channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.GetCTChannel(System.UInt32)">
            <summary>	Gibt einen CT Kanal zurück  </summary>
            <remarks>	Liefert den CT Kanal mit uebergebenen Index zurück. Sollte der Index zu gross sein, so wird eine IndexOutOfBounds Exception geworfen. </remarks>
            <param name="AIIndex">	Null-basierter Index des CT Kanals </param>
            <returns>	Kanal mit dem uebergebenen Index. </returns>
            <summaryE>	returns a CT channel. </summaryE>
            <remarksE>	returns the CT channel on index AIIndex. </remarksE>
            <paramE name="AIIndex"> zero-based index </paramE>
            <returnsE>	CT channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.SetLEDs(System.Boolean,System.Boolean,System.Boolean)">
            <summary>	Setzt den Zustand der Status LEDs am Gerät. </summary>
            <remarks>	Je nach Kartentyp kann die Zustands-LED durch drei gleichfarbige oder eine zwei- bis dreifarbige LED realisiert sein. </remarks>
            <param name="AIRedOrFirstLEDOn">    Steuert den Zustand der ersten  LED (wenn mehfarbige LED verbaut ist, steuert dieser Parameter den Roten Farbanteil ) </param>
            <param name="AIGreenOrSecondLEDOn"> Steuert den Zustand der zweiten LED (wenn mehfarbige LED verbaut ist, steuert dieser Parameter den grünen Farbanteil ) </param>
            <param name="AIThirdLEDOn">		   	Steuert den Zustand der dritten LED (wenn vorhanden) </param>
            <summaryE>	toggles the status LED(s). </summaryE>
            <remarksE>	depending on the device type there are two or three Status-LEDs of the same color or one tree-state LED is installed. </remarksE>
            <paramE name="AIRedOrFirstLEDOn">    toggles the first LED's state (if one threestate LED is mounted, this parameter toggles the red color portion) </paramE>
            <paramE name="AIGreenOrSecondLEDOn"> toggles the second LED's state (if one threestate LED is mounted, this parameter toggles the red green portion) </paramE>
            <paramE name="AIThirdLEDOn">		 toggles the third LED's state  (if existing) </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.GetMaxRawValue">
            <summary>
	Gibt den Maximal erreichbaren wert eines Rohdatums zurück (also sein Datenformat).
</summary>
            <remarks>	obsolete Funktion. </remarks>
            <returns>	Maximalwert eines Rohdatums. </returns>
            <summaryE>
	obsolete
</summaryE>
            <remarksE>	obsolete. </remarksE>
            <returnsE>	obsolete . </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.ConvertBinaryToRaw(System.Byte[],System.UInt32)">
            <summary>	Konvertiert gemesseneBinärdaten in Rohdaten (nicht skalierte Daten). </summary>
            <remarks>	obsolete Funktion. </remarks>
            <param name="AISingleValue">	Messwerte. </param>
            <param name="AIStartIndex"> 	Startindex des Wertes im Bytearray. </param>
            <returns>	Nicht skalierte AD-Daten. </returns>
            <summaryE>	obsolete. </summaryE>
            <remarksE>	obsolete. </remarksE>
            <paramE name="AISingleValue">	obsolete. </paramE>
            <paramE name="AIStartIndex"> 	obsolete. </paramE>
            <returnsE>	obsolete. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.GetSizeOfBinaryDataWordInBytes">
            <summary>	Gibt die Länge eines Binärdatenwortes in Byte zurück </summary>
            <remarks>	obsolete Funktion. </remarks>
            <returns>	The size of binary data word. </returns>
        </member>
        <member name="M:Goldammer.MAIDevice.HasHardwareExtension(Goldammer.HWExtension)">
            <summary>	Gibt an, ob eine bestimmte Hardwareerweiterung installiert ist. </summary>
            <param name="AIHWEQuery">	Hardwareerweiterung. </param>
            <returns>	True, wenn diese Hardwareerweiterung inatalliert ist, sont False. </returns>
            <summaryE>	indicates, weather a certain hardware extension is installed. </summaryE>
            <paramE name="AISWEQuery">	hardware extension. </paramE>
            <returnsE>	[true], if the hardware extension is installed. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.HasSoftwareExtension(Goldammer.SWExtension)">
            <summary>	Gibt an, ob eine bestimmte Softwareerweiterung installiert ist. </summary>
            <param name="AISWEQuery">	Softwareerweiterung. </param>
            <returns>	True, wenn diese Softwareerweiterung inatalliert ist, sont False. </returns>
            <summaryE>	indicates, weather a certain software extension is installed. </summaryE>
            <paramE name="AISWEQuery">	software extension. </paramE>
            <returnsE>	[true], if the software extension is installed. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.GetHardwareExtensions">
            <summary>	Gibt die verwendete Hardwareerweiterung diese Gerätes zurück. </summary>
            <remarks> ... </remarks>
            <returns>	Nummer der Hardwareerweiterung. </returns>
            <summaryE>	returns the installed hardware extensions as ORed bits of HWExension enum. </summaryE>
            <returnsE>	installed hardware extensions. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.GetSoftwareExtensions">
            <summary>	Gibt die verwendete Softwareerweiterungen dieses Gerätes zurück. </summary>
            <remarks> ... </remarks>
            <returns>	veroderte Nummer der Softwareerweiterung. </returns>
            <summaryE>	returns the installed software extensions as ORed bits of SWExension enum. </summaryE>
            <returnsE>	installed software extensions. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.InternalFlashDataClear(System.UInt32)">
            <summary>	Löscht die internen Flashdaten . </summary>
            <remarks> ... </remarks>
            <param name="EEPromOffsetStart"> Startoffset im EEprom. </param>
            <summaryE>	clears the internal flash data. </summaryE>
            <paramE name="EEPromOffsetStart">	start offset in EEprom. </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.InternalFlashDataWrite(System.UInt32,System.Byte[])">
            <summary>	Schreibt in den internen Flashspeicher . </summary>
            <remarks> ... </remarks>
            <param name="EEPromOffsetStart">	Startoffset im EEprom. </param>
            <param name="AIData">				[in] Wenn non-null, Daen, die geschrieben werden sollen </param>
            <summaryE>	writes into the internal flash data. </summaryE>
            <paramE name="EEPromOffsetStart">	start offset in EEprom. </paramE>
            <paramE name="AIData">				[in] flash data </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.InternalFlashDataRead(System.UInt32,System.Byte[]@)">
            <summary>	Liest den internen Flashspeicher . </summary>
            <remarks> ... </remarks>
            <param name="EEPromOffsetStart">	Startoffset im EEprom. </param>
            <param name="AIData">				[out] Wenn non-null, Flashdaten </param>
            <summaryE>	reads the internal flash data. </summaryE>
            <paramE name="EEPromOffsetStart">	start offset in EEprom. </paramE>
            <paramE name="AIData">				[out] flash data </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.PrivateFlashDataClear">
            <summary>	Löscht die privaten Flashdaten . </summary>
            <remarks> ... </remarks>
            <summaryE>	clears the private flash memory . </summaryE>
        </member>
        <member name="M:Goldammer.MAIDevice.PrivateFlashDataWrite(System.Byte[])">
            <summary>	Schreibt in den privaten Flashspeicher . </summary>
            <remarks> ... </remarks>
            <param name="AIData">				[in] Daten, die geschrieben werden sollen </param>
            <summaryE>	writes into the private flash memory. </summaryE>
            <paramE name="AIData">				[in] text to be written </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.PrivateFlashDataRead(System.Byte[]@)">
            <summary>	Liest den privaten Flashspeicher . </summary>
            <remarks> ... </remarks>
            <param name="AIData">				[out] Flashdaten </param>
            <summaryE>	reads the private flash memory. </summaryE>
            <paramE name="AIData">				[out] private flash memory data </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.ConfigMeasure">
            <summary>	Schreibt die Konfiguration einer Messung auf die Hardware. </summary>
            <remarks> ... </remarks>
            <summaryE>	configures the hardware for a measurement. </summaryE>
        </member>
        <member name="M:Goldammer.MAIDevice.ConfigCard(Goldammer.ExternTriggerMode,Goldammer.SignalEdge,System.Boolean)">
            <summary>	Konfiguriert die Messkarte für externe Triggerung. </summary>
            <param name="AITriggerExtern">			  	Externer Trigger Modus. </param>
            <param name="AIExternEdge">				  	externe Triggerflanke. </param>
            <param name="AIIsDifferentialMeasurement">  Gibt an, ob eine Differentialmessung durchgeführt
	werden soll. </param>
            <summaryE>	configures the external triggering setup. </summaryE>
            <paramE name="AITriggerExtern">			  	external trigger mode. </paramE>
            <paramE name="AIExternEdge">				  	external trigger edge. </paramE>
            <paramE name="AIIsDifferentialMeasurement">  toggles differential measurement mode. </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.SetRunningMode(Goldammer.RunningMode)">
            <inheritdoc />
            <summary>	Setzt den Betriebsmodus (Master/slave/standalone). </summary>
            <param name="AIMasterSlaveMode">	 	Betriebsmodus (Master/slave/standalone). </param>
            <summaryE>	sets the running mode (master/slave/standalone). </summaryE>
            <paramE name="AIMasterSlaveMode">	 	running mode (master/slave/standalone). </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.SetRunningMode(Goldammer.RunningMode,System.Boolean)">
            <summary>	Setzt den Betriebsmodus (Master/Slave/Standalone). </summary>
            <remarks>	VORSICHT bei der Verwendung des Parameters AIAllowMultipleMasters ! 
			Wenn dieser Parameter auf [true] gesetzt ist, wird beim Konfigurieren der Messung
			der entsprechende Pin evtl. bei mehreren Karten auf High gesetzt und kann so die Hardware beschädigen/zerstören.
			</remarks>
            <param name="AIMasterSlaveMode">	 	Betriebsmodus (Master/slave/standalone). </param>
            <param name="AIAllowMultipleMasters"> wenn [true] wird nicht geprüft, ob bereits ein Master
	definiert ist. Defaultwert = [false] </param>
            <summaryE>	sets the running mode (master/slave/standalone). </summaryE>
            <remarksE>	ATTENTION. If AIAllowMultipleMasters is set to [true], the connetor on ALL devices 
			is set to HIGH on measurement start. This can damage/destroy
			the hardware if these pins of to master cards are connected !!! </remarksE>
            <paramE name="AIMasterSlaveMode">	 	running mode (master/slave/standalone). </paramE>
            <paramE name="AIAllowMultipleMasters"> if [true] no chech is performed, weather another master is defined. Defaultwert = [false] </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.GetNumberOfPCIMasterDevices">
            <summary>	Gibt an, wieviele Geräte als Master-Device definiert sind. </summary>
            <remarks> ... </remarks>
            <returns>	Anzahl der Master-Devices. </returns>
            <summaryE>	returns the number of devices that are defined as master. </summaryE>
            <returnsE>	number of master devices. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.IsInStreamingMode">
            <summary>	Gibt an, ob das Gerät im Streaming Modus arbeitet. </summary>
            <returns>	true , wenn das Gerät im Streamingmodus arbeitet. </returns>
            <summaryE>	returns the [true], if the device is in streaming mode. </summaryE>
            <returnsE>	[true], if the device is in streaming mode. </returnsE>
        </member>
        <member name="M:Goldammer.MAIDevice.SetStreamingMode(System.Boolean)">
            <summary>	Steuert den Streamingmodus. </summary>
            <remarks> ... </remarks>
            <param name="AIStreamingModeON">	wenn [true] wird das Gerät in den Stramingmodus versetzt wenn [false] wird der Streamingmodus verlassen</param>
            <summaryE>	toggles the streaming mode. </summaryE>
            <paramE name="AIStreamingModeON">	if [true] straming mode is on, if [false]straming mode is off </paramE>
        </member>
        <member name="M:Goldammer.MAIDevice.StopMeasure">
            <summary>	Stoppt die Messung </summary>
            <remarks> ... </remarks>
            <summary>	stops all measurements that are running</summary>
        </member>
        <member name="M:Goldammer.MAIDevice.StartMeasure">
            <summary>	Startet alle konfigurierten Messungen. </summary>
            <remarks> ... </remarks>
            <summaryE>	starts all measurements that are configured . </summaryE>
        </member>
        <member name="M:Goldammer.MAIDevice.ClearAllChannelLists">
            <summary>	Löscht alle Messkanäle. </summary>
            <remarks> ... </remarks>
            <summaryE>	deletes all measurement channels. </summaryE>
        </member>
        <member name="M:Goldammer.MAIDevice.Reset">
            <summary>	Führt einen Reset am Gerät durch. </summary>
            <remarks> ... </remarks>
            <summaryE>	resets the device. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerPWM.StopOutput">
            <summary>	Stoppt die Pulsweitenmodualtion-Ausgabe. </summary>
            <summaryE>	stops the pulse width modulation output. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerPWM.StartOutput">
            <summary>	Startet die Pulsweitenmodualtion-Ausgabe. </summary>
            <summaryE>	starts the pulse width modulation output. </summaryE>
        </member>
        <member name="P:Goldammer.MAI.ResourceSearchPath">
            <summary>	Setzt den Suchpfad für die Ressourcendateien *.gpci oder *.lic oder gibt diesen zurück. </summary>
            <value>	Suchpfad für  Ressourcendateien. </value>
            <summaryE>	Gets or sets the search for resource files of type  *.gpci or *.lic. </summaryE>
            <valueE>	resource file search path. </valueE>
        </member>
        <member name="P:Goldammer.MAI.Properties">
            <summary>	Gibt die (konfigurierbaren) Eigenschaften aller gefundenen Geräte zurück. </summary>
            <value>	Eigenschaften der verfügbaren Gerätes. </value>
            <summaryE>	Gets the devices properties. </summaryE>
            <valueE>	devices properties. </valueE>
        </member>
        <member name="P:Goldammer.MAI.MAILibVersion">
            <summary>	Gibt die Versionsnummer der eingebundenen MAI Bibliothek. </summary>
            <value>	Version der MAI Bibliothek . </value>
            <summaryE>	Returns the version of the linked MAI library. </summaryE>
            <valueE>	The MAI library version. </valueE>
        </member>
        <member name="P:Goldammer.MAI.NumberOfDevices">
            <summary>
Gibt die Anzahl aller zur Verfügung stehenden Geräte zurück. 
</summary>
            <summaryE>
returns the number of available devices. 
</summaryE>
        </member>
        <member name="P:Goldammer.MAI.Devices">
            <summary>
Gibt eine Liste aller zur Verfügung stehenden Geräte zurück. 
Der Zugriff auf die Einzelnen Geräte erfolgt über den Index [i]
oder den Typisierten Index [MeasurementDeviceType,i].
<example><code lang="cs">
 //  Typeless:
 string serNr  = MAI.Devices[1].Info.Serialnumber;
 //  Typed (USB Basic Cards only):
 string serNr2 = MAI.Devices[MeasurementDeviceType.MULTICHOICE_USB_BASIC,1].Info.Serialnumber;
</code></example></summary>
            <summaryE>
returns a list of all available devices. 
each device can be accessed by its index [i]
or its typed index [MeasurementDeviceType,i].
<example><code lang="cs">
 //  Typeless:
 string serNr  = MAI.Devices[1].Info.Serialnumber;
 //  Typed (USB Basic Cards only):
 string serNr2 = MAI.Devices[MeasurementDeviceType.MULTICHOICE_USB_BASIC,1].Info.Serialnumber;
</code></example></summaryE>
        </member>
        <member name="M:Goldammer.MAI.IOBitState(System.Boolean)">
            <summary>	Konvertiert einen Boolean Wert in ein IOBitState Wert </summary>
            <param name="AIBoolState">	Status als boolean. </param>
            <returns>	IOBitState. </returns>
            <summaryE>	Converts a boolean Value into a IOBit state value </summaryE>
            <paramE name="AIBoolState">	Bit state as boolean. </paramE>
            <returns>	IOBitState. </returns>
        </member>
        <member name="M:Goldammer.MAI.SetLogfileName(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>	Setzt den Namen eines (optinalen) Logfiles, das den Ablauf der Verwendung der MAIv2DLL protokolliert. </summary>
            <remarks>	Diese Funktion ist für Herstellerseitige Debug-Zwecke implementiert. Sie sollten sie nicht verwenden, da das Timing-Verhalten
			Ihrer Anwendung dadurch unvorhersagbar gestört werden kann.</remarks>
            <param name="AIFilename">	 	[in,out] Wenn nicht-null und wenn der Ausdruck einen gültigen Dateimanen enthält, Dateiname das zu erzeugenden Logfiles. </param>
            <param name="AILogError">	 	Wenn [true] = Fehler werden protokolliert. </param>
            <param name="AILogWarning">  	Wenn [true] = Warnungen werden protokolliert. </param>
            <param name="AILogInfo">	 	Wenn [true] = Informationsmeldungen werden protokolliert. </param>
            <param name="AIKeepExisting">	Wenn [true] = Der Inhalt eines möglicherweise bestehenden Files wird beibehalten, und die neuen Meldungen werden angehängt. </param>
            <summaryE>	sets the file name (optinalen), whereto the usage of the  MAIv2DLL is logged. </summaryE>
            <remarksE>	this function is implemented for debugging purposes. please do not use !.</remarksE>
        </member>
        <member name="M:Goldammer.MAI.ApplySetting(Goldammer.MAITransportClasses.MAISettings)">
            <summary>	Konfiguriert alle vorhandenen Geräte entsprechend der übergebenen XML Konfiguration. </summary>
            <param name="AISettings">	[in] Document-Node einer MAIv2 Konfiguration XML Datei. </param>
            <summaryE>	applies the MAIv2 XML settings in the XML Node to all MAI devices. </summaryE>
            <paramE name="AISettings">	[in] document-Node of a MAIv2 XML configuration file. </paramE>
*	if(AIConfigNode == nullptr)
</member>
        <member name="M:Goldammer.MAI.GetIndexOfDevice(System.String)">
            <summary>	Gibt den Index eines Gerätes mit der übergebenene Seriennummer zurück. </summary>
            <param name="AISerialNumber">	Seriennummer des Gesuchten Gerätes. </param>
            <returns>	Index des Gerätes, wenn vorhanden, sonst -1. </returns>
            <summaryE>	returns the index of the device with a requested serial number. </summaryE>
            <paramE name="AISerialNumber">	serial number . </paramE>
            <returnsE>	index of the device if existing, otherwise -1. </returnsE>
        </member>
        <member name="M:Goldammer.MAI.GetSerialNumbersOfInstalledDevicesofType(Goldammer.MeasurementDeviceType)">
            <summary>
	Gibt eine Liste der Seriennummern aller vorhandenen Geräte eines bestimmten Typs zurück.
</summary>
            <param name="AIType">	Gesuchter Gerätetyp. </param>
            <returns>	Liste der Seriennummern aller Geräte eines bestimmten Typs. </returns>
            <summaryE>
	returns a list of serialnumbers of all available devices of one device type
</summaryE>
            <paramE name="AIType">	requested device type. </paramE>
            <returnsE>	list of serialnumbers of devices of one type. </returnsE>
        </member>
        <member name="M:Goldammer.MAI.GetSerialNumbersOfAllInstalledDevices">
            <summary>	Gibt eine Liste der Seriennummern aller vorhandenen Geräte zurück. </summary>
            <returns>	Liste der Seriennummern aller vorhandenen Geräte. </returns>
            <summaryE>	returns a list of serialnumbers of all available devices. </summaryE>
            <returnsE>	list of serialnumbers. </returnsE>
        </member>
        <member name="M:Goldammer.MAI.GetDeviceByIndex(System.UInt32)">
            <summary>	Gibt das gerät mit dem übergebenen Index zurück. </summary>
            <param name="AIDeviceIndex">	Null-basierter Index des Gerätes. </param>
            <returns>	null, wenn weniger Geräte vorhanden sind, sonst eine Referenz auf
	dieses Gerät. </returns>
            <summaryE>	gets one device by its index. </summaryE>
            <paramE name="AIDeviceIndex">	zero-based index. </paramE>
            <returnsE>
	null, if less devices are available, otherwise the reference to this device.
	 </returnsE>
            <summary>	Gets a device by index. </summary>
            <remarks>	Fmensing, 18.07.2013. </remarks>
            <param name="AIDeviceIndex">	Zero-based index of the ai device. </param>
            <returns>	null if it fails, else the device by index. </returns>
        </member>
        <member name="M:Goldammer.MAI.GetDeviceBySerialNumber(System.String)">
            <summary>	Sucht ein bestimmtes Gerät über seine Seriennummer. </summary>
            <param name="AISerialNumber">	[in] Seriennummer des zu suchenden Gerätes. </param>
            <returns>
	null, wenn kein Gerät mit dieser Seriennummer vorhanden ist, sonst eine Referenz auf
	dieses Gerät.
</returns>
            <summaryE>	returns the device with the requested serial number. </summaryE>
            <paramE name="AISerialNumber">	[in] serial number of the device to find. </paramE>
            <returnsE>
	null, if no device with this serial number is available, otherwise the reference to this device.
</returnsE>
        </member>
        <member name="M:Goldammer.MAI.GetDeviceList">
            <summary>	Gibt eine Liste aller momentan verfügbaren MAI Geräte zurück. </summary>
            <returns>	Liste, die die momentan gefundenen MAI Geräte enthält. </returns>
            <summaryE>	returns a list of all available MAI devices. </summaryE>
            <returnsE>	list of available MAI devices. </returnsE>
            <summary>
Gibt eine Liste aller zur Verfügung stehenden Geräte zurück
</summary>
        </member>
        <member name="M:Goldammer.MAI.GetAssemblyVersion">
            <summary>	Gibt die Versionsnummer dieser Assembly zurück. </summary>
            <returns>	Versionsnummer dieser Assembly. </returns>
            <summaryE>	Gets the version number of this assembly. </summaryE>
            <returnsE>	assembly version. </returnsE>
        </member>
        <member name="T:Goldammer.MAI">
            <summary>	Bietet Zugriff auf alle Goldammer Geräte.  </summary>
            <remarks>	Dieses Objekt ist eine statische Referenz auf ein Singleton. Um unnötige 
			Geräte-Initialisierungen zu verhindern sollten Sie 
			innerhalb eigener Programme eine globale Referenz hierauf aufbewahren, 
			um zu verhindern, dass die Geräteliste durch den 
			Garbage-Collector immer wieder neu aufgebaut wird.
			</remarks>
            <summaryE>	offers access to all Goldammer devices.  </summaryE>
            <remarksE>	this object is a static reference to a singleton.
			To prevent the runtime from deleting the device or channel objects you 
			may want to usse later on in another class (or WinForm), it is a good idea
			to keep ONE global reference to tis object in your code, this may save perfomance. 
			</remarksE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAISettings.Create(Goldammer.MAITransportClasses.MAIProperties)">
            <summary>	Erzeugt ein neues Einstellungen Objekt, das die Geräte mit den übergebenen Eigenschaften konfigurieren kann. </summary>
            <param name="AIProperties">	[in] Eigenschaften-Objekt, für das ein passendes Einstellungen Objekt generiert weeren soll. </param>
            <returns>	neue Instanz eines Einstellungen-Objektes. </returns>
            <summaryE>	ceates a settings object, that allows to configure the devices inside the specified properties object. </summaryE>
            <paramE name="AIProperties">	[in]  properties object. </paramE>
            <returns>	new instance of a settings object. </returns>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAISettings.FromXML(System.String)">
            <summary>	Erzeugt ein Einstellungen-Objekt anhand einer XML Repräsentation. </summary>
            <param name="AIXMLText">	[in] XML Repräsentation eines Einstellungen-Objektes. </param>
            <returns>	neue Instanz eines Einstellungen-Objektes. </returns>
            <summaryE>	Creates a settings object from a given xml representation. </summaryE>
            <paramE name="AIXMLText">	[in] XML representation oft the settings object to create. </paramE>
            <returnsE>	MAISettings object. </returnsE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAISettings.ToXML">
            <summary>	Konvertiert diese Instanz in einen XML String. </summary>
            <returns>	XML String Repräsentation dieser Instanz. </returns>
            <summaryE>	Converts this object to an XML string. </summaryE>
            <returnsE>	null if it fails, else this object as a XML String. </returnsE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAISettings.LoadFromXML(System.String)">
            <summary>	Lädt ein Einstellungen-Objekt aus einer XML Datei. </summary>
            <param name="AIFilename">	[in] Dateiname des zu ladenden Einstellungen-Objektes. </param>
            <returns>	Einstellungen-Objekt. </returns>
            <summaryE>	Loads a settings object from disk. </summaryE>
            <paramE name="AIFilename">	[in] filename of the settings object. </paramE>
            <returnsE>	MAISettings object. </returnsE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAISettings.Load(System.String)">
            <summary>	Lädt ein Einstellungen-Objekt aus einer Datei. </summary>
            <param name="AIFilename">	[in] Dateiname des zu ladenden Einstellungen-Objektes. </param>
            <returns>	Einstellungen-Objekt. </returns>
            <summaryE>	Loads a settings object from disk. </summaryE>
            <paramE name="AIFilename">	[in] filename of the settings object. </paramE>
            <returnsE>	MAISettings object. </returnsE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAISettings.SaveAsXML(System.String,Goldammer.MAITransportClasses.MAISettings)">
            <summary>	Speichert ein Einstellungen-Objekt in eine XML Datei ab. </summary>
            <param name="AIFilename">	  	[in] Dateiname des zu speichernden Einstellungen-Objektes. </param>
            <param name="AISettingToSave">	[in] Das zu speichernde Einstellungen-Objekt. </param>
            <summaryE>	Saves a settings object to disk. </summaryE>
            <paramE name="AIFilename">	  	[in] filename for the settings object to save. </paramE>
            <paramE name="AISettingToSave">	[in] the settings object to save. </paramE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAISettings.Save(System.String,Goldammer.MAITransportClasses.MAISettings)">
            <summary>	Speichert ein Einstellungen-Objekt in eine Datei ab. </summary>
            <param name="AIFilename">	  	[in] Dateiname des zu speichernden Einstellungen-Objektes. </param>
            <param name="AISettingToSave">	[in] Das zu speichernde Einstellungen-Objekt. </param>
            <summaryE>	Saves a settings object to disk. </summaryE>
            <paramE name="AIFilename">	  	[in] filename for the settings object to save. </paramE>
            <paramE name="AISettingToSave">	[in] the settings object to save. </paramE>
        </member>
        <member name="T:Goldammer.MAITransportClasses.MAISettings">
            <summary>	MAI Settings (Einstellungen).  </summary>
            <summary>	MAI Settings.  </summary>
        </member>
        <member name="P:Goldammer.MAIDeviceList.default(System.String)">
            <inheritdoc cref="P:Goldammer.MAIDeviceList.Item(System.Int32)" />
            <value>	 MAIDevice mit gewünschter Seriennummer. </value>
            <valueE> device with this serial number. </valueE>
        </member>
        <member name="P:Goldammer.MAIDeviceList.default(Goldammer.MeasurementDeviceType,System.Int32)">
            <inheritdoc cref="P:Goldammer.MAIDeviceList.Item(System.Int32)" />
            <value>	gewünschtes MAIDevice eines typs. </value>
            <valueE> [i]th device of device type. </valueE>
        </member>
        <member name="P:Goldammer.MAIDeviceList.Item(System.Int32)">
            <summary>	Gibt entweder das [i]te Gerät zurück, das [i]te vom Typ [MeasurementDeviceType] oder das mit einer bestimmten Seriennummer.  </summary>
            <value>	gewünschtes MAIDevice. </value>
            <summaryE>	returns the [i]th device, either absolute or of one device type, or by serialnumber.  </summaryE>
            <valueE>	[i]th device. </valueE>
        </member>
        <member name="E:Goldammer.MAIDeviceList.Changed">
            <summary>
Wird gefeuert, wenn die Liste der zur Verfügung stehenden Geräte sich geändert hat und die Methode 
AttachUSBWatcher ausgeführtt wurde.

</summary>
            <summaryE>
is fired, when the list of devices changes (by hotpluggig one) and the method AttachUSBWatcher has been called. 
</summaryE>
        </member>
        <member name="P:Goldammer.MAIDeviceList.Count(Goldammer.MeasurementDeviceType)">
            <inheritdoc cref="P:Goldammer.MAIDeviceList.Count" />
        </member>
        <member name="P:Goldammer.MAIDeviceList.Count">
            <summary>2 Überladungen: Gibt die Anzahl der zur Verfügung stehenden Geräte zurück. Entweder aller, oder eines bestimmten Typs </summary>
            <value>	Anzahl der Geräte. </value>
            <summaryE>2 overloads: returns the number of available devices. Either of all devices or of one device type </summaryE>
            <valueE> number of devices</valueE>
        </member>
        <member name="M:Goldammer.MAIDeviceList.DetachUSBWatcher">
            <summary>	Stoppt die USB-Hotplug-Überwachung. </summary>
            <summaryE>	Detach usb watcher. MUST be called before ProcessExit, otherwise a COM Exception will be thrown by the garbage collector. </summaryE>
        </member>
        <member name="M:Goldammer.MAIDeviceList.AttachUSBWatcher">
            <summary>	Startet die USB-Hotplug-Überwachung: Wenn ein Goldammer USB Gerät entfernt oder neu Verbunden wird, wird das Changed event gefeuert. </summary>
            <remarks>	VOR dem Programmende muss DetachUSBWatcher aufgerufen werden, ansonsten wird durch die Garbage collection eine COM Exception geworfen. </remarks>
            <summaryE>	Attach usb watcher: If a Goldammer USB device is removed or pluggedd in the Changed event gets fired. Note: DetachUSBWatcher MUST be called before ProcessExit, otherwise a COM Exception will be thrown by the garbage collector. </summaryE>
        </member>
        <member name="T:Goldammer.MAIDeviceList">
            <summary>	Globale Liste der verfügbaren MAI Geräte. </summary>
            <remarks>	Das Event DeviceListChanged wird gefeuert, wenn ein USB Gerät an- oder abgesteckt wird. </remarks>
            <summaryE>	list of all MAI devices. </summaryE>
            <remarksE>	the DeviceListChanged event gets fired, when a USB device is plugged in or removed. </remarksE>
        </member>
        <member name="T:Goldammer.DeviceListChangedEventHandler">
            <summary>
Delegat, um das Event zu behandeln, das anzeigt, ob die Geräteliste geändert wurde. 
</summary>
            <summaryE>
delegate to handle the DeviceListChanged event. 
</summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelAD.CreateMeasurementChannel(Goldammer.OversamplingMode,Goldammer.GainFactor,System.Boolean,Goldammer.AD_UserScalingMode,System.Double,System.Double)">
            <summary>	Erzeugt einen AD Messkanal, der diese Klemmstelle verwendet. 
			Das erzeugte Objekt wird ungültig, sobald die Funktion DeleteMeasurementChannels
			am AD Channelcontroller oder DeleteAllMeasurementChannels am dazu gehörenden Device
			aufgerufen wird. </summary>
            <param name="AIOversampling">	 	Oversampling. </param>
            <param name="AIGain">			 	Gain. </param>
            <param name="AIBipolarConnected">	Wenn [true] = Zweipolige messung, wenn [false] = massebezogene Messung. </param>
            <param name="AIUSerScalingMode">	Saklierungsmethode. </param>
            <param name="AIUserScalingFactorA">	Parameter A der Skalierungsfunktion. </param>
            <param name="AIUserScalingFactorB">	Parameter B der Skalierungsfunktion. </param>
            <returns>	neuer AD Messkanal. </returns>
            <summaryE>	creates a new  AD measurement channel, that uses this channel as physical input. 
			this object becomes invalid, when the method DeleteMeasurementChannels 
			on the AD Channelcontroller or DeleteAllMeasurementChannels on the Device
			is called. </summaryE>
            <paramE name="AIOversampling">	 	oversampling mode. </paramE>
            <paramE name="AIGain">			 	gain factor. </paramE>
            <paramE name="AIBipolarConnected">	if [true] = bipolar measurement, if [false] = unipolar measurement. </paramE>
            <param name="AIUSerScalingMode">	scaling function type. </param>
            <param name="AIUserScalingFactorA">	parameter A of the scaling function. </param>
            <param name="AIUserScalingFactorB">	parameter B of the scaling function. </param>
            <returnsE>	new AD measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelAD.CreateMeasurementChannel(Goldammer.OversamplingMode,Goldammer.GainFactor,System.Boolean)">
            <summary>	Erzeugt einen AD Messkanal, der diese Klemmstelle verwendet. 
			Das erzeugte Objekt wird ungültig, sobald die Funktion DeleteMeasurementChannels
			am AD Channelcontroller oder DeleteAllMeasurementChannels am dazu gehörenden Device
			aufgerufen wird. </summary>
            <param name="AIOversampling">	 	Oversampling. </param>
            <param name="AIGain">			 	Gain. </param>
            <param name="AIBipolarConnected">	Wenn [true] = Zweipolige messung, wenn [false] = massebezogene Messung. </param>
            <returns>	neuer AD Messkanal. </returns>
            <summaryE>	creates a new  AD measurement channel, that uses this channel as physical input. 
			this object becomes invalid, when the method DeleteMeasurementChannels 
			on the AD Channelcontroller or DeleteAllMeasurementChannels on the Device
			is called. </summaryE>
            <paramE name="AIOversampling">	 	oversampling mode. </paramE>
            <paramE name="AIGain">			 	gain factor. </paramE>
            <paramE name="AIBipolarConnected">	if [true] = bipolar measurement, if [false] = unipolar measurement. </paramE>
            <returnsE>	new AD measurement channel. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelAD.SetIEPEMode(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>	Setzt den IEPE Modus dieses Audio-Kanals. </summary>
            <param name="AI_IEPE_On">	 		wenn [true] : IEPE Einspeisung aktiv. </param>
            <param name="AI_DC">	 			wenn [true] : DC Messung. </param>
            <param name="AI_SingleEnded">	 	wenn [true] : massebezogene Messung, sonst Differenz. </param>
            <param name="AI20dBGain">			wenn [true] : es wird mit 20dB Verstärkung ausgegeben. </param>
            <summaryE>	sets the IEPE mode of this channel Kanals. </summaryE>
            <paramE name="AI_IEPE_On">	 	    [true] : IEPE active. </paramE>
            <paramE name="AI_DC">	 	        [true] : DC measurement . </paramE>
            <paramE name="AI_SingleEnded">	 	[true] : single ended measurement, otherwise : differential. </paramE>
            <paramE name="AI20dBGain">	if [true] a 20dB gain is applied. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelAD.SetIEPEMode(Goldammer.IEPEMode,System.Boolean)">
            <summary>	Setzt den IEPE Modus dieses Kanals. </summary>
            <param name="AIMode">	 	IEPE Modus. </param>
            <param name="AI20dBGain">	wenn [true] wird mit 20dB Verstärkung ausgegeben. </param>
            <summaryE>	sets the IEPE mode of this channel Kanals. </summaryE>
            <paramE name="AIMode">	 	IEPE mode. </paramE>
            <paramE name="AI20dBGain">	if [true] a 20dB gain is applied. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelAD.ReadSingleVoltage(Goldammer.OversamplingMode,Goldammer.GainFactor,System.Boolean)">
            <summary>	Liest einen einzelnen Messwert in Volt. </summary>
            <param name="AIOversampling">	 	Oversampling. </param>
            <param name="AIGain">			 	Verstärkungsfaktor. </param>
            <param name="AIBipolarConnected">	Wenn [true] = Zweipolige messung, wenn [false] = massebezugene Messung. </param>
            <returns>	Messwert in Volt. </returns>
            <summaryE>	reads a single value in volts. </summaryE>
            <paramE name="AIOversampling">	 	oversampling mode. </paramE>
            <paramE name="AIGain">			 	gain factor. </paramE>
            <paramE name="AIBipolarConnected">	if [true] = bipolar measurement, if [false] = unipolar measurement. </paramE>
            <returnsE>	value in volts. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelAD.ReadSingleValue(Goldammer.OversamplingMode,Goldammer.GainFactor,System.Boolean)">
            <summary>	Liest einen einzelnen Messwert als Rohdatum. </summary>
            <param name="AIOversampling">	 	Oversampling. </param>
            <param name="AIGain">			 	Verstärkungsfaktor. </param>
            <param name="AIBipolarConnected">	Wenn [true] = Zweipolige messung, wenn [false] = massebezogene Messung. </param>
            <returns>	Messwert. </returns>
            <summaryE>	reads a single Value as raw date. </summaryE>
            <paramE name="AIOversampling">	 	oversampling mode. </paramE>
            <paramE name="AIGain">			 	gain factor. </paramE>
            <paramE name="AIBipolarConnected">	if [true] = bipolar measurement, if [false] = unipolar Messung. </paramE>
            <returnsE>	raw date. </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerSSI.Configure(System.Boolean,Goldammer.SignalEdge,Goldammer.SSIMode,System.UInt32,Goldammer.SignalEdge)">
            <summary>	Konfiguriert den SSI Kanal. </summary>
            <param name="AIReset">			  	wenn [true]= Reset wird ermöglicht. </param>
            <param name="AIResetEdge">		  	Signalflanke, bei der ein Reset durchgeführt wird. </param>
            <param name="AIActivePassiveMode">	Aktiv/Passiv Modus des SSI Ports. </param>
            <param name="AIClockFrequency">   	Taktfrequenz. </param>
            <param name="AIEdge">			  	Taktflanke. </param>
            <summaryE>	configures the SSI port. </summaryE>
            <paramE name="AIReset">			  	if [true]= reset is enabled. </paramE>
            <paramE name="AIResetEdge">		  	signal edge, on which a reset is performed. </paramE>
            <paramE name="AIActivePassiveMode">	active/passive mode of the SSI Port. </paramE>
            <paramE name="AIClockFrequency">   	SSI clock frequency. </paramE>
            <paramE name="AIEdge">			  	SSI clock edge. </paramE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerSSI.SetBitWidth(System.UInt32)">
            <summary>	Setzt die Anzahl der für den SSI Eingang verwendeten Bits. </summary>
            <param name="AIBitWidth">	Anzahl der für den SSI Eingang verwendeten Bits. </param>
            <summaryE>	Sets the number of bits that are used for the SSI port. </summaryE>
            <paramE name="AIBitWidth">	number of bits that are used for the SSI port. </paramE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.FromXML(System.String)">
            <summary>	Erzeugt ein Eigenschaften-Objekt anhand einer XML Repräsentation. </summary>
            <param name="AIXMLText">	[in] XML Repräsentation eines Eigenschaften-Objektes. </param>
            <returns>	neue Instanz eines Eigenschaften-Objektes. </returns>
            <summaryE>	Creates a properties object from a given xml representation. </summaryE>
            <paramE name="AIXMLText">	[in] XML representation oft the properties object to create. </paramE>
            <returnsE>	MAIProperties object. </returnsE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.ToXML">
            <summary>	Konvertiert diese Instanz in einen XML String. </summary>
            <returns>	XML String Repräsentation dieser Instanz. </returns>
            <summaryE>	Converts this object to an XML string. </summaryE>
            <returnsE>	null if it fails, else this object as a XML String. </returnsE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.Remove(System.String)">
            <summary>	Entfernt die Geräte-Eigenschaften eines Gerätes. </summary>
            <param name="AISerialnumber">	[in] Seriennummer des zu löschenden Gerätes. </param>
            <summaryE>	removes the device properties for the specified device. </summaryE>
            <paramE name="AISerialnumber">	[in] serialnumber of the device. </paramE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.Clear">
            <summary>	Setzt diese Objekt auf seinen Anfagszustand zurück (entfernt alle Geräte-Eigenschaften). </summary>
            <summaryE>	Clears this object to its blank/initial state (removes all device properties). </summaryE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.Contains(System.String)">
            <summary>	Gibt an, ob diese Instanz die Geräte-Eigenschaften eines bestimmten Gerätes enthält. </summary>
            <param name="AISerialnumber">	[in] Seriennummer des Gerätes. </param>
            <returns>	true if the object is in this collection, false if not. </returns>
            <summaryE>	determines, if this properties object contains the device properties for the specified device. </summaryE>
            <paramE name="AISerialnumber">	[in] serialnumber of the device. </paramE>
            <returnsE>	true if the device properties object is in this properties object, false if not. </returnsE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.Append(Goldammer.MAITransportClasses.MAIProperties)">
            <summary> Fügt dieser Instanz die Geräte eines zweiten Eigenschaften-Objektes hinzu. </summary>
            <param name="AIMoreDevices">	[in] hinzuzufügendes Eigenschaften-Objektes. </param>
            <summaryE>	Appends the devices of another properties object to this instance. </summaryE>
            <paramE name="AIMoreDevices">	[in] properties object to append. </paramE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.LoadFromXML(System.String)">
            <summary>	Lädt ein Eigenschaften-Objekt aus einer XML Datei. </summary>
            <param name="AIFilename">	[in] Dateiname des zu ladenden Eigenschaften-Objektes. </param>
            <returns>	Eigenschaften-Objekt. </returns>
            <summaryE>	Loads a properties object from disk. </summaryE>
            <paramE name="AIFilename">	[in] filename of the properties object. </paramE>
            <returnsE>	MAIProperties object. </returnsE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.SaveAsXML(System.String,Goldammer.MAITransportClasses.MAIProperties)">
            <summary>	Speichert ein Eigenschaften-Objekt in eine XML Datei ab. </summary>
            <param name="AIFilename">	  	[in] Dateiname des zu speichernden Eigenschaften-Objektes. </param>
            <param name="AISettingToSave">	[in] Das zu speichernde Eigenschaften-Objekt. </param>
            <summaryE>	Saves a properties object to disk. </summaryE>
            <paramE name="AIFilename">	  	[in] filename for the properties object to save. </paramE>
            <paramE name="AISettingToSave">	[in] the properties object to save. </paramE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.Load(System.String)">
            <summary>	Lädt ein Eigenschaften-Objekt aus einer Datei. </summary>
            <param name="AIFilename">	[in] Dateiname des zu ladenden Eigenschaften-Objektes. </param>
            <returns>	Eigenschaften-Objekt. </returns>
            <summaryE>	Loads a properties object from disk. </summaryE>
            <paramE name="AIFilename">	[in] filename of the properties object. </paramE>
            <returnsE>	MAIProperties object. </returnsE>
        </member>
        <member name="M:Goldammer.MAITransportClasses.MAIProperties.Save(System.String,Goldammer.MAITransportClasses.MAIProperties)">
            <summary>	Speichert ein Eigenschaften-Objekt in eine Datei ab. </summary>
            <param name="AIFilename">	  	[in] Dateiname des zu speichernden Eigenschaften-Objektes. </param>
            <param name="AISettingToSave">	[in] Das zu speichernde Eigenschaften-Objekt. </param>
            <summaryE>	Saves a properties object to disk. </summaryE>
            <paramE name="AIFilename">	  	[in] filename for the properties object to save. </paramE>
            <paramE name="AISettingToSave">	[in] the properties object to save. </paramE>
        </member>
        <member name="T:Goldammer.MAITransportClasses.MAIProperties">
            <summary>	MAI Eigenschaften.  </summary>
            <summaryE>	MAI properties.  </summaryE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.RawToDouble(System.Byte[],System.Int32)">
            <summary>	Konvertiert ein Rohdatum (aus dem Streamingmodus) entsprechend der Kanaleinstellungen
			in einen Spannungswert. </summary>
            <param name="AIRawValue">	  	[in] das Rohdatum. </param>
            <param name="AIOffsetInArray">	Offset (Beginn) des gesuchten Rohdatums im Bytearray. </param>
            <returns>	Konvertierter  Spannungswert </returns>
            <summaryE>	converts and scales a raw value (as binary data from tghe streaming mode) 
			according to the settings applied to this channel. </summaryE>
            <paramE name="AIRawValue">	  	[in] raw value as a byte array. </paramE>
            <paramE name="AIOffsetInArray">	offset to skip inside byte array. </paramE>
            <returnsE>	Voltage value </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ScaleRawData(System.Double)">
            <summary>	Skaliert ein Rohdatum entsprechend der gewählten Kanaleristellungen. </summary>
            <param name="AIRaw">	Das zu konvertierende Rohdatum. </param>
            <returns>	Sakliertes Datum. </returns>
            <summaryE>	scales a raw value according to the settings applied to this channel. </summaryE>
            <paramE name="AIRaw">	raw value. </paramE>
            <returnsE>	scaled value. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadData_RealTime_FFT">
            <inheritdoc />
            <summary>	Liest die gemessenen FFT Daten. </summary>
            <returns>	 FFT Spektrum. </returns>
            <summaryE>	reads the FFT analysis data. </summaryE>
            <returnsE>	 FFT spectrum. </returnsE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadData_RealTime_FFT(System.Double[]@,System.UInt32@)">
            <summary>	Liest die gemessenen FFT Daten. </summary>
            <param name="ARValues">		   	[ref] FFT Daten. </param>
            <param name="ARNumberOfValues">	[in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <summaryE>	reads the FFT analysis data. </summaryE>
            <paramE name="ARValues">		   	[ref] FFT data. </paramE>
            <paramE name="ARNumberOfValues">	[in] number of values to read,[out] number of values read. </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadData(System.Int32[]@,System.Double[]@,System.UInt32@,System.Boolean,System.Int64@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten. </summary>
            <param name="ARRawData">		 	[ref] Rohdaten. </param>
            <param name="ARValue">			 	[ref] Messdaten. </param>
            <param name="ARValuesPerChannel">   [in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <param name="AIReadPartial">	 	wenn [true], so wird auch eine kleinere Menge an Daten gelesen, als in ARValuesPerChannel angegeben, der tatsächlich gelesene Wert wird dann in ARValuesPerChannel zurückgeschrieben. </param>
            <param name="AOTimeStampT0">	 	[out] Zeitstempel des ersten Messwertes in DateTime Ticks (1/10 µs). </param>
            <param name="AOTimeStampDeltaT"> 	[out] delta T der Messwerte in Sekunden (1 s = 10000000 DateTime Ticks).  </param>
            <summaryE>	reads the measurement data. </summaryE>
            <paramE name="ARRawData">		 	[ref] raw data. </paramE>
            <paramE name="ARValue">			 	[ref] scaled data. </paramE>
            <paramE name="ARValuesPerChannel">   [in] number of values to read,[out] number of values read. </paramE>
            <paramE name="AIReadPartial">	 	if [true] the input value of ARValuesPerChannel is treated as an upper bound, if [false] it is used as minimum. </paramE>
            <paramE name="AOTimeStampT0">	 	[in,out] timestamp of the first value  in DateTime Ticks (1/10 µs). </paramE>
            <paramE name="AOTimeStampDeltaT"> 	[in,out] delta T between the values in seconds (1 ms = 10000000 DateTime Ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadRawData(System.UInt32)">
            <summary>	Liest die Rohdaten . </summary>
            <param name="AILength">				[in] Anzahl er zu lesenden Daten. </param>
            <returns>	Rohdaten. </returns>
            <summaryE>	reads the measurement data. </summaryE>
            <paramE name="AILength">   [in] number of values to read. </paramE>
            <returns>	raw data. </returns>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadData(System.UInt32)">
            <inheritdoc />
            <summary>	Liest die Messdaten. </summary>
            <param name="AILength">				[in] Anzahl er zu lesenden Daten. </param>
            <returns>	Messdaten. </returns>
            <summaryE>	reads the measurement data. </summaryE>
            <paramE name="AILength">   [in] number of values to read. </paramE>
            <returns>	scaled data. </returns>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadData(System.IO.Stream@,System.IO.Stream@,System.UInt32)">
            <inheritdoc />
            <summary>	Liest die Messdaten und schreibt sie in streams. </summary>
            <param name="ARRawData">		 	[ref] Rohdaten. </param>
            <param name="ARValue">			 	[ref] Messdaten. </param>
            <param name="AILength">				[in] Anzahl er zu lesenden Daten. </param>
            <summaryE>	reads the measurement data and appends it to data streams. </summaryE>
            <paramE name="ARRawData">		 	[ref] raw data. </paramE>
            <paramE name="ARValue">			 	[ref] scaled data. </paramE>
            <paramE name="AILength">            [in] number of values to read. </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadData(System.Int32[]@,System.Double[]@,System.UInt32,System.DateTime@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten. </summary>
            <param name="ARRawData">		 	[out] Rohdaten. (wird intern mit Länge AILength erzeugt) </param>
            <param name="ARValue">			 	[out] Messdaten. (wird intern mit Länge AILength erzeugt) </param>
            <param name="AILength">						[in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes als DateTime. </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Sekunden (1 ms = 10000000 DateTime Ticks).  </param>
            <summaryE>	reads the measurement data. </summaryE>
            <paramE name="ARRawData">		 	[out] raw data. </paramE>
            <paramE name="ARValue">			 	[out] scaled data. </paramE>
            <paramE name="ARValuesPerChannel">   [in] number of values to read,[out] number of values read. </paramE>
            <paramE name="AIReadPartial">	 	if [true] the input value of ARValuesPerChannel is treated as an upper bound, if [false] it is used as minimum. </paramE>
            <paramE name="AOTimeStampT0">	 	[in,out] timestamp of the first value as a DateTime type. </paramE>
            <paramE name="AOTimeStampDeltaT"> 	[in,out] delta T between the values in seconds (1 ms = 10000000 DateTime Ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadData(System.Int32[]@,System.Double[]@,System.UInt32,System.Int64@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten. </summary>
            <param name="ARRawData">		 	[out] Rohdaten. (wird intern mit Länge AILength erzeugt) </param>
            <param name="ARValue">			 	[out] Messdaten. (wird intern mit Länge AILength erzeugt) </param>
            <param name="AILength">						[in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <param name="AOTimeStampT0">	 	        [out] Zeitstempel des ersten Messwertes in DateTime Ticks (1/10 µs). </param>
            <param name="AOTimeStampDeltaT"> 	        [out] delta T der Messwerte in Sekunden (1 ms = 10000000 DateTime Ticks).  </param>
            <summaryE>	reads the measurement data. </summaryE>
            <paramE name="ARRawData">		 	[out] raw data. </paramE>
            <paramE name="ARValue">			 	[out] scaled data. </paramE>
            <paramE name="ARValuesPerChannel">   [in] number of values to read,[out] number of values read. </paramE>
            <paramE name="AIReadPartial">	 	if [true] the input value of ARValuesPerChannel is treated as an upper bound, if [false] it is used as minimum. </paramE>
            <paramE name="AOTimeStampT0">	 	[in,out] timestamp of the first value in DateTime Ticks (1/10 µs). </paramE>
            <paramE name="AOTimeStampDeltaT"> 	[in,out] delta T between the values in seconds (1 ms = 10000000 DateTime Ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadData(System.Int32[]@,System.Double[]@,System.UInt32@,System.Boolean,System.DateTime@,System.Double@)">
            <inheritdoc />
            <summary>	Liest die Messdaten. </summary>
            <param name="ARRawData">		 	[ref] Rohdaten. </param>
            <param name="ARValue">			 	[ref] Messdaten. </param>
            <param name="ARValuesPerChannel">   [in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <param name="AIReadPartial">	 	wenn [true], so wird auch eine kleinere Menge an Daten gelesen, als in ARValuesPerChannel angegeben, der tatsächlich gelesene Wert wird dann in ARValuesPerChannel zurückgeschrieben. </param>
            <param name="AOTimeStampT0">	 	[in,out] Zeitstempel des ersten Messwertes. </param>
            <param name="AOTimeStampDeltaT"> 	[in,out] delta T der Messwerte in Sekunden (1 ms = 10000000 DateTime Ticks).  </param>
            <summaryE>	reads the measurement data. </summaryE>
            <paramE name="ARRawData">		 	[ref] raw data. </paramE>
            <paramE name="ARValue">			 	[ref] scaled data. </paramE>
            <paramE name="ARValuesPerChannel">   [in] number of values to read,[out] number of values read. </paramE>
            <paramE name="AIReadPartial">	 	if [true] the input value of ARValuesPerChannel is treated as an upper bound, if [false] it is used as minimum. </paramE>
            <paramE name="AOTimeStampT0">	 	[in,out] timestamp of the first value. </paramE>
            <paramE name="AOTimeStampDeltaT"> 	[in,out] delta T between the values in seconds (1 ms = 10000000 DateTime Ticks).  </paramE>
        </member>
        <member name="M:Goldammer.MAIMeasurementChannelAD.ReadData(System.Int32[]@,System.Double[]@,System.UInt32@,System.Boolean)">
            <summary>	Liest die Messdaten. </summary>
            <param name="ARRawData">		 	[ref] Rohdaten. </param>
            <param name="ARValue">			 	[ref] Messdaten. </param>
            <param name="ARValuesPerChannel">   [in] Anzahl er zu lesenden Daten,[out] Anzhl der gelesenen Daten. </param>
            <param name="AIReadPartial">	 	wenn [true], so wird auch eine kleinere Menge an Daten gelesen, als in ARValuesPerChannel angegeben, der tatsächlich gelesene Wert wird dann in ARValuesPerChannel zurückgeschrieben. </param>
            <summaryE>	reads the measurement data. </summaryE>
            <paramE name="ARRawData">		 	[ref] raw data. </paramE>
            <paramE name="ARValue">			 	[ref] scaled data. </paramE>
            <paramE name="ARValuesPerChannel">   [in] number of values to read,[out] number of values read. </paramE>
            <paramE name="AIReadPartial">	 	if [true] the input value of ARValuesPerChannel is treated as an upper bound, if [false] it is used as minimum. </paramE>
        </member>
        <member name="T:Goldammer.MAIDeviceOperationFailedException">
            <summary>	Goldammer Exception-Klasse, die geworfen wird, wenn eine Aktion fehlgeschlagen ist.  </summary>
            <remarks>	Wird lokalisiert auf deutsch oder Englisch (eingestellte Systemsprache). </remarks>
            <summaryE>	Goldammer exception classe. gets thrown, when an is available but operation fails.  </summaryE>
            <remarksE>	gets localized to the system language. </remarksE>
        </member>
        <member name="P:Goldammer.MAIDevice.Properties">
            <summary>	Gibt ein MAIPropertiesDevice Objekt zurück, das die Eigneschaften dieses Gerätes beschreibt. </summary>
            <value>	MAIPropertiesDevice. </value>
            <summaryE>	Gets this device's properties. </summaryE>
            <valueE>	The device's properties. </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.IsAudioDevice">
            <summary>	Gibt an, ob dies ein Audio Gerät ist. </summary>
            <value>	[true], wenn dies ein Audio Gerät ist. </value>
            <summary>	indicates whether this is an audio device. </summary>
            <value>	[true] if this is an audio device. </value>
        </member>
        <member name="P:Goldammer.MAIDevice.IsDSPDevice">
            <summary>	Gibt an, ob dies ein Gerät mit DSP ist. </summary>
            <value>	[true], wenn dies ein Gerät mit DSP ist. </value>
            <summary>	indicates whether this is a device with a DSP. </summary>
            <value>	[true] if this is a device with a DSP. </value>
        </member>
        <member name="P:Goldammer.MAIDevice.IsUSBBasicDevice">
            <summary>	Gibt an, ob dies ein USB Basic Gerät ist. </summary>
            <value>	[true], wenn dies ein USB Basic Gerät ist. </value>
            <summary>	indicates whether this is an usb basic device. </summary>
            <value>	[true] if this is an usb basic device. </value>
        </member>
        <member name="P:Goldammer.MAIDevice.MeasurementState">
            <summary>	Gibt den Zustand der Messung zurück. </summary>
            <value>	Zustand der Messung. </value>
            <summaryE>	Gets the state of the measurement. </summaryE>
            <valueE>	The measurement state. </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.NumberOfCreatedDAOutputChannels">
            <summary>	Gibt die Anzahl der bereits parametrierten DA Messkanaele zurueck. </summary>
            <value>	Anzahl der bereits parametrierten DA Messkanaele. </value>
            <summaryE>	returns the number of DA measurement channels that are defined on this device.</summaryE>
            <valueE>  the number of DA measurement channels </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.NumberOfCreatedADMeasurementChannels">
            <summary>	Gibt die Anzahl der bereits parametrierten AD Messkanaele zurueck. </summary>
            <value>	Anzahl der bereits parametrierten AD Messkanaele. </value>
            <summaryE>	returns the number of AD measurement channels that are defined on this device.</summaryE>
            <valueE>  the number of AD measurement channels </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.NumberOfCreatedTTLMeasurementChannels">
            <summary>	Gibt die Anzahl der bereits parametrierten TTL Messkanaele zurueck. </summary>
            <value>	Anzahl der bereits parametrierten TTL Messkanaele. </value>
            <summaryE>	returns the number of TTL measurement channels that are defined on this device.</summaryE>
            <valueE>  the number of TTL measurement channels </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.NumberOfCreatedCTMeasurementChannels">
            <summary>	Gibt die Anzahl der bereits parametrierten CT Messkanaele zurueck. </summary>
            <value>	Anzahl der bereits parametrierten CT Messkanaele. </value>
            <summaryE>	returns the number of CT measurement channels that are defined on this device.</summaryE>
            <valueE>  the number of CT measurement channels </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.NumberOfPWMChannels">
            <summary>	Gibt die Anzahl der PWM Kanaele zurueck. </summary>
            <value>	Anzahl der PWM Kanaele. </value>
            <summaryE>	returns the number of PWM channels on this device.</summaryE>
            <valueE>  the number of PWM channels </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.NumberOfDAChannels">
            <summary>	Gibt die Anzahl der DA Kanaele zurueck. </summary>
            <value>	Anzahl der DA Kanaele. </value>
            <summaryE>	returns the number of DA channels on this device.</summaryE>
            <valueE>  the number of DA channels </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.NumberOfADChannels">
            <summary>	Gibt die Anzahl der AD Kanaele zurueck. </summary>
            <value>	Anzahl der AD Kanaele. </value>
            <summaryE>	returns the number of AD channels on this device.</summaryE>
            <valueE>  the number of AD channels </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.NumberOfTTLChannels">
            <summary>	Gibt die Anzahl der TTL Kanaele zurueck. </summary>
            <value>	Anzahl der TTL Kanaele. </value>
            <summaryE>	returns the number of TTL channels on this device.</summaryE>
            <valueE>  the number of TTL channels </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.NumberOfCTChannels">
            <summary>	Gibt die Anzahl der CT Kanaele zurueck. </summary>
            <value>	Anzahl der CT Kanaele. </value>
            <summaryE>	returns the number of CT channels on this device.</summaryE>
            <valueE>  the number of CT channels </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.SSIControl">
            <summary>	Der SSI Controller dieses Geräts. Dieser enthält alle Funktionen zur Steuerung. </summary>
            <value>	SSI Controller  </value>
            <summaryE>	 SSI Channel Controller of this device.</summaryE>
            <valueE>	SSI Channel Controller  </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.PWMChannels">
            <summary>	Der PWM Channel Controller dieses Geräts. Dieser enthält alle PWM Kanäle als default property und alle Funktionen zur Steuerung</summary>
            <value>	PWM Channel Controller  </value>
            <summaryE>	 PWM Channel Controller of this device.</summaryE>
            <valueE>	PWM Channel Controller  </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.DAChannels">
            <summary>	Der DA Channel Controller dieses Geräts. Dieser enthält alle DA Kanäle als default property und alle Funktionen zur Steuerung</summary>
            <value>	DA Channel Controller  </value>
            <summaryE>	 DA Channel Controller of this device.</summaryE>
            <valueE>	DA Channel Controller  </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.ADChannels">
            <summary>	Der AD Channel Controller dieses Geräts. Dieser enthält alle AD Kanäle als default property und alle Funktionen zur Steuerung</summary>
            <value>	AD Channel Controller  </value>
            <summaryE>	 AD Channel Controller of this device.</summaryE>
            <valueE>	AD Channel Controller  </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.TTLChannels">
            <summary>	Der TTL Channel Controller dieses Geräts. Dieser enthält alle TTL Kanäle als default property und alle Funktionen zur Steuerung</summary>
            <value>	TTL Channel Controller  </value>
            <summaryE>	 TTL Channel Controller of this device.</summaryE>
            <valueE>	TTL Channel Controller  </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.CTChannels">
            <summary>	Der CT Channel Controller dieses Geräts. Dieser enthält alle CT Kanäle als default property und alle Funktionen zur Steuerung</summary>
            <value>	CT Channel Controller  </value>
            <summaryE>	 CT Channel Controller of this device.</summaryE>
            <valueE>	CT Channel Controller  </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.IsHighSpeedUSB">
            <summary>	[true], wenn das Geraet ueber USB 2.0 verbunden ist, sonst [false] </summary>
            <value>	[true], wenn das Geraet ueber USB 2.0 verbunden ist, sonst [false]. </value>
            <summaryE>	[true], if this device is connected via USB 2.0 , else [false] </summaryE>
            <valueE> [true], if this device is connected via USB 2.0 , else [false] </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.DeviceType">
            <summary>	Gibt den MeasurementDeviceType das Geraets zurueck. </summary>
            <value>	MeasurementDeviceType das Geraets </value>
            <summaryE>	returns the MeasurementDeviceType of this device. </summaryE>
            <valueE>	MeasurementDeviceType  </valueE>
        </member>
        <member name="P:Goldammer.MAIDevice.Info">
            <summary>	Gibt ein DeviceInfo Objekt zurueck, das dieses Geraet beschreibt. </summary>
            <value>	DeviceInfo Objekt </value>
            <summaryE>	returns a DeviceInfo object, that describes this device. </summaryE>
            <valueE>	DeviceInfo  </valueE>
        </member>
        <member name="T:Goldammer.MAIDevice">
            <summary>	Goldammer Messkarte. </summary>
        </member>
        <member name="T:Goldammer.SWExtension">
            <summary>	mögliche Softwareerweiterungen  </summary>
            <summaryE>	mögliche Softwareerweiterungen  </summaryE>
        </member>
        <member name="F:Goldammer.SWExtension.Extended_Stoptrigger">
            <summary> Extended_Stoptrigger.  </summary>
            <summaryE> Extended_Stoptrigger.  </summaryE>
        </member>
        <member name="F:Goldammer.SWExtension.UpDown_Card">
            <summary> UpDown_Card.  </summary>
            <summaryE> UpDown_Card.  </summaryE>
        </member>
        <member name="F:Goldammer.SWExtension.Airbag_Pruefstand">
            <summary> Airbag_Pruefstand.  </summary>
            <summaryE> Airbag_Pruefstand.  </summaryE>
        </member>
        <member name="F:Goldammer.SWExtension.Wabco_Projekt">
            <summary> Wabco_Projekt.  </summary>
            <summaryE> Wabco_Projekt.  </summaryE>
        </member>
        <member name="F:Goldammer.SWExtension.OnboardFunktionsgenerator">
            <summary> OnboardFunktionsgenerator.  </summary>
            <summaryE> onboard function generator.  </summaryE>
        </member>
        <member name="F:Goldammer.SWExtension.Online_Linearisierung">
            <summary> Online_Linearisierung.  </summary>
            <summaryE> Online_linearization.  </summaryE>
        </member>
        <member name="F:Goldammer.SWExtension.Online_PID">
            <summary> Online_PID.  </summary>
            <summaryE> Online_PID.  </summaryE>
        </member>
        <member name="F:Goldammer.SWExtension.Online_Filter">
            <summary> Online_Filter.  </summary>
            <summaryE> Online_Filter.  </summaryE>
        </member>
        <member name="F:Goldammer.SWExtension.Online_FFT">
            <summary> Online_FFT  </summary>
            <summaryE> Online_FFT  </summaryE>
        </member>
        <member name="T:Goldammer.HWExtension">
            <summary>	mögliche Hardwareerweiterungen  </summary>
            <summaryE>	possible hardware extensions  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.IEPE_Einspeisung">
            <summary> IEPE_Einspeisung.  </summary>
            <summaryE> IEPE powering.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension._32Bit_Zaehler">
            <summary> 32Bit Zaehler.  </summary>
            <summaryE> 32bit counter.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.Thermoelementanschluss_8Kanal">
            <summary> Thermoelementanschluss_8Kanal.  </summary>
            <summaryE> eight channel thermocouple element connector.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.SSI_Schnittstelle">
            <summary> SSI_Schnittstelle.  </summary>
            <summaryE> SSI Port.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.MH_Zaehlererweiterung">
            <summary> MH_Zaehlererweiterung.  </summary>
            <summaryE> MH counter extension.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.RegeneratorAutomotiv">
            <summary> RegeneratorAutomotiv.  </summary>
            <summaryE> regenerator automotive.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.Inkrementalzaehler">
            <summary> Inkrementalzaehler. .  </summary>
            <summaryE> rotary counter.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.Coprozessor_56311">
            <summary> Coprozessor_56311.  </summary>
            <summaryE> coprozessor 56311.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.Coprozessor_56307">
            <summary> Coprozessor_56307.  </summary>
            <summaryE> coprozessor 56307.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.TTL_Bitweise">
            <summary> TTL_Bitweise.  </summary>
            <summaryE> TTL bitwise.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.Zeitstempel">
            <summary> Zeitstempel.  </summary>
            <summaryE> timestamp.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.DualWandler">
            <summary> DualWandler.  </summary>
            <summaryE> dual converter.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.MultiplexerUeberspannungsschutz">
            <summary> MultiplexerUeberspannungsschutz.  </summary>
            <summaryE> multiplexer crowbar (overvoltage protection).  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.DA_Wandler">
            <summary> DA_Wandler.  </summary>
            <summaryE> DA converter.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.PWM_Karte">
            <summary> PWM_Karte.  </summary>
            <summaryE> PWM board.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.PWM_Ausgabe">
            <summary> PWM_Ausgabe.  </summary>
            <summaryE> PWM outout.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.UpDown_Counter">
            <summary> UpDown_Counter.  </summary>
            <summaryE> up/down counter.  </summaryE>
        </member>
        <member name="F:Goldammer.HWExtension.Zaehlerupgrade">
            <summary> Zaehlerupgrade.  </summary>
            <summaryE> counter upgrade.  </summaryE>
        </member>
        <member name="T:Goldammer.ExternTriggerMode">
            <summary>	Modus der externen Triggerung.  </summary>
            <summaryE>	extern Trigger mode.  </summaryE>
        </member>
        <member name="F:Goldammer.ExternTriggerMode.Clock">
            <summary> Externer Takt.  </summary>
            <summaryE> extern clock.  </summaryE>
        </member>
        <member name="F:Goldammer.ExternTriggerMode.Start">
            <summary> Nur Startsignal.  </summary>
            <summaryE> start signal only.  </summaryE>
        </member>
        <member name="F:Goldammer.ExternTriggerMode.Disabled">
            <summary> Keine externe Triggerung.  </summary>
            <summaryE> no extern trigger events.  </summaryE>
        </member>
        <member name="T:Goldammer.RunningMode">
            <summary>	Betriebsmodus der Messkarte.  </summary>
            <summaryE>	running mode of a device.  </summaryE>
        </member>
        <member name="F:Goldammer.RunningMode.Slave">
            <summary> Als Slave.  </summary>
            <summaryE> as slave.  </summaryE>
        </member>
        <member name="F:Goldammer.RunningMode.Master">
            <summary> Als Master.  </summary>
            <summaryE> as master.  </summaryE>
        </member>
        <member name="F:Goldammer.RunningMode.Standalone">
            <summary> Einzeln.  </summary>
            <summaryE> standalone.  </summaryE>
        </member>
        <member name="P:Goldammer.DeviceInfo.OnlineFunctionsPossible">
            <summary>	Gibt an, ob diese Karte Onlinefunktionen erlaubt. </summary>
            <remarks> ... </remarks>
            <value>	wenn [true]: Onlinefunktionen sind möglich. </value>
            <summaryE>	Indicates if this device is enabled for online functions. </summaryE>
            <valueE>	[true] if this device can process some online functions. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.SoftwareExtension">
            <summary>	Gibt die SoftwareExtension zurück. </summary>
            <remarks> ... </remarks>
            <value>	SoftwareExtension. </value>
            <summaryE>	returns the installed software extensions. </summaryE>
            <valueE>	software extensions. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.HardwareExtension">
            <summary>	Gibt die HardwareExtension zurück. </summary>
            <remarks> ... </remarks>
            <value>	Hardware extensions. </value>
            <summaryE> returns the installed hardware extensions. </summaryE>
            <valueE> hardware extensions. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.PWMSampleWidth">
            <summary>	Gibt die SampleWidth der PWM Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	PWM SampleWidth. </value>
            <summaryE>	. </summaryE>
            <valueE>	. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.TTLSampleWidth">
            <summary>	Gibt die SampleWidth der TTL Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	TTL SampleWidth. </value>
            <summaryE>	returns  the sample width of the TTL channels. </summaryE>
            <valueE> TTL sample width. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.CTSampleWidth">
            <summary>	Gibt die SampleWidth der CT Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	CT SampleWidth. </value>
            <summaryE> returns  the sample width of the CT channels. </summaryE>
            <valueE> CT sample width. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.DASampleWidth">
            <summary>	Gibt die SampleWidth der DA Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	DA SampleWidth. </value>
            <summaryE>	returns  the sample width of the DA channels. </summaryE>
            <valueE> DA sample width. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.ADSampleWidth">
            <summary>	Gibt die SampleWidth der AD Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	AD SampleWidth. </value>
            <summaryE>	returns  the sample width of the AD channels. </summaryE>
            <valueE> AD sample width. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.PWMSampleRate">
            <summary>	Gibt die maximale SampleRate der PWM Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	PWM Samplerate. </value>
            <summaryE>	returns  the maximum sample rate of the PWM channels. </summaryE>
            <valueE>	maximum PWM sample rate. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.TTLSampleRate">
            <summary>	Gibt die SampleRate der TTL Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	TTL Samplerate. </value>
            <summaryE>	returns  the maximum sample rate of the TTL channels. </summaryE>
            <valueE>	maximum TTL sample rate. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.CTSampleRate">
            <summary>	Gibt die SampleRate der CT Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	CT Samplerate. </value>
            <summaryE>	returns  the maximum sample rate of the CT channels. </summaryE>
            <valueE>	maximum CT sample rate. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.DASampleRate">
            <summary>	Gibt die SampleRate der DA Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value> DA Samplerate. </value>
            <summaryE>	returns  the maximum sample rate of the DA channels. </summaryE>
            <valueE>	maximum DA sample rate. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.ADSampleRate">
            <summary>	Gibt die SampleRate der AD Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	AD Samplerate. </value>
            <summaryE>	returns  the maximum sample rate of the AD channels. </summaryE>
            <valueE>	maximum AD sample rate. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.PWMChannels">
            <summary>	Gibt die Anzahl der PWM Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	Anzahl der PWM Kanaele </value>
            <summaryE>	returns the number of PWM channels. </summaryE>
            <valueE>	number of PWM channels. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.TTLChannels">
            <summary>	Gibt die Anzahl der TTL Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	Anzahl der TTL Kanaele </value>
            <summaryE>	returns the number of TTL channels. </summaryE>
            <valueE>	number of TTL channels. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.CTChannels">
            <summary>	Gibt die Anzahl der CT Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	Anzahl der CT Kanaele </value>
            <summaryE>	returns the number of CT channels. </summaryE>
            <valueE>	number of CT channels. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.DAChannels">
            <summary>	Gibt die Anzahl der DA Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	Anzahl der DA Kanaele </value>
            <summaryE>	returns the number of DA channels. </summaryE>
            <valueE>	number of DA channels. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.ADChannels">
            <summary>	Gibt die Anzahl der AD Kanäle zurück. </summary>
            <remarks> ... </remarks>
            <value>	Anzahl der AD Kanaele </value>
            <summaryE>	returns the number of AD channels. </summaryE>
            <valueE>	number of AD channels. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.MeasureProcessorVersion">
            <summary>	Gibt die MeasureProcessor Version zurück. </summary>
            <remarks> ... </remarks>
            <value>	MeasureProcessorVersion. </value>
            <summaryE>	returns the version number of the measurement processor. </summaryE>
            <valueE>	version number of the measurement processor. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.BasicDigitalExtensionID">
            <summary>	Gibt die ID der USB Basic Digitalerweiterung zurück. </summary>
            <remarks> ... </remarks>
            <value>	 ID der USB Basic Digitalerweiterung. </value>
            <summaryE>	returns the ID of the USB Basic Digital Extension. </summaryE>
            <valueE>	ID of the USB Basic Digital Extension. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.BasicFrontendID">
            <summary>	Gibt die ID des USB Basic Frontends zurück. </summary>
            <remarks> ... </remarks>
            <value>	 ID des USB Basic Frontends. </value>
            <summaryE>	returns the ID of the USB Basic Frontend. </summaryE>
            <valueE>	ID of the USB Basic Frontend.. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.ControllerVersion">
            <summary>	Gibt die Controller Version zurück. </summary>
            <remarks> ... </remarks>
            <value>	Controller version. </value>
            <summaryE>	returns the version number of the controller firmware. </summaryE>
            <valueE>	version number of the WDM driver. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.CardName">
            <summary>	Gibt den Namen der Karte zurück. </summary>
            <remarks> ... </remarks>
            <value>	Name der Karte. </value>
            <summaryE>	returns the name of the card. </summaryE>
            <valueE>	name of the card. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.CardSeller">
            <summary>	Gibt den Namen des Kartenverteibers zurück. </summary>
            <remarks> ... </remarks>
            <value>	Kartenverteibername. </value>
            <summaryE>	returns the name of the card distributor. </summaryE>
            <valueE>	card distributors name. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.CardProducer">
            <summary>	Gibt den Namen des Kartenherstellers zurück. </summary>
            <remarks> ... </remarks>
            <value>	Name des Kartenherstellers. </value>
            <summaryE>	returns the name of the card producer. </summaryE>
            <valueE>	card producers name. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.ManufactureName">
            <summary>	Gibt die Typbezeichnug des Boards zurück. </summary>
            <remarks> ... </remarks>
            <value> Typbezeichnug des Boards. </value>
            <summaryE>	returns the type name of the device's board. </summaryE>
            <valueE> type name of the device's board. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.CustomerName">
            <summary>	Gibt den Namen des Kaeufers zurück. </summary>
            <remarks> ... </remarks>
            <value>	Name des Kunden. </value>
            <summaryE>	returns the name of the customer. </summaryE>
            <valueE>	customer name. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.DateOfPurchase">
            <summary>	Gibt das Datum des Kaufs zurück. </summary>
            <remarks> ... </remarks>
            <value>	 Datum des Kaufs. </value>
            <summaryE>	returns the date of purchase . </summaryE>
            <valueE> purchase date. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.CustomerNumber">
            <summary>	Gibt den eindeutige Nummer des Kaeufers zurück. </summary>
            <remarks> ... </remarks>
            <value>	Kundennummer. </value>
            <summaryE>	returns the unique custumer number. </summaryE>
            <valueE>	customer number. </valueE>
        </member>
        <member name="P:Goldammer.DeviceInfo.SerialNumber">
            <summary>
Gibt die Seriennummer des Gerätes zurück
</summary>
            <remarks> ... </remarks>
            <summaryE>
returns the serial number of the device
</summaryE>
        </member>
        <member name="M:Goldammer.DeviceInfo.GetCompleteDescriptionString">
            <summary>
Gibt sämtliche Infos in einem String

</summary>
            <summaryE>
returns all infos in one string
</summaryE>
            <summary>	Gibt die DeviceInfo als einzelnen großen String zurück. </summary>
            <returns>	Device Info als ein String. </returns>
            <summaryE>	returns all device information in one string. </summaryE>
            <returnsE>	device information in one string. </returnsE>
        </member>
        <member name="T:Goldammer.DeviceInfo">
            <summary>	Enthält alle Informationen, die ein Goldammer-Geraet beschreiben.  </summary>
            <remarks> ... </remarks>
            <remarks>	Jeder Karte wird ueber ihre Seriennummer eindeutig identifiziert. </remarks>
            <summaryE>	contains all informations, that describe a certain Goldammer device  </summaryE>
            <remarksE>	each device has a unique serial number. </remarksE>
        </member>
        <member name="T:Goldammer.MAIChannelControllerSSI">
            <summary>	SSI Controller.  </summary>
            <summaryE>	SSI controller.  </summaryE>
        </member>
        <member name="T:Goldammer.SSIMode">
            <summary>	Modus des SSI Ports  </summary>
            <summaryE>	mode of the SSI Port  </summaryE>
        </member>
        <member name="F:Goldammer.SSIMode.Active">
            <summary> aktiv.  </summary>
            <summaryE> active.  </summaryE>
        </member>
        <member name="F:Goldammer.SSIMode.Passive">
            <summary> passiv.  </summary>
            <summaryE> passive.  </summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerPWM.Count">
            <summary>	Gibt die Anzahl der PWM Kanäle zurück. </summary>
            <value>	Anzahl der PWM Kanäle. </value>
            <summaryE>
returns the number of PWM channels. 
</summaryE>
            <value>	number of PWM channels. </value>
        </member>
        <member name="P:Goldammer.MAIChannelControllerPWM.Item(System.Int32)">
            <summary>	Gibt den [i]ten PWM Kanal zurück. </summary>
            <value>	Der PWM kanal mit dem Index [i]. </value>
            <summaryE>	returns the [i]th PWM hardware channel. </summaryE>
            <valueE>	PWM hardware channel with index [i]. </valueE>
        </member>
        <member name="T:Goldammer.MAIChannelControllerPWM">
            <summary>	PWM  Channel Controller.  </summary>
            <summaryE>	PWM  channel controller.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIChannelPWM">
            <summary>	PWM Kanal  </summary>
            <summaryE>	PWM channel  </summaryE>
        </member>
        <member name="T:Goldammer.PWMChannelMode">
            <summary>	Modus eines PWM Kanals  </summary>
            <summaryE>	PWM channel mode  </summaryE>
        </member>
        <member name="F:Goldammer.PWMChannelMode.PulseWidthModulation">
            <summary> Pulsweitenmodulation (PWM) respektive Pulslängenmodulation (PLM; auch: Unterschwingungsverfahren) .  </summary>
            <summaryE> pulse width modulation (PWM) eg. pluse lenght modulation(PLM) .  </summaryE>
        </member>
        <member name="F:Goldammer.PWMChannelMode.FreqencyModulation">
            <summary> Frequenzmodulation.  </summary>
            <summaryE> freqency modulation.  </summaryE>
        </member>
        <member name="F:Goldammer.PWMChannelMode.NotConfigured">
            <summary> PWM Kanal ist nicht definiert </summary>
            <summaryE> PWM channel is not configured </summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerDA.OutputChannel(System.Int32)">
            <summary>
Gibt die bisher definierten Ausgabekanäle zurück 
</summary>
            <summaryE>
returns the DA measurement channel with this index if exiting (must be previously defined). 
</summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerDA.Item(System.Int32)">
            <summary>	Gibt den [i]ten DA Hardwarekanal zurück. </summary>
            <value>	DA Harwarekanal mit dem Index [i]. </value>
            <summaryE>	returns the [i]th DA hardware channel. </summaryE>
            <valueE>	DA hardware channel with index [i]. </valueE>
        </member>
        <member name="T:Goldammer.MAIChannelControllerDA">
            <summary>	DA Channel Controller.  </summary>
            <summaryE>	DA channel controller.  </summaryE>
        </member>
        <member name="T:Goldammer.AudioDACStatus">
            <summary />
            <value />
            <summaryE />
            <valueE>	. </valueE>
        </member>
        <member name="T:Goldammer.DARange">
            <summary>	Ausgabebereich der DA Kanäle.  </summary>
            <summaryE>	output range of the DA channels.  </summaryE>
        </member>
        <member name="F:Goldammer.DARange.Bipolar">
            <summary> Bipolar: Von -10 bis 10 V.   </summary>
            <summaryE> Bipolar: from -10 to 10 V.   </summaryE>
        </member>
        <member name="F:Goldammer.DARange.Unipolar">
            <summary> Unipolar: Von 0 bis 10 V.  </summary>
            <summaryE> Unipolar: from 0 to 10 V.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIChannelDA">
            <summary>	DA Kanal.  </summary>
            <summaryE>	DA channel.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIMeasurementChannelDA">
            <summary>	DA Ausgabekanal.  </summary>
            <summaryE>	DA output channel.  </summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerAD.DataSink">
            <summary>	DataSink dieses ChannelControllers. </summary>
            <summaryE>	data sink for this channel controller. </summaryE>
            <value>	MAIDataSink </value>
            <valueE>	MAIDataSink. </valueE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerAD.MeasurementChannel(System.Int32)">
            <summary>
Gibt die bisher definierten Messkanäle zurück 
</summary>
            <summaryE>
returns the AD measurement channel with this index if exiting (must be previously defined). 
</summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerAD.Item(System.Int32)">
            <summary>	Gibt den Kanal mit dem übergebenen Index zurück. </summary>
            <value>	AD Kanal. </value>
            <summaryE>	returns the AD channel with this index. </summaryE>
            <valueE>	AD channel. </valueE>
        </member>
        <member name="T:Goldammer.MAIChannelControllerAD">
            <summary>	AD Channel Controller.  </summary>
            <summaryE>	AD channel controller.  </summaryE>
        </member>
        <member name="T:Goldammer.AudioADCStatus">
            <summary />
            <value />
            <summaryE />
            <valueE />
        </member>
        <member name="T:Goldammer.DFFilterResponse">
            <summary>	Filter Response Setting für den ADC Digital decimation filter response bei Audio-Karten .  </summary>
            <summaryE>	filter response settingfor the ADC Digital decimation filter response on audio cards.  </summaryE>
        </member>
        <member name="F:Goldammer.DFFilterResponse.LowGroupDelay">
            <summary> Low Group Delay, group delay = 21/fs0.  </summary>
            <summaryE> low group delay, group delay = 21/fs0.  </summaryE>
        </member>
        <member name="F:Goldammer.DFFilterResponse.Classic">
            <summary> Classic response, group delay = 39/fs0.  </summary>
            <summaryE> Classic response, group delay = 39/fs0.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIChannelAD">
            <summary>	AD Kanal  </summary>
            <summaryE>	AD channel  </summaryE>
        </member>
        <member name="T:Goldammer.MeasurementDeviceType">
            <summary>	Verfügbare Gerätetypen (Geräteserien der Firma Goldammer)  </summary>
            <summaryE>	available device types (devices by Goldammer, Wolfsburg (Germany))  </summaryE>
        </member>
        <member name="F:Goldammer.MeasurementDeviceType.MULTICHOISE_ETH">
            <summary> Geräte der Serie Ethernet </summary>
            <summaryE> devices from the Ethernet series </summaryE>
        </member>
        <member name="F:Goldammer.MeasurementDeviceType.MULTICHOICE_USB">
            <summary> Geräte der Serie USB MC4 </summary>
            <summaryE> devices from the USB MC4 series </summaryE>
        </member>
        <member name="F:Goldammer.MeasurementDeviceType.MULTICHOICE_PCI">
            <summary> Geräte der PCI MC4 Serien </summary>
            <summaryE> devices from the PCI MC4 series </summaryE>
        </member>
        <member name="F:Goldammer.MeasurementDeviceType.MULTICHOICE_USB_BASIC">
            <summary> Geräte der Serie USB Basic </summary>
            <summaryE> devices from the USBBasic series </summaryE>
        </member>
        <member name="F:Goldammer.MeasurementDeviceType.MULTICHOICE_ANY">
            <summary> Alle Kartentypen  </summary>
            <summaryE> all device types  </summaryE>
        </member>
        <member name="T:Goldammer.IEPEMode">
            <summary>	Modus der IEPE Ausgabe  </summary>
            <summaryE>	IEPE powering mode  </summaryE>
        </member>
        <member name="F:Goldammer.IEPEMode.AC_SE_IEPE_on">
            <summary> AC, Massebezogen IEPE  aktiv.  </summary>
            <summaryE>	AC, Differencial, IEPE_on  </summaryE>
        </member>
        <member name="F:Goldammer.IEPEMode.AC_SE_IEPE_off">
            <summary> AC, Differenz, IEPE  inaktiv.  </summary>
            <summaryE>	AC, Differencial, IEPE_off  </summaryE>
        </member>
        <member name="F:Goldammer.IEPEMode.DC_Diff_IEPE_off">
            <summary> DC, Differenz, IEPE  inaktiv.  </summary>
            <summaryE>	DC, Differencial, IEPE_off  </summaryE>
        </member>
        <member name="F:Goldammer.IEPEMode.DC_SE_IEPE_off">
            <summary> DC, Massebezogen, IEPE  inaktiv.  </summary>
            <summaryE>	DC, SE, IEPE_off  </summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerTTL.MeasurementChannel(System.Int32)">
            <summary>
Gibt die bisher definierten Messkanäle zurück 
</summary>
            <summaryE>
returns the TTL measurement channel with this index if exists (must be previously defined). 
</summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerTTL.Item(System.Int32)">
            <summary>	Gibt den [i]ten TTL Kanal zurück. </summary>
            <value>	TTL Kanal mit dem Index [i]. </value>
            <summary>	returns the [i]th TTL channel. </summary>
            <value>	TTL channel with index [i]. </value>
        </member>
        <member name="P:Goldammer.MAIChannelControllerTTL.PortInfo">
            <summary>	Gibt eine Beschreibung der verbauten TTL Ports zurück. </summary>
            <value>	Beschreibung des verbauten TTL Ports. </value>
            <summaryE>	returns a description of the TTL port. </summaryE>
            <valueE>	description of the TTL port. </valueE>
        </member>
        <member name="T:Goldammer.MAIChannelControllerTTL">
            <summary>	TTL Channel Controller.  </summary>
            <summaryE>	TTL channel controller.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIChannelTTL">
            <summary>	TTL Kanal </summary>
            <summaryE>	TTL channel </summaryE>
        </member>
        <member name="T:Goldammer.MeasurementChannelSyncMode">
            <summary>	Gibt an, ob ein (digitaler) Messkanal Kanal synchron mit den AD Messkanälen oder synchron mit
			den anderen Kanälen seines Typs aufgezeichnet wird. </summary>
            <summaryE>	determines, if a (digtal) measurement channel is recorded synchronously (with the AD samplerate)
			to the AD channels, or to the channels of its type. </summaryE>
        </member>
        <member name="F:Goldammer.MeasurementChannelSyncMode.PerChannelType">
            <summary> Der Kanal wird mit den Messkanälen des gleichen Typs synchron aufgezeichnet </summary>
            <summaryE> the channel will be recorded synchronously to the channels of its own type </summaryE>
        </member>
        <member name="F:Goldammer.MeasurementChannelSyncMode.OnADChannels">
            <summary> Der Kanal wird synchron mit den AD Messkanälen aufgezeichnet </summary>
            <summaryE> the channel will be recorded synchronously to the AD channels </summaryE>
        </member>
        <member name="T:Goldammer.MAIMeasurementChannelTTL">
            <summary>	TTL Messkanal.  </summary>
            <summaryE>	TTL mesurement channel.  </summaryE>
        </member>
        <member name="T:Goldammer.TTLDigitalType">
            <summary>	Typ eines TTL Messkanals  </summary>
            <summaryE>	type of a TTL measurement channel  </summaryE>
        </member>
        <member name="F:Goldammer.TTLDigitalType.Word">
            <summary> ein Datenwort (16 Bit).  </summary>
            <summaryE> one word (16 Bit).  </summaryE>
        </member>
        <member name="F:Goldammer.TTLDigitalType.Byte">
            <summary> ein Byte (8 Bit).  </summary>
            <summaryE> one byte (8 Bit).  </summaryE>
        </member>
        <member name="F:Goldammer.TTLDigitalType.Bit">
            <summary> ein Bit.  </summary>
            <summaryE> one bit.  </summaryE>
        </member>
        <member name="T:Goldammer.IODirection">
            <summary>	Richtung/Verwendung eines TTL Pins.  </summary>
            <summaryE>	direction of a TTL Pin. </summaryE>
        </member>
        <member name="F:Goldammer.IODirection.Output">
            <summaryE> Ausgang.  </summaryE>
            <summaryE> Output.  </summaryE>
        </member>
        <member name="F:Goldammer.IODirection.Input">
            <summary> Eingang.  </summary>
            <summaryE> Input.  </summaryE>
        </member>
        <member name="T:Goldammer.TTLPortState">
            <summary>	Status eines TTL Ports.  </summary>
            <summaryE>	state of a TTL Port.  </summaryE>
        </member>
        <member name="F:Goldammer.TTLPortState.UNDEFINED">
            <summary> undefiniert.  </summary>
            <summaryE> not defined.  </summaryE>
        </member>
        <member name="F:Goldammer.TTLPortState.NOTCHANGEABLE">
            <summary> nicht konfigurierbar.  </summary>
            <summaryE> not configureable.  </summaryE>
        </member>
        <member name="F:Goldammer.TTLPortState.CONFIGURED">
            <summary> bereits konfiguriert.  </summary>
            <summaryE> already configured.  </summaryE>
        </member>
        <member name="F:Goldammer.TTLPortState.CHANGEABLE">
            <summary> Konfigurierbar.  </summary>
            <summaryE> configureable.  </summaryE>
        </member>
        <member name="F:Goldammer.TTLPortState.NOTAVAILABLE">
            <summary> Nicht verfügbar.  </summary>
            <summaryE> not available.  </summaryE>
        </member>
        <member name="F:Goldammer.TTLPortInfo.NumberOfDigitalOutputs">
            <summary> Anzahl der Ausgänge </summary>
            <summaryE> number of digital output pins  </summaryE>
        </member>
        <member name="F:Goldammer.TTLPortInfo.NumberOfDigitalInputs">
            <summary> Anzahl der Eingänge </summary>
            <summaryE> number of digital input pins </summaryE>
        </member>
        <member name="F:Goldammer.TTLPortInfo.PortWidth">
            <summary> Breite eines Ports </summary>
            <summaryE> width of one ports </summaryE>
        </member>
        <member name="F:Goldammer.TTLPortInfo.NumberOfPorts">
            <summary> Anzahl der Ports </summary>
            <summaryE> number of ports </summaryE>
        </member>
        <member name="T:Goldammer.TTLPortInfo">
            <summary>	TTL Port Info (value struct) </summary>
            <summaryE>	TTL port info (value struct) </summaryE>
            <value>	Beschreibt die TTL Ports der Karte </value>
            <valueE> describes the TTL ports </valueE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerCT.DataSink">
            <summary>	DataSink dieses ChannelControllers. </summary>
            <summaryE>	data sink for this channel controller. </summaryE>
            <value>	MAIDataSink </value>
            <valueE>	MAIDataSink. </valueE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerCT.MeasurementChannel(System.Int32)">
            <summary>
Gibt die bisher definierten Messkanäle zurück 
</summary>
            <summaryE>
returns the CT measurement channel with this index if exiting (must be previously defined). 
</summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerCT.Item(System.Int32)">
            <summary>	Gibt den CT Kanal mit dem übergebenen Index zurück. </summary>
            <value> CT Kanal. </value>
            <summaryE>	returns the CT channel with this index. </summaryE>
            <valueE> CT channel. </valueE>
        </member>
        <member name="T:Goldammer.MAIChannelControllerCT">
            <summary>	CT Channel Controller. </summary>
            <summaryE>	CT channel controller. </summaryE>
            <remarks>	Die Zähler der Messkarten stellen eine Besonderheit gegenüber anderen 
			Messkarten dar. Die Bausteine der Zähler sind keine industriellen Standardbausteine, 
			sondern programmierbare FPGAs, die je nach Bedarf geladen werden können.
			Die implementierten Zählermodi stellen große Erweiterungen gegenüber industriellen 
			Standard-Zählerbausteinen dar. So können nicht nur Impulse gezählt werden, 
			sondern auch direkte Frequenzen mit umschaltbaren Auflösungen, 
			Periodendauern oder Pulsweiten. Die Inkrementalzähler ermöglichen den direkten 
			Anschluß von Standard-Inkremental-Drehgebern mit TTL-Signalen. 
			Die interne Logik decodiert die Signale und ermittelt anhand der Phasenverschiebung 
			zwischen Takt- und Phasensignal die Richtung und inkrementiert/dekrementiert 
			die Zählerwerte entsprechend. </remarks>
        </member>
        <member name="P:Goldammer.MAIDataSink.BurstCount">
            <summary>	anzahl der Bursts, die seit dem letzten Aufruf des StartMeasure Kommandos aufgezeichnet wurden. </summary>
            <value>	MAIDataSinkPreview. </value>
            <summaryE>	Number of Bursts, that were recorded since the last call of the StartMeasure command. </summaryE>
            <valueE> MAIDataSinkPreview. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSink.Preview">
            <summary>	Vorschaudaten der Datasink. </summary>
            <value>	MAIDataSinkPreview. </value>
            <summaryE>	Previewdata of the DataSink. </summaryE>
            <valueE> MAIDataSinkPreview. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSink.OutputEnabled">
            <summary>	Aktiviert/Deaktiviert die Ausgabe. </summary>
            <value>	wenn [true] = Ausgabe ist aktiviert. </value>
            <summaryE>	Enables/Disables the Output. </summaryE>
            <valueE>	wenn [true] = Output is Enabled. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSink.Target">
            <summary>	DataSinkTarget (in mai_v2_extensiondaq_net20_dll.dll). </summary>
            <value>	DataSinkTarget </value>
            <summaryE>	DataSinkTarget.  (in mai_v2_extensiondaq_net20_dll.dll) </summaryE>
            <valueE>	DataSinkTarget </valueE>
        </member>
        <member name="M:Goldammer.MAIDataSink.Disable">
            <summary>	Deaktiviert die Datasink. </summary>
            <summaryE>	Disables the Datasink. </summaryE>
        </member>
        <member name="M:Goldammer.MAIDataSink.Enable(System.DateTime)">
            <summary>	Aktiviert die Datasink. </summary>
            <param name="AIStarttime">	Zu verwendende Startzeit. </param>
            <summaryE>	Enables the Datasink. </summaryE>
            <paramE name="AIStarttime">	start timr to use inside the DataSink. </paramE>
        </member>
        <member name="T:Goldammer.MAIDataSink">
            <summary>	MAIDataSink Eigenschaft.  </summary>
            <summaryE>	MAIDataSink Property.  </summaryE>
            <remarks>	Der AD ChannelController und, bei den DSP Messkarten, auch der CT ChannelController
			bietet die Möglichkeit, mittels der MAIDatasinkTarget Klassen, die in der Assembly 
			'MAI_v2_ExtensionDAQ_NET20_DLL' enthalten sind, die aufgezeichneten Messdaten automatisch
			in vielen Formaten in Dateien, Datenbanken oder IOStrams abzuspeichern/zu versenden. Hierzu 
			muss der 'Target'-Eigenschaft der DataSink lediglich eine Instanz dieser Klassen zugewiesen werden.
			Für mehr Information über die DatasinkTargets sehen Sie sich bitte die Dokumentation der Assembly
			'MAI_v2_ExtensionDAQ_NET20_DLL' an, für Informationen zum Erweb einer MAI_v2_ExtensionDAQ_NET20_DLL Lizenz
			wenden Sie sich bitte an Info@goldammer.de . </remarks>
            <remarksE>	The AD ChannelController and with DSP data acquisition boards also the CT ChannelController
			offers the possibility of using the MAIDataSinkTarget classes included in the Assembly 
			'MAI_v2_ExtensionDAQ_NET20_DLL' to record the data automaticlly to disk, databases or IOStreams.
			For this porpose, the 'Target' property of DataSink merely needs to be assigned an instance of these classes.
			For more information about the DataSinkTargets please see the documentation of the assembly 'MAI_v2_ExtensionDAQ_NET20_DLL',
			for informations about acquiring a 'MAI_v2_ExtensionDAQ_NET20_DLL' license feel free to contact  Info@goldammer.de. </remarksE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.default(System.String)">
            <inheritdoc cref="P:Goldammer.MAIDataSinkPreview.Item(System.Int32)" />
            <summary>2 Überladungen: Gibt den Wertepuffers einer Vorschauspalte zurück. Der
		   Zugriff erfolgt entweder über den Spaltenindex oder den Spaltennamen.</summary>
            <value>	Puffer. </value>
            <summaryE>2 overloads: returns the value buffer of one preview columns. Columns are accessed by index or by name. </summaryE>
            <valueE> buffer. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.Item(System.Int32)">
            <summary>2 Überladungen: Gibt den Wertepuffers einer Vorschauspalte zurück. Der
		   Zugriff erfolgt entweder über den Spaltenindex oder den Spaltennamen.</summary>
            <value>	Puffer. </value>
            <summaryE>2 overloads: returns the value buffer of one preview columns. Columns are accessed by index or by name. </summaryE>
            <valueE> buffer. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.RootMeanSquares">
            <summary>Gibt die Effektivwerte (Root Mean Square) des Vorschaupuffers. </summary>
            <value>	Effektivwerte (RMS). </value>
            <summaryE> 2 overloads: returns the Root Mean Squares of the preview buffer.  </summaryE>
            <valueE> Root Mean Square Values (RMS). </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.Averages">
            <summary> Gibt die Mittelwerte des Vorschaupuffers zurück.  </summary>
            <value>	Mittelwerte. </value>
            <summaryE> returns the averages for the preview buffer.  </summaryE>
            <valueE> Average. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.Timestamps">
            <summary> Gibt die Zeitstempel des Vorschaupuffers zurück. </summary>
            <value>	Zeitstempel. </value>
            <summaryE> returns the Timestamps for the preview buffer. </summaryE>
            <valueE> Timestamps. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.DataColumnTypes">
            <summary> Gibt ein Array der Datentypen der Spalten im Vorschaupuffer zurück. </summary>
            <value>	 verwendete Datentypen. </value>
            <summaryE> returns the data types of the preview buffer columns. </summaryE>
            <valueE> DataColumn types. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.DataColumnNames">
            <summary> Gibt ein Array der Namen der Spalten im Vorschaupuffer zurück. </summary>
            <value>	 Namen der Vorschaupufferspalten. </value>
            <summaryE> returns the names of the preview buffer columns. </summaryE>
            <valueE> DataColumn names. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.DataColumnCount">
            <summary> Gibt die Anzahl der Spalten im Vorschaupuffer zurück. </summary>
            <value>	 Anzahl der Vorschaupufferspalten. </value>
            <summaryE> returns the number of the preview buffer columns. </summaryE>
            <valueE> DataColumn count. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.MaxTickCount">
            <summary> Setzt die Anzahl der Zeilen im Vorschaupuffer oder gibt sie zurück. </summary>
            <value>	 Anzahl der Vorschaupufferzeilen </value>
            <summaryE> gets or sets the number of the preview buffer rows. </summaryE>
            <valueE> DataRow count. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.TickFrequency">
            <summary> Setzt die Frequenz der Zeilen im Vorschaupuffer oder gibt sie zurück. </summary>
            <value>	 Frequenz der Vorschaupufferzeilen </value>
            <summaryE> gets or sets the frequency of the preview buffer rows. </summaryE>
            <valueE> TickFrequency. </valueE>
        </member>
        <member name="P:Goldammer.MAIDataSinkPreview.Enabled">
            <summary> Steuert, ob der Vorschaupuffer aktiv ist. </summary>
            <value>	 [true] = Vorschaupuffer ist aktiv.  </value>
            <summaryE>toggles, wheather the preview buffer is active. </summaryE>
            <valueE> [true] = Vorschaupuffer active. </valueE>
        </member>
        <member name="T:Goldammer.MAIDataSinkPreview">
            <summary>	MAIDataSink Vorschau.  </summary>
            <summaryE>	MAIDataSink preview.  </summaryE>
            <remarks>	Um bei automatischer Speicherung der Messdaten mittels MAIDataSinkTarget trotzdem eine 
			gleichzeitige Visualisierung der Messdaten zu ermöglichen, bietet dieses Vorschau-Objekt 
			verschiedene Einstellmöglichkeiten, wei diese Vorschau aufbereitet weden soll und liefet 
			ebenso direkt die aktuellen Vorschaudaten.
			
			
			Der AD ChannelController und, bei den DSP Messkarten, auch der CT ChannelController
			bietet die Möglichkeit, mittels der MAIDatasinkTarget Klassen, die in der Assembly 
			'MAI_v2_ExtensionDAQ_NET20_DLL' enthalten sind, die aufgezeichneten Messdaten automatisch
			in vielen Formaten in Dateien, Datenbanken oder IOStrams abzuspeichern/zu versenden. Hierzu 
			muss der 'Target'-Eigenschaft der DataSink lediglich eine Instanz dieser Klassen zugewiesen werden.
			Für mehr Information über die DatasinkTargets sehen Sie sich bitte die Dokumentation der Assembly
			'MAI_v2_ExtensionDAQ_NET20_DLL' an, für Informationen zum Erweb einer MAI_v2_ExtensionDAQ_NET20_DLL Lizenz
			wenden Sie sich bitte an Info@goldammer.de . </remarks>
            <remarksE>	In order to being able to visualize the current measurenmet's data simultaneously while using the 
			automatic storing capabilities via MAIDataSinkTarget, this Preview object offers different settings and
			holds the Preview data itself.
						
			The AD ChannelController and with DSP data acquisition boards also the CT ChannelController
			offers the possibility of using the MAIDataSinkTarget classes included in the Assembly 
			'MAI_v2_ExtensionDAQ_NET20_DLL' to record the data automaticlly to disk, databases or IOStreams.
			For this porpose, the 'Target' property of DataSink merely needs to be assigned an instance of these classes.
			For more information about the DataSinkTargets please see the documentation of the assembly 'MAI_v2_ExtensionDAQ_NET20_DLL',
			for informations about acquiring a 'MAI_v2_ExtensionDAQ_NET20_DLL' license feel free to contact  Info@goldammer.de. </remarksE>
        </member>
        <member name="T:Goldammer.IDataSinkTarget">
            <summary>	Data sink target interface.  </summary>
            <summaryE>	Data sink target interface.  </summaryE>
            <remarks>	Der AD ChannelController und, bei den DSP Messkarten, auch der CT ChannelController
			bietet die Möglichkeit, mittels der MAIDatasinkTarget Klassen, die in der Assembly 
			'MAI_v2_ExtensionDAQ_NET20_DLL' enthalten sind, die aufgezeichneten Messdaten automatisch
			in vielen Formaten in Dateien, Datenbanken oder IOStrams abzuspeichern/zu versenden. Hierzu 
			muss der 'Target'-Eigenschaft der DataSink lediglich eine Instanz dieser Klassen zugewiesen werden.
			Für mehr Information über die DatasinkTargets sehen Sie sich bitte die Dokumentation der Assembly
			'MAI_v2_ExtensionDAQ_NET20_DLL' an, für Informationen zum Erweb einer MAI_v2_ExtensionDAQ_NET20_DLL Lizenz
			wenden Sie sich bitte an Info@goldammer.de . </remarks>
            <remarksE>	The AD ChannelController and with DSP data acquisition boards also the CT ChannelController
			offers the possibility of using the MAIDataSinkTarget classes included in the Assembly 
			'MAI_v2_ExtensionDAQ_NET20_DLL' to record the data automaticlly to disk, databases or IOStreams.
			For this porpose, the 'Target' property of DataSink merely needs to be assigned an instance of these classes.
			For more information about the DataSinkTargets please see the documentation of the assembly 'MAI_v2_ExtensionDAQ_NET20_DLL',
			for informations about acquiring a 'MAI_v2_ExtensionDAQ_NET20_DLL' license feel free to contact  Info@goldammer.de. </remarksE>
        </member>
        <member name="P:Goldammer.MAIChannelCT.IsIncrementalExtension">
            <summary>	Gibt an, ob ein Inkrementalzähler Zeitstempel Messkanal erzeugt werden kann. </summary>
            <value> [true], wenn dieser Kanal Inkrementalzähler Zeitstempel sein kann. </value>
            <summaryE> indicator for the ability, if this channel can be configured as a rotary counter extension. </summaryE>
            <valueE> [true] if this channel can be configured as a rotary counter extension. </valueE>
        </member>
        <member name="P:Goldammer.MAIChannelCT.IsUniversal">
            <summary>	Gibt an, ob ein Universalzähler Messkanal erzeugt werden kann. </summary>
            <value> [true], wenn dieser Kanal Universalzähler sein kann. </value>
            <summaryE> indicator for the ability, if this channel can be configured as a universal counter. </summaryE>
            <valueE> [true] if this channel can be configured as a universal counter. </valueE>
        </member>
        <member name="P:Goldammer.MAIChannelCT.IsIncremental">
            <summary>	Gibt an, ob ein Inkrementalzähler Messkanal erzeugt werden kann. </summary>
            <value> [true], wenn dieser Kanal Inkrementalzähler sein kann. </value>
            <summaryE> indicator for the ability, if this channel can be configured as a rotary counter. </summaryE>
            <valueE> [true] if this channel can be configured as a rotary counter. </valueE>
        </member>
        <member name="P:Goldammer.MAIChannelCT.Mode">
            <summary>	Gibt den für diesen Zähler konfigurierten Modus zurück. </summary>
            <value> Zählermodus. </value>
            <summaryE>	returns the counter mode, that has been set for this channel. </summaryE>
            <valueE> counter mode. </valueE>
        </member>
        <member name="T:Goldammer.MAIChannelCT">
            <summary>	CT Kanal  </summary>
            <summaryE>	CT channel  </summaryE>
        </member>
        <member name="T:Goldammer.FrequencyCounterResolution">
            <summary>	Auflösung der Frequenzmessung.  </summary>
            <summaryE>	resolution of a frequency counter.  </summaryE>
        </member>
        <member name="F:Goldammer.FrequencyCounterResolution._1000Hz">
            <summary> 1000Hz.  </summary>
            <summaryE> 1000Hz.  </summaryE>
        </member>
        <member name="F:Goldammer.FrequencyCounterResolution._100Hz">
            <summary> 100Hz.  </summary>
            <summaryE> 100Hz.  </summaryE>
        </member>
        <member name="F:Goldammer.FrequencyCounterResolution._10Hz">
            <summary> 10Hz.  </summary>
            <summaryE> 10Hz.  </summaryE>
        </member>
        <member name="F:Goldammer.FrequencyCounterResolution._1Hz">
            <summary> 1Hz.  </summary>
            <summaryE> 1Hz.  </summaryE>
        </member>
        <member name="T:Goldammer.IncrementalCounterTimestampResolution">
            <summary>	Auflösung das Zeitstempelkanals eines Inkrementalzählers  </summary>
            <summaryE>	resolution of a rotaty counter's extension channel  </summaryE>
        </member>
        <member name="F:Goldammer.IncrementalCounterTimestampResolution._100MS">
            <summary> 100 ms.  </summary>
            <summaryE> 100 ms.  </summaryE>
        </member>
        <member name="F:Goldammer.IncrementalCounterTimestampResolution._1MS">
            <summary> 1 ms.  </summary>
            <summaryE> 1 ms.  </summaryE>
        </member>
        <member name="T:Goldammer.IncrementalCounterExtensionType">
            <summary>	Typ des Zeitstempel-Kanals eines Impulszählers.  </summary>
            <summaryE>	type of a rotary counter extension.  </summaryE>
        </member>
        <member name="F:Goldammer.IncrementalCounterExtensionType.FLOW">
            <summary> Volumen.  </summary>
            <summaryE> flow.  </summaryE>
        </member>
        <member name="F:Goldammer.IncrementalCounterExtensionType.TIME">
            <summary> Zeitstempel.  </summary>
            <summaryE> timestamp.  </summaryE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelCT.NumberOfValues">
            <summary>	Gibt die Anzahl der zur Verfügung stehenden Messwerte zurück </summary>
            <value>	Anzahl der Messwerte. </value>
            <summaryE>	returns the number of recorded values </summaryE>
            <valueE> number of recorded values. </valueE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelCT.IsADSync">
            <summary>	Gibt an, ob dieser Kanal synchron zu den AD Kanälen aufgezeichnet wird. </summary>
            <value>	[true], wenn dieser Kanal synchron zu den AD Kanälen aufgezeichnet wird. </value>
            <summaryE>	indicates, if this channel is synchronized to the AD channels. </summaryE>
            <valueE>	[true],  if this channel is synchronized to the AD channels. </valueE>
        </member>
        <member name="T:Goldammer.MAIMeasurementChannelCT">
            <summary> CT Messkanal  </summary>
            <summaryE> CT measurement channel  </summaryE>
        </member>
        <member name="T:Goldammer.IncrementalCounterInterpolationMode">
            <summary>	Art der Interpolation eines Inkrementalzählerkanals. </summary>
            <summaryE>	interpolation mode of a rotary counter. </summaryE>
        </member>
        <member name="F:Goldammer.IncrementalCounterInterpolationMode.Quad">
            <summary> Vierfach.  </summary>
            <summaryE> four times.  </summaryE>
        </member>
        <member name="F:Goldammer.IncrementalCounterInterpolationMode.Double">
            <summary> Doppelt.  </summary>
            <summaryE> two times.  </summaryE>
        </member>
        <member name="F:Goldammer.IncrementalCounterInterpolationMode.Single">
            <summary> Einfach.  </summary>
            <summaryE> one time.  </summaryE>
        </member>
        <member name="T:Goldammer.IncrementalCounterHardwareResetEdge">
            <summary>	HardwareResetEdge eines Inkrementalzählers  </summary>
            <summary>	hardware reset edge of a rotary counter.  </summary>
        </member>
        <member name="F:Goldammer.IncrementalCounterHardwareResetEdge.Level">
            <summary> Level.  </summary>
            <summaryE> level.  </summaryE>
        </member>
        <member name="F:Goldammer.IncrementalCounterHardwareResetEdge.EdgeLevel">
            <summary> EdgeLevel.  </summary>
            <summaryE> edge level.  </summaryE>
        </member>
        <member name="T:Goldammer.HardwareResetMode">
            <summary>	Legt fest, bei welchem (physikalischen) Ereignis ein Reset durchgeführt wird.  </summary>
            <summaryE>	sets the (physical) event a reset is performed on.  </summaryE>
        </member>
        <member name="F:Goldammer.HardwareResetMode.Edge">
            <summary>  Starts on Zero Crossing; Jedesmal, wenn Resetsignal auf ResetLevel springt, aber erst nach einem Nulldurchaluf.  </summary>
            <summaryE> start on zero crossing 2.  </summaryE>
        </member>
        <member name="F:Goldammer.HardwareResetMode.LevelExtended">
            <summary>  Starts on Zero Crossing; Jedesmal, wenn Resetsignal = ResetLevel, aber erst nach einem Nulldurchaluf.  </summary>
            <summaryE> start on zero crossing 1.  </summaryE>
        </member>
        <member name="F:Goldammer.HardwareResetMode.Level">
            <summary> Jedesmal, wenn Resetsignal = 1 (einziger Parameter für DSP Karten).  </summary>
            <summaryE> when reset line is high (this is the only HW reset mode on DSP cards).  </summaryE>
        </member>
        <member name="F:Goldammer.HardwareResetMode.Disabled">
            <summary> Kein Hardware Reset.  </summary>
            <summaryE> no hardware reset.  </summaryE>
        </member>
        <member name="T:Goldammer.ImpulseDirection">
            <summary>	Gibt die Richtung eines Impulses an  </summary>
            <summaryE>	Gibt die Richtung eines Impulses an  </summaryE>
        </member>
        <member name="F:Goldammer.ImpulseDirection.Down">
            <summary> Fallend.  </summary>
            <summaryE> falling.  </summaryE>
        </member>
        <member name="F:Goldammer.ImpulseDirection.Up">
            <summary> Steigend.  </summary>
            <summaryE> rising.  </summaryE>
        </member>
        <member name="T:Goldammer.SignalEdge">
            <summary>	Signalflanke.  </summary>
            <summaryE>	signal edge.  </summaryE>
        </member>
        <member name="F:Goldammer.SignalEdge.Falling">
            <summary> fallend.  </summary>
            <summaryE> falling.  </summaryE>
        </member>
        <member name="F:Goldammer.SignalEdge.Rising">
            <summary> steigend.  </summary>
            <summaryE> rising.  </summaryE>
        </member>
        <member name="T:Goldammer.CounterResolution">
            <summary>	Auflösung des Zählerkanals.  </summary>
            <summaryE>	resolution of the counter channel.  </summaryE>
        </member>
        <member name="F:Goldammer.CounterResolution.LessOrEqual20ns">
            <summary> 20 ns oder weniger.  </summary>
            <summary> 20 ns or less.  </summary>
        </member>
        <member name="F:Goldammer.CounterResolution.Default100ns">
            <summary> 100 ns.  </summary>
            <summary> 100 ns.  </summary>
        </member>
        <member name="F:Goldammer.CounterResolution.UNDEFINED">
            <summary> undefiniert.  </summary>
            <summary> undefined.  </summary>
        </member>
        <member name="T:Goldammer.CounterMode">
            <summary>	Modus eines Zählerkanals  </summary>
            <summaryE>	counter channel modes  </summaryE>
        </member>
        <member name="F:Goldammer.CounterMode.INCEEXTFLOWRATE">
            <summary> Inkrementalgeber Zeitstempel/Volumenmessung.  </summary>
            <summaryE> rotary counter flow rate extension </summaryE>
        </member>
        <member name="F:Goldammer.CounterMode.INCEEXTTIMESTAMP">
            <summary> Inkrementalgeber Zeitstempel.  </summary>
            <summaryE>  rotary counter timestamp extension </summaryE>
        </member>
        <member name="F:Goldammer.CounterMode.UPDOWNCOUNTER">
            <summary> Vor/Zurück Zähler.  </summary>
            <summaryE> up/down counter </summaryE>
        </member>
        <member name="F:Goldammer.CounterMode.INCREMENTALCOUNTER">
            <summary> Inkrementalzähler.  </summary>
            <summaryE> rotary counter </summaryE>
        </member>
        <member name="F:Goldammer.CounterMode.PULSEWIDTHCOUNTER">
            <summary> Plusbreitenzähler.  </summary>
            <summaryE> pulsewidth counter </summaryE>
        </member>
        <member name="F:Goldammer.CounterMode.PERIODCOUNTER">
            <summary> Periodenzähler.  </summary>
            <summaryE> period counter</summaryE>
        </member>
        <member name="F:Goldammer.CounterMode.FREQUENCYCOUNTER">
            <summary> Frequenzzähler.  </summary>
            <summaryE> frequency counter</summaryE>
        </member>
        <member name="F:Goldammer.CounterMode.IMPULSECOUNTER">
            <summary> Impulszähler.  </summary>
            <summaryE> impulse counter</summaryE>
        </member>
        <member name="F:Goldammer.CounterMode.UNDEFINED">
            <summary> Zähler ist nicht definiert (nur Rückgabe) </summary>
            <summaryE> Zähler ist nicht definiert (nur Rückgabe) </summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerBase.MeasurementChannelsCount">
            <summary>
Gibt die Anzahl der bisher definierten Messkanäle zurück 
</summary>
            <summaryE>
returns the number of measurement channels that are defined for this channel controller
</summaryE>
        </member>
        <member name="P:Goldammer.MAIChannelControllerBase.HardwareChannelCount">
            <summary>
Gibt die Anzahl der zur Verfügung stehenden Kanäle dieses Typs zurück
</summary>
            <summaryE>
returns the number of hardware channels of this type  
</summaryE>
        </member>
        <member name="E:Goldammer.MAIChannelControllerBase.ProcessDataBuffers">
            <summary> Wird gefeuert, wenn der über den Notification Level eingestellte Messwert-Level Erreicht ist. </summary>
            <summaryE> is fired, when the notification level is reached. </summaryE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerBase.GetActiveChannelListSize">
            <summary>
	Gibt die Anzahl der bis jetzt definierten Messkanäle dieses Controllers zurück.
</summary>
            <returns>	Anzahl der Messkanäle dieses Controllers </returns>
            <summaryE>
	returns the number of measurement channels that are defined for this channel controller
</summaryE>
            <returnsE>	Anzahl der Messkanäle dieses Controllers </returnsE>
        </member>
        <member name="M:Goldammer.MAIChannelControllerBase.DeleteMeasurementChannels">
            <summary>	Löscht alle bis jetzt definierten Messkanäle dieses Controllers. </summary>
            <summaryE>	Deletes all measurement channels that are defined for this ChannelController so far. </summaryE>
        </member>
        <member name="T:Goldammer.MAIChannelControllerBase">
            <summary>	Basisklasse für alle Channel Controller.  </summary>
            <summaryE>	base class for all types  of ChannelController.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIMeasurementBufferEvent">
            <summary>	Delegat für das ProcessDataBuffers Event, das gefeuert wird, 
			wenn für einen Channelcontroller eine 
			Messwert-Benachrichtigung definiert ist </summary>
            <param name="obj"> 	[in,out] Channelcontroller-Objekt, das das Event ausgelöst hat. </param>
            <param name="args">	[in,out] Event-Args. </param>
            <summaryE>	delegate for the ProcessDataBuffers event, that gets fired, 
			when the notification level for this channel controller object is set to other than zero. </summaryE>
            <paramE name="obj"> 	[in,out] Channelcontroller-Objekt, which fired the event. </paramE>
            <paramE name="args">	[in,out] Event-Args. </paramE>
        </member>
        <member name="P:Goldammer.MAIChannelBase.HardwareChannelNumber">
            <summary>	Gibt die Kanalnummer zurück, über die dieser Kanal an seinem Device angesprochen wird </summary>
            <value>	Kanalnummer, über die dieser Kanal an seinem Device angesprochen wird. </value>
            <summaryE>	returns the hardware channel number this measurement channel has on its device </summaryE>
            <valueE>	hardware channel number of this channel. </valueE>
        </member>
        <member name="P:Goldammer.MAIChannelBase.MyDevice">
            <summary>	Gibt das Device zurück, zu dem dieser Kanal gehört. </summary>
            <value>	Das Device, zu den dieser Kanal gehört. </value>
            <summaryE>	returns the device, to which this channel belongs. </summaryE>
            <valueE>	device of this channel. </valueE>
        </member>
        <member name="T:Goldammer.MAIChannelBase">
            <summary>	Basisklasse für alle Kanäle.  </summary>
            <summaryE>	base class for all channels.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIDeviceNotFoundException">
            <summary>	Goldammer Exception-Klasse, die geworfen wird, wenn eine verwendetes Gerät nicht vorhanden ist.  </summary>
            <summaryE>	Goldammer exception-class. is thrown, when a non existing device is used.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIMeasurementChannelAD">
            <summary>	AD Messkanal </summary>
            <summaryE>	AD measurement channel </summaryE>
        </member>
        <member name="T:Goldammer.AD_UserScalingMode">
            <summary>	Modus für die Benutzerdefinierte Skalierung der Spannungsdaten  </summary>
            <summaryE>	mode for a user defined scaling of voltages  </summaryE>
        </member>
        <member name="F:Goldammer.AD_UserScalingMode.Thermistor">
            <summary> Skalierung für eine Thermistor-Sensorik mit der Formel f(V) = B / ln(V/A)  </summary>
            <summaryE> applies a scaling for thermistors using the formula f(V) = A+B*V</summaryE>
        </member>
        <member name="F:Goldammer.AD_UserScalingMode.Linear">
            <summary> Lineare Skalierung mit der Formel f(V) = A+B*V.  </summary>
            <summaryE> applies linear scaling using the formula f(V) = A+B*V</summaryE>
        </member>
        <member name="F:Goldammer.AD_UserScalingMode.None">
            <summary> Nicht aktiv.  </summary>
            <summaryE> not used </summaryE>
        </member>
        <member name="T:Goldammer.GainFactor">
            <summary>	Gain Faktor.  </summary>
            <summaryE>	gain factor.  </summaryE>
        </member>
        <member name="F:Goldammer.GainFactor.x8">
            <summary> achtfach.  </summary>
            <summaryE> eight times.  </summaryE>
        </member>
        <member name="F:Goldammer.GainFactor.x4">
            <summary> vierfach.  </summary>
            <summaryE> four times.  </summaryE>
        </member>
        <member name="F:Goldammer.GainFactor.x2">
            <summary> zweifach.  </summary>
            <summaryE> double.  </summaryE>
        </member>
        <member name="F:Goldammer.GainFactor.Disabled">
            <summary> Keine Verstärkung.  </summary>
            <summary> no gain.  </summary>
        </member>
        <member name="T:Goldammer.OversamplingMode">
            <summary>	Oversampling Modus.  </summary>
            <summaryE>	oversampling mode.  </summaryE>
        </member>
        <member name="F:Goldammer.OversamplingMode.x16">
            <summary> 16faches Oversampling.  </summary>
            <summaryE> sixteen times oversampling.  </summaryE>
        </member>
        <member name="F:Goldammer.OversamplingMode.x8">
            <summary> achtfaches Oversampling.  </summary>
            <summaryE> eightfold  oversampling.  </summaryE>
        </member>
        <member name="F:Goldammer.OversamplingMode.x4">
            <summary> vierfaches Oversampling.  </summary>
            <summaryE> fourfold oversampling.  </summaryE>
        </member>
        <member name="F:Goldammer.OversamplingMode.x2">
            <summary> zweifaches Oversampling.  </summary>
            <summaryE> double oversampling.  </summaryE>
        </member>
        <member name="F:Goldammer.OversamplingMode.Disabled">
            <summary> Kein Oversampling.  </summary>
            <summaryE> no oversampling.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIRealtimeFunctionsList">
            <summary>	Liste der Onlinefunktionen enes AD Kanals  </summary>
            <summaryE>  list of online functions of an AD measurement channel.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIRealtimeFunctionPID">
            <summary> Onlinefunktion PID Regler  .  </summary>
            <summaryE>  PID controller online function.  </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupPID.SampleFrequenz">
            <summary> SampleFrequenz </summary>
            <summaryE> sample frequency </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupPID.MaxValue">
            <summary> MaxValue </summary>
            <summaryE> max value </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupPID.MinValue">
            <summary> MinValue </summary>
            <summaryE> min value </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupPID.Sollwert">
            <summary> Sollwert </summary>
            <summaryE> desired value </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupPID.Gain">
            <summary> Gain </summary>
            <summaryE> gain factor </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupPID.ReglerArt">
            <summary> ReglerArt </summary>
            <summaryE> controller type </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupPID.DAnteil">
            <summary> D Anteil </summary>
            <summaryE> D portion </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupPID.IAnteil">
            <summary> I Anteil </summary>
            <summaryE> I portion </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupPID.PAnteil">
            <summary> P Anteil </summary>
            <summaryE> P portion </summaryE>
        </member>
        <member name="T:Goldammer.RealtimeSetupPID">
            <summary>	Setup für einen PID Regler. </summary>
            <value> PID Regler Parameter. </value>
            <summaryE>	setup for a einen PID controller. </summaryE>
            <valueE> PID controller parameter. </valueE>
        </member>
        <member name="T:Goldammer.PIDControllerType">
            <summary>	 Entwurfsmethoden des PID Controller-Algorithmus  </summary>
            <summaryE>	 design method of the PID controller algorithm  </summaryE>
        </member>
        <member name="F:Goldammer.PIDControllerType.PID3">
            <summary> Integralalgorithmus Trapetznäherung.  </summary>
            <summaryE> trapezoid.  </summaryE>
        </member>
        <member name="F:Goldammer.PIDControllerType.PID2">
            <summary> Integralalgorithmus rechte Intervallgrenze.  </summary>
            <summaryE> upper limit of the integral.  </summaryE>
        </member>
        <member name="F:Goldammer.PIDControllerType.PID1">
            <summary> Integralalgorithmus linke Intervallgrenze.  </summary>
            <summaryE> lower limit of the integral integal.  </summaryE>
        </member>
        <member name="T:Goldammer.MAIRealtimeFunctionFFT">
            <summary> Onlinefunktion FFT Analyse.  </summary>
            <summaryE>  FFT analyzer online function.  </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupFFT.KaiserWindowParameterBeta">
            <summary> Kaiser Fenster Parameter 'beta' </summary>
            <summaryE> Kaiser window Parameter 'beta' </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupFFT.FensterFunktion">
            <summary> Fensterfunktion </summary>
            <summaryE> window function </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupFFT.Gain">
            <summary> Gain </summary>
            <summaryE> gain factor </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupFFT.Spektrum">
            <summary> Spektrum </summary>
            <summaryE> type of spectrum </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupFFT.AnzahlPunkte">
            <summary> Anzahl Stützstellen </summary>
            <summaryE> number of sampling points </summaryE>
        </member>
        <member name="T:Goldammer.RealtimeSetupFFT">
            <summary>	Setup für die FFT Analyse. </summary>
            <value>	The realtime setup fft. </value>
            <summaryE>	Setup für die FFT Analyse. </summaryE>
            <valueE>	The realtime setup fft. </valueE>
        </member>
        <member name="T:Goldammer.FFTSpektrum">
            <summary>	Gibt an, wie die Ergebnisse der Fourieranalyse dargestellt werden
			sollen.  </summary>
            <summaryE>	Type of FFT analysis result.  </summaryE>
        </member>
        <member name="F:Goldammer.FFTSpektrum.Phase">
            <summary> Phasenspektrum.  </summary>
            <summaryE>	phase spectrum.  </summaryE>
        </member>
        <member name="F:Goldammer.FFTSpektrum.Power">
            <summary> Quadrat der Effektivwerte.  </summary>
            <summaryE> square of root mean square spectrum.  </summaryE>
        </member>
        <member name="F:Goldammer.FFTSpektrum.RMS">
            <summary> Root Mean Square (Effektivwert).  </summary>
            <summaryE>	Root Mean Square spectrum.  </summaryE>
        </member>
        <member name="F:Goldammer.FFTSpektrum.Betrag">
            <summary> Betragsspektrum.  </summary>
            <summaryE>	absolute values.  </summaryE>
        </member>
        <member name="T:Goldammer.FFTPoints">
            <summary>	Legt die Anzahl der Stützstellen für eine FFT Analyse fest.   </summary>
            <summaryE>	number of sampling points for FFT Analysis.   </summaryE>
        </member>
        <member name="F:Goldammer.FFTPoints._4096">
            <summary> 4096 Stützstellen.  </summary>
            <summaryE>	4096 sampling points.   </summaryE>
        </member>
        <member name="F:Goldammer.FFTPoints._2048">
            <summary> 2048 Stützstellen.  </summary>
            <summaryE>	2048 sampling points.   </summaryE>
        </member>
        <member name="F:Goldammer.FFTPoints._1024">
            <summary> 1024 Stützstellen.  </summary>
            <summaryE>	1024 sampling points.   </summaryE>
        </member>
        <member name="F:Goldammer.FFTPoints._512">
            <summary> 512 Stützstellen.  </summary>
            <summaryE>	512 sampling points.   </summaryE>
        </member>
        <member name="T:Goldammer.MAIRealtimeFunctionTrigger">
            <summary> Onlinefunktion Trigger .  </summary>
            <summaryE> online function trigger .  </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.TTLTriggeredZustand">
            <summary> Zustand das digitalen Ausgangs, der durch den trigger geschaltet wird. </summary>
            <summaryE> state of the output pin, when the trigger has fired </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.TTLStartZustand">
            <summary> Anfangszustand das digitalen Ausgangs </summary>
            <summaryE> initial state of the digital output pin </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.TTLKlemme">
            <summary> Klemmstelle des digitalen Ausgangs, der verwendet werden soll </summary>
            <summaryE> pin index of the digital output, the trigger uses </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.TriggerSetztTTL">
            <summary> [true] = Trigger schaltet digitalen Ausgang </summary>
            <summaryE> [true] = trigger sets the digital output </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.TriggerStartetMessung">
            <summary> [true] = Trigger startet die analoge Erfassung, vorher werden keine Messwerte aufgezeichnet </summary>
            <summaryE> [true] = trigger starts measurement, no date is recorded until it gets fired </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.EnabledAtStart">
            <summary> [false] = Trigger muss später freigeschaltet werden, [true]=Trigger ab Start freigeschaltet </summary>
            <summaryE> [false] = trigger gets enabled by previous trigger, [true]= trigger is enabled when the measurement starts </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.Typ">
            <summary> Typ das Triggers </summary>
            <summaryE> type of the trigger </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.Schwellwert2">
            <summary> Schwellwert 2 (wird nur von Triggern ab Fenstertrigger verwendet) </summary>
            <summaryE> Threshold 2 (wird nur von Triggern ab Fenstertrigger verwendet) </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.Schwellwert1">
            <summary> Schwellwert 1 </summary>
            <summaryE> Threshold 1 </summaryE>
        </member>
        <member name="F:Goldammer.RealtimeSetupTrigger.Aktiv">
            <summary> Trigger aktiv (wenn [false], so muss das Starten/stoppen der Messung manuell geschehen)</summary>
            <summaryE> trigger active </summaryE>
        </member>
        <member name="T:Goldammer.RealtimeSetupTrigger">
            <summary>	Trigger Konfiguration. </summary>
            <summaryE>	online trigger configuration. </summaryE>
        </member>
        <member name="T:Goldammer.IOBitState">
            <summary>	elektrischer Zustand eines TTL Pins.  </summary>
            <summaryE>	electric state of a TTL Pin.  </summaryE>
        </member>
        <member name="F:Goldammer.IOBitState.High">
            <summary> High bzw. 1.  </summary>
            <summaryE> High eg. 1.  </summaryE>
        </member>
        <member name="F:Goldammer.IOBitState.Low">
            <summary> Low bzw. 0.  </summary>
            <summaryE> Low eg. 0.  </summaryE>
        </member>
        <member name="T:Goldammer.TriggerType">
            <summary>	Gibt die Art des Triggers an.  </summary>
            <summaryE>	type of an online trigger.  </summaryE>
        </member>
        <member name="F:Goldammer.TriggerType.Gradientenfenster">
            <summary> in einem Gradientenfenster.  </summary>
            <summaryE> inside a gradient window.  </summaryE>
        </member>
        <member name="F:Goldammer.TriggerType.UeberGradientensteigung">
            <summary> oberhalb einer Gradientensteigung.  </summary>
            <summaryE> on gradient slope overrun.  </summaryE>
        </member>
        <member name="F:Goldammer.TriggerType.UnterGradientensteigung">
            <summary> unterhalb einer Gradientensteigung.  </summary>
            <summaryE> on gradient slope underrun.  </summaryE>
        </member>
        <member name="F:Goldammer.TriggerType.Fenster">
            <summary> in einem Fenster.  </summary>
            <summaryE> inside a window.  </summaryE>
        </member>
        <member name="F:Goldammer.TriggerType.UeberSchwelle">
            <summary> oberhalb einer Schwelle.  </summary>
            <summaryE>  on threshold overrun.  </summaryE>
        </member>
        <member name="F:Goldammer.TriggerType.UnterSchwelle">
            <summary> unterhalb einer Schwelle.  </summary>
            <summaryE> on threshold underrun.  </summaryE>
        </member>
        <member name="F:Goldammer.TriggerType.Min">
            <summary> Minumum.  </summary>
            <summaryE> minumum.  </summaryE>
        </member>
        <member name="F:Goldammer.TriggerType.Max">
            <summary> Maximum.  </summary>
            <summaryE> maximum.  </summaryE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionFilter.#ctor(Goldammer.MAIDevice,Goldammer.MAIMeasurementChannelAD,Goldammer.FilterType,System.Double,System.Double,System.Double,System.Boolean,System.Double,System.Double,Goldammer.IIRFilterDesign,System.UInt32)">
            <summary>	Constructor. </summary>
            <remarks>	Fmensing, 08.11.2011. </remarks>
            <param name="AIDevice">				  	[in,out] If non-null, the ai device. </param>
            <param name="AIChannel">			  	[in,out] If non-null, the ai channel. </param>
            <param name="AIFilterTyp">			  	The ai filter typ. </param>
            <param name="AISampleRate">			  	The ai sample rate. </param>
            <param name="AICutoffFreqLow">		  	The ai cutoff freq low. </param>
            <param name="AICutoffFreqHigh">		  	The ai cutoff freq high. </param>
            <param name="AINormalizedFrequencies">	The ai normalized frequencies. </param>
            <param name="AIPassabsorbtion">		  	The ai passabsorbtion. </param>
            <param name="AIStopbandattenuation">  	The ai stopbandattenuation. </param>
            <param name="AIDesignMethod">		  	The ai design method. </param>
            <param name="AIOrder">				  	The ai order. </param>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionFilter.#ctor(Goldammer.MAIDevice,Goldammer.MAIMeasurementChannelAD,Goldammer.FilterType,System.Double,System.Double,System.Double,System.Boolean,System.UInt32,Goldammer.FIRWindow,System.Double,System.Boolean)">
            <summary>	Constructor. </summary>
            <remarks>	Fmensing, 08.11.2011. </remarks>
            <param name="AIDevice">				  	[in,out] If non-null, the ai device. </param>
            <param name="AIChannel">			  	[in,out] If non-null, the ai channel. </param>
            <param name="AIFilterTyp">			  	The ai filter typ. </param>
            <param name="AISampleRate">			  	The ai sample rate. </param>
            <param name="AICutoffFreqLow">		  	The ai cutoff freq low. </param>
            <param name="AICutoffFreqHigh">		  	The ai cutoff freq high. </param>
            <param name="AINormalizedFrequencies">	The ai normalized frequencies. </param>
            <param name="AIOrder">				  	The ai order. </param>
            <param name="AIFilterWindow">		  	The ai filter window. </param>
            <param name="AIWindowParameter">	  	The ai window parameter. </param>
            <param name="AIScalePassband">		  	true to ai scale passband. </param>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionFilter.#ctor(Goldammer.MAIDevice,Goldammer.MAIMeasurementChannelAD,Goldammer.FilterMode,System.Double[],System.Double,System.UInt32)">
            <summary>	Constructor. </summary>
            <remarks>	Fmensing, 08.11.2011. </remarks>
            <param name="AIDevice">			 	[in,out] If non-null, the ai device. </param>
            <param name="AIChannel">		 	[in,out] If non-null, the ai channel. </param>
            <param name="AIFilterMode">		 	The ai filter mode. </param>
            <param name="AICoefficents">	 	[in,out] If non-null, the ai coefficents. </param>
            <param name="AIOutputGainFactor">	The ai output gain factor. </param>
            <param name="AIOrder">			 	The ai order. </param>
        </member>
        <member name="F:Goldammer.MAIRealtimeFunctionFilter.m_dOutputGainFactor">
            <summary> Output GainfaKtor </summary>
            <summaryE> output gain factor </summaryE>
        </member>
        <member name="F:Goldammer.MAIRealtimeFunctionFilter.m_a_dCoefficents">
            <summary> Filterkoeffizienten </summary>
            <summaryE> filter coefficients </summaryE>
        </member>
        <member name="T:Goldammer.MAIRealtimeFunctionFilter">
            <summary> Onlinefunktion digitaler Filter .  </summary>
            <summaryE>  digital filter analyzer online function.  </summaryE>
        </member>
        <member name="T:Goldammer.FilterType">
            <summary>	Legt die Charakteristik eines digitalen Filters fast.  </summary>
            <summaryE>	digital filters characteristics.  </summaryE>
        </member>
        <member name="F:Goldammer.FilterType.BANDSTOP">
            <summary> Bandstop.  </summary>
            <summaryE> band stop.  </summaryE>
        </member>
        <member name="F:Goldammer.FilterType.BANDPASS">
            <summary> Bandpass.  </summary>
            <summaryE> band pass.  </summaryE>
        </member>
        <member name="F:Goldammer.FilterType.HIGHPASS">
            <summary> Hochpass.  </summary>
            <summaryE> high pass.  </summaryE>
        </member>
        <member name="F:Goldammer.FilterType.LOWPASS">
            <summary> Tiefpass.  </summary>
            <summaryE> low pass.  </summaryE>
        </member>
        <member name="T:Goldammer.IIRFilterDesign">
            <summary>	IIR Filter Designmethode  </summary>
            <summaryE>	IIR filter design method  </summaryE>
        </member>
        <member name="F:Goldammer.IIRFilterDesign.BESSEL">
            <summary> Bessel.  </summary>
            <summaryE> Bessel.  </summaryE>
        </member>
        <member name="F:Goldammer.IIRFilterDesign.ELLIPTIC">
            <summary> Elliptisch (Cauer).  </summary>
            <summaryE> Elliptisch (Cauer).  </summaryE>
        </member>
        <member name="F:Goldammer.IIRFilterDesign.CHEBYSHEV_T2">
            <summary> Tschebytschow 2.  </summary>
            <summaryE> Tschebytschow 2.  </summaryE>
        </member>
        <member name="F:Goldammer.IIRFilterDesign.CHEBYSHEV_T1">
            <summary> Tschebytschow 1.  </summary>
            <summaryE> Tschebytschow 1.  </summaryE>
        </member>
        <member name="F:Goldammer.IIRFilterDesign.BUTTERWORTH">
            <summary> Butterworth.  </summary>
            <summaryE> Butterworth.  </summaryE>
        </member>
        <member name="T:Goldammer.FIRWindow">
            <summary>	Legt die zu verwendende FIR Fensterfunktion fest.  </summary>
            <summaryE>	type of an FIR window function.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Flat_Top">
            <summary> Flat Top (Flache Spitze).  </summary>
            <summaryE> Flat Top.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Blackman_Nuttall">
            <summary> Blackman-Nuttall.  </summary>
            <summaryE> Blackman-Nuttall.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Blackman_Harris">
            <summary> Blackman-Harris.  </summary>
            <summaryE> Blackman-Harris.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Triangular">
            <summary> Dreieck.  </summary>
            <summaryE> triangular.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Dolph_Tschebytschow">
            <summary> Dolph-Tschebytschow (eg. Dolph-Tschebytescheff,  Dolph-Chebycheff...).  </summary>
            <summaryE> Dolph-Tschebytschow (eg. Dolph-Tschebytescheff,  Dolph-Chebycheff...).  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Bartlett">
            <summary> Bartlett.  </summary>
            <summaryE> Bartlett.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Kaiser">
            <summary> Kaiser.  </summary>
            <summaryE> Kaiser.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Blackman">
            <summary> Blackman.  </summary>
            <summaryE> Blackman.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Hamming">
            <summary> Hamming (eg. Hamm, ...).  </summary>
            <summaryE> Hamming (eg. Hamm, ...).  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Hanning">
            <summary> Hanning (eg. Hann, ...).  </summary>
            <summaryE> Hanning (eg. Hann, ...).  </summaryE>
        </member>
        <member name="F:Goldammer.FIRWindow.Rectangular">
            <summary> Rechteck.  </summary>
            <summaryE> rectangular.  </summaryE>
        </member>
        <member name="T:Goldammer.FIRFilterDesign">
            <summary>	Legt die Designmethode eines FIR Filters fest.  </summary>
            <summaryE>	design method of an FIR filter.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRFilterDesign.EQUIRIPPLE">
            <summary> Equiripple.  </summary>
            <summaryE> equiripple.  </summaryE>
        </member>
        <member name="F:Goldammer.FIRFilterDesign.WINDOW">
            <summary> Fensterfunktion.  </summary>
            <summaryE> window function.  </summaryE>
        </member>
        <member name="T:Goldammer.FilterMode">
            <summary>	Legt den Modus eines digitalen Filters fest.  </summary>
            <summaryE>	digital filter mode.  </summaryE>
        </member>
        <member name="F:Goldammer.FilterMode.IIR">
            <summary> IIR Filter.  </summary>
            <summaryE> IIR Filter.  </summaryE>
        </member>
        <member name="F:Goldammer.FilterMode.FIR">
            <summary> FIR Filter.  </summary>
            <summaryE> FIR Filter.  </summaryE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelBase.Tag">
            <summary>	Setzt oder liest ein frei definierbares Object an diesem Messkanal. </summary>
            <value>	frei definierbares Object </value>
            <summaryE>	Gets or sets a user defined Object on this cmeasurement channel. </summaryE>
            <valueE>  channel's tagged object. </valueE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelBase.Unit">
            <summary>	Setzt oder liest eine Bezeichnung für die Masseinheit dieses Messkanal. </summary>
            <value>	Name der Masseinheit das Kanals </value>
            <summaryE>	Gets or sets the caption for this measurement channel' measuring unit. </summaryE>
            <valueE> this channel's measuring unit caption. </valueE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelBase.Name">
            <summary>	Setzt oder liest eine Bezeichnung für diesen Messkanal. </summary>
            <value>	Name das Kanals </value>
            <summaryE>	Gets or sets the caption for this measurement channel. </summaryE>
            <valueE> this channel's caption. </valueE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelBase.MeasurementChannelListNumber">
            <summary>	Gibt den Index dieses Kanals in der Messkanalliste 
			zurück. </summary>
            <value>	Index in der Messkanalliste. </value>
            <summaryE>	returns this channels index in the measurement channel list. </summaryE>
            <valueE> measurement channel list index. </valueE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelBase.HardwareChannelNumber">
            <summary>	Gibt den Index der physikalischen Klemmstelle zurück, auf der dieser Messkanal 
			definiert ist. </summary>
            <value>	Index der physikalischen Klemmstelle. </value>
            <summaryE>	returns the index for the physical connector. </summaryE>
            <valueE> physical connector's number. </valueE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelBase.Device">
            <summary>	Gibt das Gerät zurück, zu dem dieser Kanal gehört. </summary>
            <value>	Device das Kanals. </value>
            <summaryE>	returns the device this channel belongs to. </summaryE>
            <valueE>	device this channel belongs to. </valueE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelBase.IsValid">
            <summary>	Gibt an, ob es sich bei diesm Messkanal um ein gültigens Objekt handelt 
			oder ob er (z.B. durch DeleteMeasurementChannals) nicht mehr verwendet werden kann. </summary>
            <value>	[true], wenn dieser Messkanal verwendet werden kann. </value>
            <summaryE>	indicates, if this is a valid measurement channel object or if it can't be accessed anymore
			(for instance due to a call of DeleteMeasurementChannals). </summaryE>
            <valueE>	[true], if this channel is still alive. </valueE>
        </member>
        <member name="P:Goldammer.MAIMeasurementChannelBase.Value">
            <summary>	Gibt den Index diese Kanals in der Messkanalliste des ChannelControllers zurück. </summary>
            <summaryE> returns the index of this measurement channel in the measurement channel list of its 
		  channel controller. </summaryE>
            <value>	Messkanallistennummer. </value>
            <valueE> index of this measurement channel. </valueE>
        </member>
        <member name="T:Goldammer.MAIMeasurementChannelBase">
            <summary>	Basisklasse aller Messkanäle.  </summary>
            <summaryE>	base class for all  measurement channels.  </summaryE>
        </member>
        <member name="M:Goldammer.MAIRealtimeFunctionBase.#ctor(Goldammer.MAIDevice,Goldammer.MAIMeasurementChannelAD)">
            <summary>	Constructor. </summary>
            <remarks>	Fmensing, 27.07.2011. </remarks>
            <param name="AIDevice"> 	[in,out] If non-null, the ai device. </param>
            <param name="AIChannel">	[in,out] If non-null, the ai channel. </param>
        </member>
        <member name="T:Goldammer.MAIRealtimeFunctionBase">
            <summary>	Basisklasse für alle Onlinefunktionen.  </summary>
            <summaryE>	base class for all online functions.  </summaryE>
        </member>
    </members>
</doc>